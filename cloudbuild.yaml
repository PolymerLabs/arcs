steps:
# Pull most recent Docker image.
- id: 'pull-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['pull', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:head']
  waitFor: ['-']

# Build the new Docker image (caching from the pre-built one)
- id: 'build-image'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'build',
    '--cache-from=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:head',
    '--tag=gcr.io/$PROJECT_ID/${_IMAGE_NAME}:head',
    '--tag=arcs-base',
    '.',
  ]
  waitFor: ['pull-image']

# Push updated Docker image to Container Registry.
- id: 'push-image'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}:head']
  waitFor: ['build-image']

# Run non-integration tests.
- id: 'presubmit'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'run',
    '--network=cloudbuild',
    '--rm', 'arcs-base',
    'tools/cloud-presubmit',
    '--bazelrc=tools/gcb.bazelrc',
  ]
  waitFor: ['build-image']

# Build Android integration test apks.
- id: 'build-test-apks'
  name: 'gcr.io/cloud-builders/docker'
  args: [
    'run',
    '--network=cloudbuild',
    '--volume', '/workspace:/workspace',
    '--rm', 'arcs-base',
    'tools/build-test-apks',
    '--bazelrc=tools/gcb.bazelrc',
  ]
  waitFor: ['build-image']

# Run Android integration test in Firebase Test Lab.
- id: 'android-firebase-test-lab'
  name: 'gcr.io/cloud-builders/gcloud'
  args: [
    'firebase',
    'test',
    'android',
    'run',
    '--type', 'instrumentation',
    '--app', '/workspace/testapp.apk',
    '--test', '/workspace/e2e.apk',
    '--device', 'model=Pixel2,version=29,locale=en,orientation=portrait',
    '--use-orchestrator',
  ]
  waitFor: ['build-test-apks']

images:
- 'gcr.io/$PROJECT_ID/${_IMAGE_NAME}'

timeout: 3600s # 60 mins, just in case.
logsBucket: 'gs://arcs-github-gcb-logs'
options:
  machineType: 'N1_HIGHCPU_32'

substitutions:
  _IMAGE_NAME: arcs
