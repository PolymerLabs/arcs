// Copyright 2021 Google LLC.
//
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
//
// Code distributed by Google as part of this project is also subject to an additional IP rights
// grant found at
// http://polymer.github.io/PATENTS.txt

/// !!!
/// TODO(b/183554828): Update these tests to make use of compile-time policy
///   checking when ready!
/// !!!

meta
  namespace: arcs.android.integration.policy

import './particles.arcs'

/// Scenario: A policy-compliant recipe with @persistent handles egresses data
/// and stores ingress-restricted values to disk that is never deleted

@egressType('GeneralEgress')
policy SimplePersistencePolicy {
  @allowedRetention(medium: 'Disk', encryption: false)
  from Thing access {
    b,
    @allowedUsage(label: 'raw', usageType: '*')
    c
  }
}

// Given a recipe is compliant with a policy
@policy('SimplePersistencePolicy')
recipe PersistsEgresses
  // And the recipe's store is marked @persistent
  handle1: create @persistent

  // And the recipe ingresses a schema Thing {a, b, c, d}
  IngressThing
    input: handle1

  // And the recipe egresses Thing {a, b}
  EgressAB
    output: handle1

/// Scenario: A policy-compliant recipe with @ttl handles egresses data and
/// stores ingress-restricted values to RAM that are deleted when the TTL expires
/// and at the runtimeâ€™s end.

@egressType('GeneralEgress')
policy SimpleTtlPolicy {
  @allowedRetention(medium: 'Ram', encryption: false)
  from Thing access {
    a,
    b
  }
}

// Given a recipe is compliant with a policy
@policy('SimplePersistencePolicy')
recipe TtlEgresses
  // And the recipe's stores are marked @ttl('2h') and @ttl('5d')
  handle1: create @ttl('2h')
  handle2: create @ttl('5d')

  // And the recipe ingresses a schema Thing {a, b, c, d}
  IngressThing
    input: handle1

  // And the recipe egresses Thing {a, b}
  EgressAB
    output: handle1

  // And the recipe ingresses a schema Thing {a, b, c, d}
  IngressThing
    input: handle2

  // And the recipe egresses Thing {b, c}
  EgressBC
    output: handle2
