// Copyright 2021 Google LLC.
//
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
//
// Code distributed by Google as part of this project is also subject to an additional IP rights
// grant found at
// http://polymer.github.io/PATENTS.txt

meta
  namespace: arcs.android.integration.policy

import './particles.arcs'

/// Scenario: No data is written
// // TODO(b/183554828): Ingress restricting should allow the fields mentioned
// //  in the policy to be persisted.
// @egressType('GeneralEgress')
// policy NoDataWrittenPolicy {
//   @allowedRetention(medium: 'Disk', encryption: false)
//   from Thing access {
//     a,
//     b,
//     c,
//     d
//   }
// }

// Given a recipe that is compliant with a policy
// @policy('NoDataWrittenPolicy')
recipe NoDataWritten
  // And the recipe ingresses a schema Thing {a, b, c, d}
  handle1: create

  IngressThing
    input: handle1

  // And the recipe does not egress anything

/// Scenario: A policy-compliant recipe with @persistent handles egresses data
/// and stores ingress-restricted values to disk that is never deleted

@egressType('GeneralEgress')
policy SimplePersistencePolicy {
  @allowedRetention(medium: 'Disk', encryption: false)
  from Thing access {
    b,
    @allowedUsage(label: 'raw', usageType: '*')
    c
  }
}

// Given a recipe is compliant with a policy
@policy('SimplePersistencePolicy')
recipe PersistsEgresses
  // And the recipe's store is marked @persistent
  handle1: create @persistent

  // And the recipe ingresses a schema Thing {a, b, c, d}
  IngressThing
    input: handle1

  // And the recipe egresses Thing {a, b}
  EgressAB
    output: handle1
