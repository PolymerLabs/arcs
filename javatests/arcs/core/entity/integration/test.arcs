meta
  namespace: arcs.core.entity.integration

schema Package

schema TestEntity
  text: Text
  number: Number
  list: List<Long>
  app: &Package

schema TestInline
  inline: inline InlineEntity {long: Long, text: Text}
  inlines: [inline AnotherInlineEntity {int: Int}]
  inlineList: List<inline MoreInline {mostInline: [inline MostInline {text: Text}]}>

schema ReferencedSchema
  number: Int

schema TestReferences
  references: [&ReferencedSchema]
  referenceList: List<&ReferencedSchema>

particle TestParticle
  entities: reads writes [TestEntity {text, number, list, app} [text == ?]]
  hat: reads writes Hat {style}
  person: reads writes Person {name, age, bestFriend, favoriteWords, coolnessIndex} [age > 0]
  coolnessIndex: reads writes CoolnessIndex {pairsOfShoesOwned, isCool, hat}
  friend: reads writes Friend {name}


particle TestInlineParticle
  entities: reads writes [TestInline {inline, inlines, inlineList}]

particle TestReferencesParticle
  entities: reads writes [TestReferences {references, referenceList}]

recipe TestRecipe
  entities: create

  TestParticle
    entities: entities

schema Hat
  style: Text

schema CoolnessIndex
  pairsOfShoesOwned: Int
  isCool: Boolean
  hat: &Hat

schema Friend
  name: Text

schema Person
  name: Text
  age: Number
  bestFriend: &Friend
  favoriteWords: List<Text>
  coolnessIndex: inline CoolnessIndex {pairsOfShoesOwned, isCool, hat}

