schema Action
  id: Text
  action: Text
  timestampInMs: Number

schema Selection
  id: Text
  selection: Text
  sensitiveSelection: Text
  timestampInMs: Number

schema ActionAtSelection
  id: Text
  actionDetails: Text

@intendedPurpose('Test the implementation of policy verification.')
@egressType('FederatedAggregation')
policy TestPolicy {

  from Action access {
    id
    action,

    @allowedUsage(label: 'truncatedToDays', usageType: '*')
    timestampInMs,
  }

  from Selection access {
    id,
    selection,
    // sensitiveSelection is not allowed

    @allowedUsage(label: 'raw', usageType: 'join')
    timestampInMs,
  }
}

@isolated
particle ActionTimestampToDays
  // Should ideally be as follows, but we don't have information about
  // type variables in DFA yet.
  //
  // input: reads [~a with {timestampInMs: Number}]
  // output: writes [~a]
  // claim output.timestampInMs is truncatedToDays
  input: reads [Action {
     id,
     action,
     timestampInMs}]
  output: writes [Action {
     id,
     action,
     timestampInMs}]
  claim output.timestampInMs derives from input.timestampInMs and is truncatedToDays
  // The following claims are not needed if we use type variables as mentioned above.
  claim output.id derives from input.id
  claim output.action derives from input.action

particle Egress_TestPolicy
  joinData: reads [ActionAtSelection {
    id,
    actionDetails}]

particle Egress_AnotherPolicy
  joinData: reads [ActionAtSelection {
    id,
    actionDetails}]

particle Egress_YetAnotherPolicy
  joinData: reads [ActionAtSelection {
    id,
    actionDetails}]

//-----------------------------------------------------------
// Complying by not accessing restricted fields.
//-----------------------------------------------------------
@isolated
particle JoinActionSelection_EgressUnrestrictedFields
  action: reads [Action {id, action}]
  selection: reads [Selection {id, selection}]
  joinData: writes [ActionAtSelection {id, actionDetails}]

recipe EgressUnrestrictedFields
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  JoinActionSelection_EgressUnrestrictedFields
    action: action
    selection: selection
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------
// Complying by redacting `timestampInMs` in `selection`.
//-----------------------------------------------------------
@isolated
particle JoinActionSelection_EgressRedactedField
  action: reads [Action {id, action, timestampInMs}]
  selection: reads [Selection {id, selection}]
  joinData: writes [ActionAtSelection {id, actionDetails}]

recipe EgressRedactedField
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  ActionTimestampToDays
    input: action
    output: actionRedacted
  JoinActionSelection_EgressRedactedField
    action: actionRedacted
    selection: selection
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------------------
// Policy violation by egressing `sensitiveSelection` in `Selection`.
//-----------------------------------------------------------------------
@isolated
particle JoinActionSelection_EgressRestrictedFields
  action: reads [Action {id, action, timestampInMs}]
  selection: reads [Selection {id, selection, sensitiveSelection}]
  joinData: writes [ActionAtSelection {id, actionDetails}]

recipe EgressRestrictedFields
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  ActionTimestampToDays
    input: action
    output: actionRedacted
  JoinActionSelection_EgressRestrictedFields
    action: actionRedacted
    selection: selection
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------------------
// Policy violation by egressing `timestampInMs` in `Selection`,
// which can only be used for joins.
//-----------------------------------------------------------------------
@isolated
particle JoinActionSelection_EgressJoinOnlyField
  action: reads [Action {id, action, timestampInMs}]
  selection: reads [Selection {id, selection, sensitiveSelection}]
  joinData: writes [ActionAtSelection {id, actionDetails}]

recipe EgressJoinOnlyField
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  ActionTimestampToDays
    input: action
    output: actionRedacted
  JoinActionSelection_EgressJoinOnlyField
    action: actionRedacted
    selection: selection
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------------------
// Policy violation by not redacting `timestampInMs` in `Action`.
//-----------------------------------------------------------------------
recipe EgressUnredactedField
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  JoinActionSelection_EgressRedactedField
    action: action
    selection: selection
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------------------
// Policy violation by having multiple egress particles.
//-----------------------------------------------------------------------
recipe MultipleEgressParticles
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  JoinActionSelection_EgressRedactedField
    action: action
    selection: selection
    joinData: joinData
  // Egress_AnotherPolicy
  //   joinData: joinData
  // Egress_YetAnotherPolicy
  //   joinData: joinData
  Egress_TestPolicy
    joinData: joinData
  Egress_TestPolicy
    joinData: joinData

//-----------------------------------------------------------------------
// Policy violation due to invalid egress particle `Egress_AnotherPolicy`.
//-----------------------------------------------------------------------
recipe InvalidEgressParticles
  action: create 'action'
  selection: create 'selection'
  joinData: create @ttl('30m')
  JoinActionSelection_EgressRedactedField
    action: action
    selection: selection
    joinData: joinData
  Egress_AnotherPolicy
    joinData: joinData
