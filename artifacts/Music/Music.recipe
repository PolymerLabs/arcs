// Copyright (c) 2018 Google Inc. All rights reserved.
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
// Code distributed by Google as part of this project is also
// subject to an additional IP rights grant found at
// http://polymer.github.io/PATENTS.txt

import '../Common/List.manifest'
import '../Common/Description.schema'
import '../Places/ExtractLocation.manifest'
import '../Things/GeoCoordinates.schema'
import 'Artist.schema'
import 'PlayRecord.schema'

store Store0 of Artist 'gleamedArtist' in 'artist.json'
store Store1 of [PlayRecord] 'myNowPlayingHistory' in 'playingNowHistory.json'

particle ShowArtist in 'source/ShowArtist.js'
  in Artist artist
  in [PlayRecord] artistPlayHistory
  out [Description] descriptions
  consume root
    provide nearbyShows
    provide nowPlayingList
      handle artistPlayHistory
  description `Learn more about ${artist}`

particle FilterToArtist in 'source/FilterToArtist.js'
  in Artist artist
  in [PlayRecord] fullPlayHistory
  inout [PlayRecord] artistPlayHistory

particle PlayRecordRenderer in 'source/PlayRecordRenderer.js'
  in PlayRecord playRecord
  consume item

recipe
  map 'gleamedArtist' as artist
  map 'myNowPlayingHistory' as fullPlayHistory
  create as artistPlayHistory
  FilterToArtist
    artist <- artist
    fullPlayHistory <- fullPlayHistory
    artistPlayHistory = artistPlayHistory
  ShowArtist
    artist <- artist
    artistPlayHistory <- artistPlayHistory
    consume root
      provide nowPlayingList as slot0
  List
    items = artistPlayHistory
    consume root as slot0
  ItemMultiplexer
    list = artistPlayHistory
    hostedParticle = PlayRecordRenderer
  description `${ShowArtist}`

schema Show
  Text name
  Text venue
  Text date
  Text time
  Text imageUrl

particle FindShows in 'source/FindShows.js'
  in Artist artist
  in GeoCoordinates location
  inout [Show] shows
  consume nearbyShows
    provide listing
      handle shows
  description `Find nearby shows by ${artist}`

particle ShowRenderer in 'source/ShowRenderer.js'
  in Show show
  consume item

recipe
  use as artist
  create as shows
  map 'SYSTEM_user' as user
  create as location
  ExtractLocation
    user <- user
    location -> location
  FindShows
    location <- location
    artist <- artist
    shows = shows
    consume nearbyShows
      provide listing as slot0
  List
    items = shows
    consume root as slot0
  ItemMultiplexer
    list = shows
    hostedParticle = ShowRenderer
  description `${FindShows}`

