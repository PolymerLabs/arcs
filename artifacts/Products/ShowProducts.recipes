// @license
// Copyright (c) 2018 Google Inc. All rights reserved.
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
// Code distributed by Google as part of this project is also
// subject to an additional IP rights grant found at
// http://polymer.github.io/PATENTS.txt

// import '../Common/List.manifest'
import 'Product.schema'

particle ShowProduct in 'source/ShowProduct.js'
  in Product product
  consume item
    provide annotation

// Copied from Common/List.manifest and tweaked
particle List in '../Common/source/List.js'
  in [~a] items
  consume root
    provide preamble
    must provide set of item // <<< does NOT provide annotation
      handle items
    provide action
      handle items
    provide postamble
  description `show ${items}`

shape HostedParticleShape
  in ~a *
  consume item
  provide annotation // <<< This is new

particle ItemMultiplexer in '../Common/source/Multiplexer.js'
  host HostedParticleShape hostedParticle
  in [~a] list
  consume set of item
    provide set of annotation // <<< This is new


recipe ProductList &showShopList
  copy #shoplist as newlist
  List
    items = newlist
  ItemMultiplexer
    list = newlist
    hostedParticle = ShowProduct
  description `show ${List.items}`

// TODO(sjmiles): find out why this doesn't work
//recipe MuxedProductItem &muxProduct
//  use #shoplist as items
//  ItemMultiplexer
//    list = items
//    hostedParticle = ShowProduct
//recipe ProductListVerbs &showShopListVerbs
//  copy #shoplist as newlist
//  List
//    items = newlist
//  &muxProduct
//  description `show ${List.items}`

// TODO(mmandlis|piotr): once coalesce-recipes is re-enabled, replace above recipe with:
// recipe &showList &show
//   List
// recipe
//   Multiplexer // with 'item' slot
//     hostedParticle = ShowProduct

// Show [person]'s wishlist
recipe
  map #wishlist as wishlist
  &showShopList
