# Copyright (c) 2017 Google Inc. All rights reserved.
# This code may only be used under the BSD style license found at
# http://polymer.github.io/LICENSE.txt
# Code distributed by Google as part of this project is also
# subject to an additional IP rights grant found at
# http://polymer.github.io/PATENTS.txt

import '../../../particles/ShowProducts/ShowProducts.manifest'
import '../../../particles/ManageProducts/ManageProducts.manifest'
import '../../../particles/Recommend/Recommend.manifest'
import '../../../particles/Chooser/Chooser.manifest'
import '../../../particles/GiftList/GiftList.manifest'
import '../../../particles/Interests/Interests.manifest'
import '../../../particles/ProductMultiplexer/ProductMultiplexer.manifest'
import '../../../particles/ProductMultiplexer2/ProductMultiplexer2.manifest'
import '../../../particles/AlsoOn/AlsoOn.manifest'
import '../../../particles/Arrivinator/Arrivinator.manifest'
import '../../../particles/ManufacturerInfo/ManufacturerInfo.manifest'

# See [person]'s wishlist
recipe
  map #wishlist as wishlist
  ShowProducts
    list <- wishlist

# Create shortlist with [product, ...] and suggest similar products from [person]'s wish list
recipe
  Chooser.choices -> Recommend.recommendations
  #Chooser.resultList -> ManageProducts.list
  Chooser.resultList -> ShowProducts.list
  Chooser.resultList -> Recommend.known
  Chooser.resultList -> ProductMultiplexer2.products
  Chooser.choices -> ProductMultiplexer2.others
  map #wishlist as wishlist
  copy #shortlist as shortlist
  slot as slot0
  Recommend
    population <- wishlist
  ShowProducts
    list <- shortlist
  #ManageProducts
    #list = shortlist
    consume root as slot0
      provide annotation as slot1
  ProductMultiplexer2
    hostedParticle = AlsoOn
    consume annotation as slot1

# Buying for [person]'s [occasion] in [timeframe]? Product [X] arrives too late.
recipe
  map as view1
  use as view2
  use as view3
  GiftList
    person <- view1
  ProductMultiplexer
    products <- view2
    hostedParticle = Arrivinator
  ProductMultiplexer
    products <- view3
    hostedParticle = Arrivinator

# Check manufacturer information for products.
recipe
  use #shortlist as shortlist
  ProductMultiplexer
    products <- shortlist
    hostedParticle <- ManufacturerInfo

# TODO: Check for newer versions, e.g. there is a new version of [product].
# TODO: [Manufacturer] recommends [product] instead of [product] for 13 year olds.
# TODO: See awards, e.g. [product] winning the [award].

# Recommendations based on Claire's interest in field hockey.
recipe
  Interests

# Experimental recipes
#import '../../../particles/ProductFilter/ProductFilter.manifest'
#import '../../../particles/ProductIsBook/ProductIsBook.manifest'
#recipe
#  ShowProducts.list -> ProductFilter.results
#  map #shortlist as shortlist
#  create as books
#  ProductFilter
#    products <- shortlist
#    hostedParticle = ProductIsBook
#    results -> books

# TODO: move these to separate manifests for claire's wishlist / page
view PageProducts of [Product] #shortlist in 'products.json'
  description `products from your browsing context`
view ClairesWishlist of [Product] #wishlist in 'wishlist.json'
  description `Claire's wishlist`
view APerson of Person in 'people.json'
#view ThePeople of Person in 'people.json'
