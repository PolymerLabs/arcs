// @license
// Copyright (c) 2018 Google Inc. All rights reserved.
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
// Code distributed by Google as part of this project is also
// subject to an additional IP rights grant found at
// http://polymer.github.io/PATENTS.txt

// These particles and recipes are used to test inline suggestion slots.

import './Cake.manifest'

particle List in '../Common/source/List.js'
  items: reads [~a]
  root: consumes Slot
    item: provides [Slot {handle: items}]
  description `show ${items}`

interface MakeCakeInterface
  reads Cake
  item: consumes Slot
  special: provides? Slot

particle CakeMuxer in '../Common/source/Multiplexer.js'
  hostedParticle: hosts MakeCakeInterface
  list: reads [Cake]
  item: consumes [Slot]
    special: provides? [Slot]

recipe &makeCakes
  cakesHandle: map #cakes
  List
    items: cakesHandle
  CakeMuxer
    list: cakesHandle
    hostedParticle: MakeCake
  description `show ${List.items}`

interface LightCandleInterface
  reads Cake
  candles: consumes Slot

particle CandleMuxer in '../Common/source/Multiplexer.js'
  hostedParticle: hosts LightCandleInterface
  list: reads [Cake]
  candles: consumes [Slot]


// TODO: this suggestion uses collection handle and should be inlined in the set-slot.
// recipe &lightCakes
//   map #cakes as cakesHandle
//   slot #special as candlesSlot
//   CandleMuxer
//     list: cakesHandle
//     hostedParticle: LightCandles
//     consumes candles as candlesSlot
//   description `light candles for ${CandleMuxer.list}`

recipe
  LightCandles

store AllCakes of [Cake] #cakes in 'cakes.json'
