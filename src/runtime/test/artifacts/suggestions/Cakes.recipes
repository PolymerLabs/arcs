// @license
// Copyright (c) 2018 Google Inc. All rights reserved.
// This code may only be used under the BSD style license found at
// http://polymer.github.io/LICENSE.txt
// Code distributed by Google as part of this project is also
// subject to an additional IP rights grant found at
// http://polymer.github.io/PATENTS.txt

// These particles and recipes are used to test inline suggestion slots.

import './Cake.manifest'

particle List in '../Common/source/List.js'
  in [~a] items
  consume root
    must provide set of item
      handle items
  description `show ${items}`

interface MakeCakeInterface
  in Cake *
  consume item
  provide special

particle CakeMuxer in '../Common/source/Multiplexer.js'
  host MakeCakeInterface hostedParticle
  in [Cake] list
  consume set of item
    provide set of special

recipe &makeCakes
  map #cakes as cakesHandle
  List
    items = cakesHandle
  CakeMuxer
    list = cakesHandle
    hostedParticle = MakeCake
  description `show ${List.items}`

interface LightCandleInterface
  in Cake *
  consume candles

particle CandleMuxer in '../Common/source/Multiplexer.js'
  host LightCandleInterface hostedParticle
  in [Cake] list
  consume set of candles


// TODO: this suggestion uses collection handle and should be inlined in the set-slot.
// recipe &lightCakes
//   map #cakes as cakesHandle
//   slot #special as candlesSlot
//   CandleMuxer
//     list = cakesHandle
//     hostedParticle = LightCandles
//     consume candles as candlesSlot
//   description `light candles for ${CandleMuxer.list}`

recipe
  LightCandles

store AllCakes of [Cake] #cakes in 'cakes.json'
