#!/bin/bash

set -e

invoke() {
  em++ -s "EXPORTED_FUNCTIONS=['_malloc', '_free']" -std=c++11 -O3 test-particle.cc -o $1
}

echo "[Extracting config]"
invoke wrapper.js

BASE=$(grep -o "DYNAMIC_BASE=[0-9]\+" wrapper.js)
TOP=$(grep -o "DYNAMICTOP_PTR=[0-9]\+" wrapper.js)
MEM=$(grep -o 'env\["__memory_base"\]=[0-9]\+' wrapper.js | grep -o "[0-9]*")

CTMP=cfg.tmp
cat <<EOF | tee $CTMP
// tslint:disable
// Temporarily generated by the wasm build process (but needs to be checked into src)
export const WasmConfig = {
  MEMORY_BASE: $MEM,
  ${BASE/=/: },
  ${TOP/=/: }
};
EOF

CFG=../runtime/wasm-config.ts
diff $CTMP $CFG || cp -v $CTMP $CFG

rm wrapper.* $CTMP

echo -e "\n[Building module]"
invoke output.wasm

if which wasm2wat >/dev/null; then
  wasm2wat output.wasm > output.wat
  grep "^  (import" output.wat
fi
