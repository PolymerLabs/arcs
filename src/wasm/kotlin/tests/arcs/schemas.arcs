// This is a duplicate of src/wasm/cpp/tests/schemas.arcs

particle HandleSyncUpdateTest in 'test-module.wasm'
  sng: reads * {num: Number, txt: Text, lnk: URL, flg: Boolean, ref: Reference<Foo {val: Text}>}
  col: reads [* {num: Number, txt: Text, lnk: URL, flg: Boolean, ref: Reference<Foo {val: Text}>}]
  res: writes [* {txt: Text, num: Number}]

recipe HandleSyncUpdateTest
  HandleSyncUpdateTest
    sng: reads h1
    col: reads h2
    res: writes h3



particle RenderTest in 'test-module.wasm'
  root: consumes Slot
  flags: reads * {template: Boolean, model: Boolean}

recipe RenderTest
  s1: slot 'rootslotid-root'
  RenderTest
    root: consumes s1
    flags: reads h1



resource DataResource
  start
  [{"txt": "initial"}]
store DataStore of * {txt: Text} in DataResource

particle AutoRenderTest in 'test-module.wasm'
  root: consumes Slot
  data: reads * {txt: Text}

recipe AutoRenderTest
  h1: copy DataStore
  s1: slot 'rootslotid-root'
  AutoRenderTest
    root: consumes s1
    data: reads h1



particle EventsTest in 'test-module.wasm'
  root: consumes Slot
  output: writes * {txt: Text}

recipe EventsTest
  s1: slot 'rootslotid-root'
  EventsTest
    root: consumes s1
    output: writes h1



particle ServicesTest in 'test-module.wasm'
  output: writes [* {call: Text, tag: Text, payload: Text}]

recipe ServicesTest
  ServicesTest
    output: writes h1



particle MissingRegisterHandleTest in 'test-module.wasm'
  input: reads * {n: Number}

recipe MissingRegisterHandleTest
  MissingRegisterHandleTest
    input: reads h1



particle EntityClassApiTest in 'test-module.wasm'
  data: reads * {num: Number, txt: Text, lnk: URL, flg: Boolean, ref: Reference<Foo {val: Text}>}
  empty: reads * {}
  errors: writes [* {msg: Text}]

recipe EntityClassApiTest
  EntityClassApiTest
    data: reads h1
    empty: reads h2
    errors: writes h3



particle SpecialSchemaFieldsTest in 'test-module.wasm'
  fields: reads * {for: Text, internal_id: Number}
  errors: writes [* {msg: Text}]

recipe SpecialSchemaFieldsTest
  SpecialSchemaFieldsTest
    fields: reads h1
    errors: writes h2



particle ReferenceClassApiTest in 'test-module.wasm'
  data: reads * {num: Number, txt: Text}
  errors: writes [* {msg: Text}]

recipe ReferenceClassApiTest
  ReferenceClassApiTest
    data: reads h1
    errors: writes h2



particle SingletonApiTest in 'test-module.wasm'
  root: consumes Slot
  inHandle: reads * {num: Number, txt: Text}
  outHandle: writes * {num: Number, txt: Text}
  ioHandle: reads writes * {num: Number, txt: Text}

recipe SingletonApiTest
  s1: slot 'rootslotid-root'
  SingletonApiTest
    root: consumes s1
    inHandle: reads h1
    outHandle: writes h2
    ioHandle: reads writes h3



particle CollectionApiTest in 'test-module.wasm'
  root: consumes Slot
  inHandle: reads [* {num: Number}]
  outHandle: writes [* {num: Number, txt: Text, flg: Boolean}]
  ioHandle: reads writes [* {num: Number, txt: Text, flg: Boolean}]

recipe CollectionApiTest
  s1: slot 'rootslotid-root'
  CollectionApiTest
    root: consumes s1
    inHandle: reads h1
    outHandle: writes h2
    ioHandle: reads writes h3



particle ReferenceHandlesTest in 'test-module.wasm'
  sng: reads writes Reference<* {num: Number, txt: Text}>
  col: reads writes [Reference<* {num: Number, txt: Text}>]
  res: writes [* {txt: Text}]

recipe ReferenceHandlesTest
  ReferenceHandlesTest
    sng: reads writes h1
    col: reads writes h2
    res: writes h3



particle SchemaReferenceFieldsTest in 'test-module.wasm'
  input: reads * {num: Number, txt: Text, ref: Reference<* {val: Text}>}
  output: writes * {num: Number, txt: Text, ref: Reference<* {val: Text}>}
  res: writes [* {txt: Text}]

recipe SchemaReferenceFieldsTest
  SchemaReferenceFieldsTest
    input: reads h1
    output: writes h2
    res: writes h3
