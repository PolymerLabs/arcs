-----[header]-----
Kotlin Connection Type Generation

Expectations can be updated with:
$ ./tools/sigh updateCodegenUnitTests
-----[end_header]-----

-----[name]-----
generates type for singleton entity
-----[input]-----
particle Module
  data: reads Thing {name: Text}
-----[results]-----
arcs.core.data.SingletonType(arcs.core.data.EntityType(Module_Data.SCHEMA))
-----[end]-----

-----[name]-----
generates type for singleton reference
-----[input]-----
particle Module
  data: reads &Thing {name: Text}
-----[results]-----
arcs.core.data.SingletonType(
    arcs.core.data.ReferenceType(arcs.core.data.EntityType(Module_Data.SCHEMA))
)
-----[end]-----

-----[name]-----
generates type for collection of entities
-----[input]-----
particle Module
  data: reads [Thing {name: Text}]
-----[results]-----
arcs.core.data.CollectionType(arcs.core.data.EntityType(Module_Data.SCHEMA))
-----[end]-----

-----[name]-----
generates type for collection of references
-----[input]-----
particle Module
  data: reads [&Thing {name: Text}]
-----[results]-----
arcs.core.data.CollectionType(
    arcs.core.data.ReferenceType(arcs.core.data.EntityType(Module_Data.SCHEMA))
)
-----[end]-----

-----[name]-----
generates type for collection of tuples
-----[input]-----
particle Module
  data: reads [(&Thing {name: Text}, &Other {age: Number})]
-----[results]-----
arcs.core.data.CollectionType(
    arcs.core.data.TupleType.of(
        arcs.core.data.ReferenceType(arcs.core.data.EntityType(Module_Data_0.SCHEMA)),
        arcs.core.data.ReferenceType(arcs.core.data.EntityType(Module_Data_1.SCHEMA))
    )
)
-----[end]-----

-----[name]-----
does not use fully qualified name when in the same package
-----[opts]-----
{"namespace":"my.own.namespace"}
-----[input]-----
meta
  namespace: my.own.namespace

particle Module
  data: reads Thing {name: Text}
-----[results]-----
arcs.core.data.SingletonType(arcs.core.data.EntityType(Module_Data.SCHEMA))
-----[end]-----

-----[name]-----
uses fully qualified name when in different package
-----[opts]-----
{"namespace":"my.own.namespace"}
-----[input]-----
meta
  namespace: foo.bar.baz

particle Module
  data: reads Thing {name: Text}
-----[results]-----
arcs.core.data.SingletonType(arcs.core.data.EntityType(foo.bar.baz.Module_Data.SCHEMA))
-----[end]-----
