import '../List/List.arcs'
import 'ProductItem.arcs'
import 'Gifts.arcs'
import 'Recommend.arcs'
import 'Manufacturer.arcs'
import 'Interests.arcs'

// Generic 'Products' recipe. It has no description so it will never
// surface as a Suggestion by itself, only when Coalesced.
// TODO(sjmiles): ironically, not part of the Products demo. Remove?

recipe Products
  products: use *
  Items
    list: any products
  ItemMultiplexer
    list: any products
    hostedParticle: any ProductItem

// Entry point for Products Demo: create a shopping list from context data

recipe CreateShoppingList
  products: copy *
  Items
    list: any products
  ItemMultiplexer
    list: any products
    hostedParticle: any ProductItem
  description `create shopping list from ${Items.list}`

// Convert simple shopping list to a shopping list for an occasion, like a birthday
// add-on for Shopping List

recipe ShopForOccasion
  shoplist: use *
  person: map
  GiftList
    person: any person
  SimpleAnnotationMultiplexer
    list: any shoplist
    hostedParticle: any Arrivinator
    annotation: consumes annotationSlot
  // description derives from GiftList particle

// Make items from wishlist available to add to Shopping List
// add-on for Shopping List

recipe UseWishlist
  wishlist: map #wishlist
  recommendations: create #volatile
  person: use *
  shoplist: use *
  // annotates shoplist
  ChoicesMultiplexer
    // This is probably wrong, but it works now (instead of annotationSlot)
    // choice: consumes annotationSlot
    choice: consumes actionSlot
    list: any shoplist
    choices: any wishlist
    hostedParticle: any AlsoOn
  // recommend products from wishlist
  Recommend
    population: any wishlist
    known: any shoplist
    recommendations: any recommendations
  // present recommendations for adding to shoplist
  Chooser
    action: consumes actionSlot
    person: any person
    choices: any recommendations
    resultList: any shoplist


