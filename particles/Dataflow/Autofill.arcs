// Autofill Example.
// From: https://docs.google.com/presentation/d/1i-mTjlyWFSHYxvcJj98fIkUkHSu7ya3COa2wZeiqyi8/edit#slide=id.g5907ddee85_0_32

import './Datastores.arcs'

schema CapturedEntity
  entity: Text
  source: Text

particle ContentCapture in 'empty.js'
  recentApps: reads * {}
  text: writes Input {}
  source: writes Source {}
  claim source is trusted

particle TextClassifier in 'empty.js'
  text: reads Input {}
  entities: writes [Entity {}]

particle CaptureEntity in 'empty.js'
  entities: reads [Entity {}]
  source: reads Source {}
  capturedEntities: writes [CapturedEntity]

particle AutofillMatcher in 'empty.js'
  autofillContext: reads AutofillContext {}
  capturedEntities: reads [CapturedEntity]

  // By outputting a reference, the dataflow analyser can see that this must
  // have come from capturedEntities only.
  autofillEntity: writes &CapturedEntity

particle AutofillUX in 'empty.js'
  autofillEntity: reads &CapturedEntity

  // Check that the autofill dialog is being filled with an entity from a
  // recent trusted source.
  // TODO: Use AND instead of OR for this check, once the analyser can track
  // the origin of individual fields inside an entity/reference.
  check autofillEntity is trusted or is from store 'recent-apps'

recipe AutofillRecipe
  recentApps: use RecentApps
  text: create *
  source: create *
  classifiedEntities: create *
  capturedEntities: create *
  autofillContext: create *
  autofillEntity: create *

  ContentCapture
    recentApps: reads recentApps
    text: writes text
    source: writes source
  TextClassifier
    text: reads text
    entities: writes classifiedEntities
  CaptureEntity
    entities: reads classifiedEntities
    source: reads source
    capturedEntities: writes capturedEntities
  AutofillMatcher
    autofillContext: reads autofillContext
    capturedEntities: reads capturedEntities
    autofillEntity: writes autofillEntity
  AutofillUX
    autofillEntity: reads autofillEntity
