// Tutorial Demo
// Shows how to use Arcs features to create a tic-tac-toe game.
import 'TTTGameSchemas.arcs'
import 'TTTGamedata.arcs'

particle TTTBoard in 'TTTBoard.wasm'
  out [Event] events
  in GameState gameState
  boardSlot: consumes

particle TTTGame in 'TTTGame.wasm'
  inout GameState gameState
  inout Person playerOne
  inout Move playerOneMove
  inout Person playerTwo
  inout Move playerTwoMove
  inout [Event] events
  root: consumes
    boardSlot: provides

particle TTTHumanPlayer in 'TTTHumanPlayer.wasm'
  in GameState gameState
  in [Event] events
  in Person player
  out Move myMove

particle TTTRandomComputer in 'TTTRandomComputer.wasm'
  in GameState gameState
  in Person player
  out Move myMove

recipe GamePlayersDemoRecipe
  use HumanOneStore as playerOne
  use HumanTwoStore as playerTwo
  create #humanMove as playerOneMove
  create #computerMove as playerTwoMove
  TTTGame
    gameState = gameState
    playerOne = playerOne
    playerOneMove = playerOneMove
    playerTwo = playerTwo
    playerTwoMove = playerTwoMove
    events = events
    root: consumes
      boardSlot: provides board
  TTTBoard
      boardSlot: consumes board
      gameState: any gameState
      events: any events
  TTTHumanPlayer
    gameState = gameState
    events <- events
    myMove -> playerOneMove
    player <- playerOne
  TTTRandomComputer
      gameState = gameState
      myMove -> playerTwoMove
      player <- playerTwo
  description `Kotlin Tutorial TicTacToe Demo`


