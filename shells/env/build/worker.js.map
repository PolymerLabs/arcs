{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./source/worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","./devtools/shared/devtools-broker.js","__webpack_exports__","global","DevtoolsBroker","root","window","_arcDebugPromise","Promise","resolve","_arcDebugPromiseResolve","onceConnected","[object Object]","preExistingArcs","arc","this","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/array-set.js","util","has","ArraySet","_array","_set","fromArray","aArray","aAllowDuplicates","set","len","length","add","size","getOwnPropertyNames","aStr","sStr","toSetString","isDuplicate","idx","push","indexOf","Error","at","aIdx","toArray","slice","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64-vlq.js","base64","encode","aValue","digit","encoded","vlq","toVLQSigned","VLQ_BASE","decode","aIndex","aOutParam","continuation","strLen","result","shift","charCodeAt","charAt","shifted","fromVLQSigned","rest","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64.js","intToCharMap","split","number","TypeError","charCode","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/binary-search.js","GREATEST_LOWER_BOUND","LEAST_UPPER_BOUND","search","aNeedle","aHaystack","aCompare","aBias","index","recursiveSearch","aLow","aHigh","mid","Math","floor","cmp","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/quick-sort.js","swap","ary","x","y","temp","doQuickSort","comparator","low","high","round","random","randomIntInRange","pivot","j","q","quickSort","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/source-map-consumer.js","binarySearch","base64VLQ","SourceMapConsumer","aSourceMap","sourceMap","JSON","parse","replace","sections","IndexedSourceMapConsumer","BasicSourceMapConsumer","version","getArg","sources","names","sourceRoot","sourcesContent","mappings","file","_version","map","String","normalize","source","isAbsolute","relative","_names","_sources","_mappings","Mapping","generatedLine","generatedColumn","originalLine","originalColumn","lastOffset","line","column","_sections","url","offset","offsetLine","offsetColumn","generatedOffset","consumer","fromSourceMap","__generatedMappings","_parseMappings","__originalMappings","_charIsMappingSeparator","aSourceRoot","GENERATED_ORDER","ORIGINAL_ORDER","eachMapping","aCallback","aContext","aOrder","context","_generatedMappings","_originalMappings","mapping","join","forEach","allGeneratedPositionsFor","aArgs","needle","_findMapping","compareByOriginalPositions","undefined","lastColumn","smc","_sourceRoot","_generateSourcesContent","_file","generatedMappings","destGeneratedMappings","destOriginalMappings","srcMapping","destMapping","str","segment","end","previousGeneratedColumn","previousOriginalLine","previousOriginalColumn","previousSource","previousName","cachedSegments","originalMappings","compareByGeneratedPositionsDeflated","aMappings","aLineName","aColumnName","aComparator","computeColumnSpans","nextMapping","lastGeneratedColumn","Infinity","originalPositionFor","hasContentsOfAllSources","some","sc","sourceContentFor","aSource","nullOnMissing","urlParse","fileUriAbsPath","scheme","path","generatedPositionFor","constructor","sectionIndex","section","bias","every","content","generatedPosition","sectionMappings","adjustedMapping","./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/util.js","aName","aDefaultValue","arguments","urlRegexp","dataUrlRegexp","aUrl","match","auth","host","port","urlGenerate","aParsedUrl","aPath","part","parts","up","splice","aRoot","aPathUrl","aRootUrl","joined","level","lastIndexOf","Array","substr","supportsNullProto","identity","isProtoString","strcmp","aStr1","aStr2","fromSetString","mappingA","mappingB","onlyCompareOriginal","onlyCompareGenerated","compareByGeneratedPositionsInflated","./node_modules/sourcemapped-stacktrace/sourcemapped-stacktrace.js","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","source_map_consumer","global_mapForUri","isChromeOrEdge","navigator","userAgent","toLowerCase","isFirefox","isSafari","isIE11Plus","document","documentMode","Semaphore","count","pending","incr","decr","flush","whenReady","fn","Fetcher","opts","sem","sync","mapForUri","cacheGlobally","ajax","uri","callback","xhr","xmlhttp","XMLHttpFactories","e","createXMLHTTPObject","that","onreadystatechange","readyState","open","send","fetchScript","onScriptLoad","absUrlRegex","RegExp","status","responseText","mapUri","embeddedSourceMap","atob","test","origin","lastSlash","processSourceMaps","lines","rows","row","parseInt","origPos","formatOriginalPosition","origName","origLine","XMLHttpRequest","ActiveXObject","mapStackTrace","stack","done","fields","expected_fields","regex","skip_lines","fetcher","filter","apply","./node_modules/webpack/buildin/global.js","g","Function","eval","./platform/assert-web.js","assert","message","./platform/devtools-channel-web.js","DevtoolsChannel","_runtime_debug_abstract_devtools_channel_js__WEBPACK_IMPORTED_MODULE_0__","super","addEventListener","_handleMessage","detail","messages","dispatchEvent","CustomEvent","./platform/fs-web.js","fs","./platform/sourcemapped-stacktrace-web.js","./platform/vm-web.js","vm","./runtime/api-channel.js","APIPort","PECOuterPort","PECInnerPort","_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__","_ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__","_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__","_debug_outer_port_attachment_js__WEBPACK_IMPORTED_MODULE_3__","_debug_devtools_connection_js__WEBPACK_IMPORTED_MODULE_4__","ThingMapper","prefix","_prefix","_nextIdentifier","_idMap","Map","_reverseIdMap","thing","requestedId","id","apiChannelMappingId","_newIdentifier","establishThingMapping","hasMappingForThing","identifierForThing","createMappingForThing","isArray","messagePort","_port","_mapper","_messageMap","onmessage","async","_processMessage","_debugAttachment","_attachStack","messageCount","Direct","convert","a","unconvert","LocalMapped","maybeCreateMappingForThing","thingForIdentifier","Mapped","keyprimitive","valueprimitive","List","primitive","v","ByLiteral","clazz","toLiteral","fromLiteral","_testingHook","close","data","messageType","cnt","handler","args","_unprocessArguments","messageBody","exc","console","error","arg","values","then","handlerName","handlePecMessage","isInitializer","identifier","argumentTypes","argument","_processArguments","postMessage","mappingIdArg","registerInitializer","redundant","registerCall","registerRedundantInitializer","type","spec","handles","particle","slotName","event","providedSlots","contentTypes","registerHandler","handle","particleId","barrier","pageSize","forward","cursorId","relevance","storageKey","transformationParticle","transformationSlotName","hostedParticleName","hostedSlotName","handleId","hostedSlotId","recipe","exception","methodName","devtoolsChannel","DevToolsConnected","registerInitializerHandler","onDevToolsConnected","./runtime/debug/abstract-devtools-channel.js","AbstractDevtoolsChannel","debouncedMessages","debouncing","messageListeners","setTimeout","_flush","arcOrId","toString","listeners","msg","arcId","listener","warn","./runtime/debug/devtools-connection.js","DevtoolsConnection","DevtoolsForTests","_platform_devtools_channel_web_js__WEBPACK_IMPORTED_MODULE_1__","_testing_devtools_channel_stub_js__WEBPACK_IMPORTED_MODULE_2__","_devtools_shared_devtools_broker_js__WEBPACK_IMPORTED_MODULE_3__","channel","isConnected","onceConnectedResolve","ensure","./runtime/debug/outer-port-attachment.js","OuterPortAttachment","_platform_sourcemapped_stacktrace_web_js__WEBPACK_IMPORTED_MODULE_0__","_devtoolsChannel","_arcIdString","_speculative","isSpeculative","pecMsgBody","pecMsgCount","stackString","endsWith","_extractStackFrames","timestamp","Date","now","includes","frameString","1","2","location","startsWith","method","target","targetClass","mapped","frame","./runtime/debug/testing/devtools-channel-stub.js","DevtoolsChannelStub","_messages","stringify","./runtime/dom-particle-base.js","DomParticleBase","_ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__","template","stateArgs","_getStateArgs","slot","getSlot","currentSlotName","ct","requestedContentTypes","shouldRender","getTemplate","model","render","templateName","getTemplateName","isRendered","_slotByName","pattern","setParticleDescription","setDescriptionPattern","handleName","clear","entities","idMap","toList","entity","store","all","rawDataArray","raw","rawData","remove","box","userid","item","getUserID","./runtime/dom-particle.js","DomParticle","_shell_components_xen_xen_state_js__WEBPACK_IMPORTED_MODULE_0__","_dom_particle_base_js__WEBPACK_IMPORTED_MODULE_1__","state","_state","props","_props","_setState","config","handleNames","inputs","slotNames","slots","willReceiveProps","update","renderSlot","_views","views","setHandles","configureHandles","_handlesToSync","Set","options","keepSynced","notifySync","_hasProps","_invalidate","delete","_handlesToProps","_debounce","_setProps","func","delay","subkey","startBusy","doneBusy","./runtime/fetch-web.js","local_fetch","fetch","./runtime/multiplexer-dom-particle.js","MultiplexerDomParticle","_transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__","_itemSubIdByHostedSlotId","_connByHostedConn","listHandleName","particleHandleName","hostedParticle","otherMappedHandles","otherConnections","skipConnectionNames","connectionName","otherHandle","mapHandle","_proxy","hostedOtherConnection","connections","find","conn","isCompatibleType","handleIds","constructInnerArc","particleHandle","_mapParticleConnections","setState","list","getListEntries","resolvedHostedParticle","itemHandlePromise","createHandle","primitiveType","itemHandle","renderParticleSpec","keys","slotId","createSlot","_id","constructInnerRecipe","loadRecipe","log","subId","items","renderModel","listIndex","findIndex","assign","hostedConn","forceRenderTemplate","other","entries","./runtime/transformation-dom-particle.js","TransformationDomParticle","_dom_particle_js__WEBPACK_IMPORTED_MODULE_0__","Boolean","combineHostedTemplate","combineHostedModel","propsValues","./runtime/ts-build/converters/jsonldToManifest.js","JsonldToManifest","supportedTypes","jsonld","theClass","obj","classes","properties","subClass","superclass","subclasses","@id","relevantProperties","domains","className","superNames","superName","./runtime/ts-build/entity.js","Entity","_symbols_js__WEBPACK_IMPORTED_MODULE_1__","userIDComponent","isIdentified","components","base","component","./runtime/ts-build/handle.js","Handle","handleFor","_reference_js__WEBPACK_IMPORTED_MODULE_0__","_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__","_particle_spec_js__WEBPACK_IMPORTED_MODULE_3__","_type_js__WEBPACK_IMPORTED_MODULE_4__","restore","entry","entityClass","cloneData","identify","proxy","canRead","canWrite","_particleId","notifyUpdate","notifyDesync","raiseSystemException","badKeys","createIdentity","generateIDComponents","dataClone","Collection","kind","details","onHandleSync","_restore","added","removed","originator","originatorId","onHandleUpdate","onHandleDesync","serialization","_serialize","generateID","Variable","pec","Cursor","parent","_parent","_cursorId","cursorNext","cursorClose","BigCollection","isNaN","stream","getContainedType","entitySchema","./runtime/ts-build/loader.js","Loader","_platform_fs_web_js__WEBPACK_IMPORTED_MODULE_0__","_platform_vm_web_js__WEBPACK_IMPORTED_MODULE_1__","_fetch_web_js__WEBPACK_IMPORTED_MODULE_2__","_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__","_particle_js__WEBPACK_IMPORTED_MODULE_4__","_dom_particle_js__WEBPACK_IMPORTED_MODULE_5__","_multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_6__","_reference_js__WEBPACK_IMPORTED_MODULE_7__","_transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_8__","_converters_jsonldToManifest_js__WEBPACK_IMPORTED_MODULE_9__","html","strings","trim","fileName","normalizeDots","norm","_loadURL","_loadFile","reject","readFile","err","res","text","requireParticle","implFile","src","loadResource","script","Script","filename","displayErrors","self","particleWrapper","importScripts","runInNewContext","unwrapParticle","Particle","Reference","newClientReference","./runtime/ts-build/particle-execution-context.js","ParticleExecutionContext","_handle_js__WEBPACK_IMPORTED_MODULE_0__","_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__","_api_channel_js__WEBPACK_IMPORTED_MODULE_2__","_storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__","idBase","loader","particles","_nextLocalID","pendingLoads","scheduler","keyedProxies","apiPort","setParticleExecutionContext","onDefineHandle","newProxy","onGetBackingStoreCallback","onCreateHandleCallback","onMapHandleCallback","onCreateSlotCallback","onInnerArcRender","renderHostedSlot","onStop","onInstantiateParticle","_instantiateParticle","onSimpleCallback","onConstructArcCallback","onAwaitIdle","idle","Idle","onUIEvent","fireEvent","onStartRender","handlers","_isRendered","substituteSlotNamesForIds","reduce","templateDictionary","templateValue","Render","f","onStopRender","hostParticle","ArcCreateHandle","register","ArcMapHandle","ArcCreateSlot","ArcLoadRecipe","GetBackingStore","ConstructInnerArc","innerArcHandle","proxies","loadParticleClass","capabilities","defaultCapabilitySet","handleMap","registerList","connSpec","connectionMap","isInput","isOutput","rMap","relevances","busy","busyParticlePromises","./runtime/ts-build/particle-spec.js","ConnectionSpec","SlotSpec","ProvidedSlotSpec","ParticleSpec","_type_js__WEBPACK_IMPORTED_MODULE_0__","_recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_1__","_shape_js__WEBPACK_IMPORTED_MODULE_2__","typeVarMap","parentConnection","direction","mergeTypeVariablesByName","isOptional","tags","dependentConnections","dependentArg","dependentConnection","createConnection","compareTypes","slotModel","isRequired","isSet","formFactor","ps","verbs","outputs","description","validateDescription","connectionSpec","modality","connection","instantiateDependentConnections","param","input","primaryVerb","connectionToLiteral","literal","connectionFromLiteral","newInterface","_toShape","results","verb","writeConnection","indent","tag","dependent","consume","provide","cs","./runtime/ts-build/particle.js","_idle","_busy","extraData","_idleResolver","bits","output","exec","bitStr","toManifestString","descriptions","./runtime/ts-build/recipe/type-checker.js","TypeChecker","_type_variable_js__WEBPACK_IMPORTED_MODULE_1__","baseType","newBaseTypeVariable","resolution","newVariable","concreteTypes","resolvedType","hasVariable","_tryMergeTypeVariable","_tryMergeConstraints","getResolution","candidate","canReadSubset","canWriteSuperset","isMoreSpecificThan","variable","collectionType","collectionOf","bigCollectionType","bigCollectionOf","onto","primitiveBase","primitiveOnto","unwrapPair","maybeMergeConstraints","interfaceShape","tryMergeTypeVariablesWith","isTypeContainer","handleType","primitiveHandleType","primitiveConnectionType","newVar","newCollection","newBigCollection","newReference","unwrap","maybeMergeCanReadSubset","maybeMergeCanWriteSuperset","_writeConstraintsApply","_readConstraintsApply","connectionType","writtenType","readType","left","right","resolvedLeft","resolvedRight","leftType","rightType","canMergeConstraints","equals","leftIsSub","leftIsSuper","subclass","superDirection","subDirection","./runtime/ts-build/reference.js","ReferenceMode","_type_js__WEBPACK_IMPORTED_MODULE_1__","_handle_js__WEBPACK_IMPORTED_MODULE_2__","storageProxy","getStorageProxy","referredType","ensureStorageProxy","Unstored","stored","storeReference","Stored","dereference","./runtime/ts-build/schema.js","Schema","_recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__","_entity_js__WEBPACK_IMPORTED_MODULE_3__","_reference_js__WEBPACK_IMPORTED_MODULE_4__","_model","desc","patterns","updateField","field","schema","fieldType1","fieldType2","_typeString","types","toInlineSchemaString","schema1","schema2","typesEqual","otherType","otherSchema","newEntity","classJunk","convertToJsType","fieldType","fieldTypes","validateFieldAndTypes","op","_validateFieldAndTypes","innerType","element","Proxy","sanitizedData","sanitizeData","sanitizeEntry","clone","hideFields","./runtime/ts-build/shape.js","Shape","_fromLiteral","member","_toLiteral","handleFields","slotFields","typeVars","isTypeVar","variableMap","_cloneAndUpdate","typeVar","thisTypeVar","otherTypeVar","typeRef","_handlesToManifestString","_slotsToManifestString","_cloneWithResolutions","canEnsureResolved","maybeEnsureResolved","_equalItems","_equalSlot","otherHandles","sizeCheck","handleMatches","_equalHandle","handleMatch","handleList","resultType","otherSlot","otherItems","compareItem","otherItem","exists","copy","_updateTypeVar","reference","hasProperty","shapeHandle","mustMatch","var","shapeSlot","particleSlot","particleSpec","cloneWithResolutions","restrictType","_restrictThis","handlesMatch","particleSlots","consumedSlot","providedSlot","slotMatches","slotsMatch","matchList","choose","exclusions","thisLevel","pop","newExclusions","constraints","concat","handleOptions","slotOptions","constraint","processTypeList","./runtime/ts-build/storage-proxy.js","StorageProxy","CollectionProxy","VariableProxy","BigCollectionProxy","StorageProxyScheduler","SyncState","_storage_crdt_collection_model_js__WEBPACK_IMPORTED_MODULE_1__","_type_js__WEBPACK_IMPORTED_MODULE_2__","localIDComponent","listenerAttached","synchronized","none","observers","updates","baseForNewID","RaiseSystemException","InitializeProxy","_onUpdate","SynchronizeProxy","_onSynchronize","full","syncModel","_getModelForSync","enqueue","_synchronizeModel","_notify","_processUpdates","handleUpdate","_processUpdate","sort","b","predicate","ignored","updateIsNext","effective","localValue","getValue","HandleToList","HandleStore","HandleRemoveMultiple","getKeys","HandleRemove","HandleGet","HandleSet","HandleClear","HandleStream","StreamCursorNext","StreamCursorClose","_scheduled","_queues","byHandle","_schedule","_dispatch","queue","_updateIdle","./runtime/ts-build/storage/crdt-collection-model.js","CrdtCollectionModel","newKeys","_equals","value1","value2","type1","./runtime/ts-build/symbols.js","Symbols","./runtime/ts-build/type-variable.js","TypeVariable","_schema_js__WEBPACK_IMPORTED_MODULE_2__","_canWriteSuperset","_canReadSubset","_resolution","mergedSchema","intersect","union","getEntitySchema","elementType","probe","hasConstraint","toLiteralIgnoringResolutions","isResolved","./runtime/ts-build/type.js","Type","EntityType","VariableType","CollectionType","BigCollectionType","RelationType","InterfaceType","SlotType","ReferenceType","ArcInfoType","HandleInfoType","_schema_js__WEBPACK_IMPORTED_MODULE_0__","_recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_3__","collection","bigCollection","relation","iface","type2","contained1","_canMergeCanReadSubset","_canMergeCanWriteSuperset","hasUnresolvedVariable","_applyExistenceTypeTest","_canEnsureResolved","_isMoreSpecificThan","newTypeVariable","_hasProperty","isEntity","isVariable","toPrettyString","isCollection","resolvedPrimitiveType","plural","isBigCollection","relationEntities","isRelation","isInterface","shape","isSlot","fieldsString","isReference","isArcInfo","isHandleInfo","./shell/components/xen/xen-state.js","XenStateMixin","nob","debounce","action","clearTimeout","Base","_pendingProps","_getInitialProps","_lastProps","_getInitialState","_lastState","_validator","_wouldChangeProp","_invalidateProps","_wouldChangeValue","_propsInvalid","dirty","_wouldChangeState","_async","_validate","_willReceiveProps","_shouldUpdate","_ensureMount","_doUpdate","_update","_didUpdate","./shell/source/browser-loader.js","BrowserLoader","_runtime_ts_build_loader_js__WEBPACK_IMPORTED_MODULE_0__","_runtime_ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__","_runtime_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__","_runtime_multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_3__","_runtime_transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_4__","logFactory","preamble","color","dumbCache","urlMap","_urlMap","resolved","_resolve","cacheKey","URL","href","macro","k","mapParticleUrl","defineParticle","logger","suffix","folder","resolver","_fetch","SimpleParticle","./shell/source/worker-entry.js","_runtime_ts_build_particle_execution_context_js__WEBPACK_IMPORTED_MODULE_0__","_browser_loader_js__WEBPACK_IMPORTED_MODULE_1__","ports"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 254);\n","/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = \"./shell/source/worker-entry.js\");\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./devtools/shared/devtools-broker.js\":\n/*!********************************************!*\\\n  !*** ./devtools/shared/devtools-broker.js ***!\n  \\********************************************/\n/*! exports provided: DevtoolsBroker */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DevtoolsBroker\", function() { return DevtoolsBroker; });\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n// Debugging is initialized either by /devtools/src/run-mark-connected.js, which is\n// injected by the devtools extension content script in the browser env,\n// or used directly when debugging nodeJS.\n\n// Data needs to be referenced via a global object, otherwise extension and\n// Arcs have different instances.\nconst root = typeof window === 'object' ? window : global;\n\nif (!root._arcDebugPromise) {\n  root._arcDebugPromise = new Promise(resolve => {\n    root._arcDebugPromiseResolve = resolve;\n  });\n}\n\nclass DevtoolsBroker {\n  static get onceConnected() {\n    return root._arcDebugPromise;\n  }\n  static markConnected() {\n    root._arcDebugPromiseResolve();\n    return {preExistingArcs: !!root.arc};\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/array-set.js\":\n/*!***************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/array-set.js ***!\n  \\***************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/util.js\");\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = util.toSetString(aStr);\n  var isDuplicate = has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    this._set[sStr] = idx;\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  var sStr = util.toSetString(aStr);\n  return has.call(this._set, sStr);\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  var sStr = util.toSetString(aStr);\n  if (has.call(this._set, sStr)) {\n    return this._set[sStr];\n  }\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64-vlq.js\":\n/*!****************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64-vlq.js ***!\n  \\****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = __webpack_require__(/*! ./base64 */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64.js\");\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64.js\":\n/*!************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64.js ***!\n  \\************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/binary-search.js\":\n/*!*******************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/binary-search.js ***!\n  \\*******************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/quick-sort.js\":\n/*!****************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/quick-sort.js ***!\n  \\****************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/source-map-consumer.js\":\n/*!*************************************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/source-map-consumer.js ***!\n  \\*************************************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = __webpack_require__(/*! ./util */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/util.js\");\nvar binarySearch = __webpack_require__(/*! ./binary-search */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/binary-search.js\");\nvar ArraySet = __webpack_require__(/*! ./array-set */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/array-set.js\").ArraySet;\nvar base64VLQ = __webpack_require__(/*! ./base64-vlq */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/base64-vlq.js\");\nvar quickSort = __webpack_require__(/*! ./quick-sort */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/quick-sort.js\").quickSort;\n\nfunction SourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap)\n    : new BasicSourceMapConsumer(sourceMap);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      if (source != null && sourceRoot != null) {\n        source = util.join(sourceRoot, source);\n      }\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: Optional. the column number in the original source.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    if (this.sourceRoot != null) {\n      needle.source = util.relative(this.sourceRoot, needle.source);\n    }\n    if (!this._sources.has(needle.source)) {\n      return [];\n    }\n    needle.source = this._sources.indexOf(needle.source);\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The only parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._sources.toArray().map(function (s) {\n      return this.sourceRoot != null ? util.join(this.sourceRoot, s) : s;\n    }, this);\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          if (this.sourceRoot != null) {\n            source = util.join(this.sourceRoot, source);\n          }\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    if (this.sourceRoot != null) {\n      aSource = util.relative(this.sourceRoot, aSource);\n    }\n\n    if (this._sources.has(aSource)) {\n      return this.sourcesContent[this._sources.indexOf(aSource)];\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + aSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    if (this.sourceRoot != null) {\n      source = util.relative(this.sourceRoot, source);\n    }\n    if (!this._sources.has(source)) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n    source = this._sources.indexOf(source);\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The only parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'))\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.\n *   - column: The column number in the generated source.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.\n *   - column: The column number in the original source, or null.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.\n *   - column: The column number in the original source.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.\n *   - column: The column number in the generated source, or null.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer.sources.indexOf(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        if (section.consumer.sourceRoot !== null) {\n          source = util.join(section.consumer.sourceRoot, source);\n        }\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = section.consumer._names.at(mapping.name);\n        this._names.add(name);\n        name = this._names.indexOf(name);\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/util.js\":\n/*!**********************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/util.js ***!\n  \\**********************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\n/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.]*)(?::(\\d+))?(\\S*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || !!aPath.match(urlRegexp);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = mappingA.source - mappingB.source;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return mappingA.name - mappingB.name;\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n\n/***/ }),\n\n/***/ \"./node_modules/sourcemapped-stacktrace/sourcemapped-stacktrace.js\":\n/*!*************************************************************************!*\\\n  !*** ./node_modules/sourcemapped-stacktrace/sourcemapped-stacktrace.js ***!\n  \\*************************************************************************/\n/*! no static exports found */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n * sourcemapped-stacktrace.js\n * created by James Salter <iteration@gmail.com> (2014)\n *\n * https://github.com/novocaine/sourcemapped-stacktrace\n *\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/*global define */\n\n// note we only include source-map-consumer, not the whole source-map library,\n// which includes gear for generating source maps that we don't need\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! source-map/lib/source-map-consumer */ \"./node_modules/sourcemapped-stacktrace/node_modules/source-map/lib/source-map-consumer.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function(source_map_consumer) {\n\n  var global_mapForUri = {};\n\n  /**\n   * Re-map entries in a stacktrace using sourcemaps if available.\n   *\n   * @param {Array} stack - Array of strings from the browser's stack\n   *                        representation. Currently only Chrome\n   *                        format is supported.\n   * @param {function} done - Callback invoked with the transformed stacktrace\n   *                          (an Array of Strings) passed as the first\n   *                          argument\n   * @param {Object} [opts] - Optional options object.\n   * @param {Function} [opts.filter] - Filter function applied to each stackTrace line.\n   *                                   Lines which do not pass the filter won't be processesd.\n   * @param {boolean} [opts.cacheGlobally] - Whether to cache sourcemaps globally across multiple calls.\n   * @param {boolean} [opts.sync] - Whether to use synchronous ajax to load the sourcemaps.\n   */\n  var mapStackTrace = function(stack, done, opts) {\n    var lines;\n    var line;\n    var mapForUri = {};\n    var rows = {};\n    var fields;\n    var uri;\n    var expected_fields;\n    var regex;\n    var skip_lines;\n\n    var fetcher = new Fetcher(opts);\n\n    if (isChromeOrEdge() || isIE11Plus()) {\n      regex = /^ +at.+\\((.*):([0-9]+):([0-9]+)/;\n      expected_fields = 4;\n      // (skip first line containing exception message)\n      skip_lines = 1;\n    } else if (isFirefox() || isSafari()) {\n      regex = /@(.*):([0-9]+):([0-9]+)/;\n      expected_fields = 4;\n      skip_lines = 0;\n    } else {\n      throw new Error(\"unknown browser :(\");\n    }\n\n    lines = stack.split(\"\\n\").slice(skip_lines);\n\n    for (var i=0; i < lines.length; i++) {\n      line = lines[i];\n      if ( opts && opts.filter && !opts.filter(line) ) continue;\n      \n      fields = line.match(regex);\n      if (fields && fields.length === expected_fields) {\n        rows[i] = fields;\n        uri = fields[1];\n        if (!uri.match(/<anonymous>/)) {\n          fetcher.fetchScript(uri);\n        }\n      }\n    }\n\n    fetcher.sem.whenReady(function() {\n      var result = processSourceMaps(lines, rows, fetcher.mapForUri);\n      done(result);\n    });\n  };\n\n  var isChromeOrEdge = function() {\n    return navigator.userAgent.toLowerCase().indexOf('chrome') > -1;\n  };\n\n  var isFirefox = function() {\n    return navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  };  \n\n  var isSafari = function() {\n    return navigator.userAgent.toLowerCase().indexOf('safari') > -1;\n  };\n\t\t\n  var isIE11Plus = function() {\n   \treturn document.documentMode && document.documentMode >= 11;\n  };\n\n\n  var Semaphore = function() {\n    this.count = 0;\n    this.pending = [];\n  };\n\n  Semaphore.prototype.incr = function() {\n    this.count++;\n  };\n\n  Semaphore.prototype.decr = function() {\n    this.count--;\n    this.flush();\n  };\n\n  Semaphore.prototype.whenReady = function(fn) {\n    this.pending.push(fn);\n    this.flush();\n  };\n\n  Semaphore.prototype.flush = function() {\n    if (this.count === 0) {\n        this.pending.forEach(function(fn) { fn(); });\n        this.pending = [];\n    }\n  };\n\n\n  var Fetcher = function(opts) {\n    this.sem = new Semaphore();\n    this.sync = opts && opts.sync;\n    this.mapForUri = opts && opts.cacheGlobally ? global_mapForUri : {};\n  };\n\n  Fetcher.prototype.ajax = function(uri, callback) {\n    var xhr = createXMLHTTPObject();\n    var that = this;\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState == 4) {\n        callback.call(that, xhr, uri);\n      }\n    };\n    xhr.open(\"GET\", uri, !this.sync);\n    xhr.send();\n  }\n\n  Fetcher.prototype.fetchScript = function(uri) {\n    if (!(uri in this.mapForUri)) {\n      this.sem.incr();\n      this.mapForUri[uri] = null;\n    } else {\n      return;\n    }\n\n    this.ajax(uri, this.onScriptLoad);\n  };\n\n  var absUrlRegex = new RegExp('^(?:[a-z]+:)?//', 'i');\n\n  Fetcher.prototype.onScriptLoad = function(xhr, uri) {\n    if (xhr.status === 200 || (uri.slice(0, 7) === \"file://\" && xhr.status === 0)) {\n      // find .map in file.\n      //\n      // attempt to find it at the very end of the file, but tolerate trailing\n      // whitespace inserted by some packers.\n      var match = xhr.responseText.match(\"//# [s]ourceMappingURL=(.*)[\\\\s]*$\", \"m\");\n      if (match && match.length === 2) {\n        // get the map\n        var mapUri = match[1];\n\n        var embeddedSourceMap = mapUri.match(\"data:application/json;(charset=[^;]+;)?base64,(.*)\");\n\n        if (embeddedSourceMap && embeddedSourceMap[2]) {\n          this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(atob(embeddedSourceMap[2]));\n          this.sem.decr();\n        } else {\n          if (!absUrlRegex.test(mapUri)) {\n            // relative url; according to sourcemaps spec is 'source origin'\n            var origin;\n            var lastSlash = uri.lastIndexOf('/');\n            if (lastSlash !== -1) {\n              origin = uri.slice(0, lastSlash + 1);\n              mapUri = origin + mapUri;\n              // note if lastSlash === -1, actual script uri has no slash\n              // somehow, so no way to use it as a prefix... we give up and try\n              // as absolute\n            }\n          }\n\n          this.ajax(mapUri, function(xhr) {\n            if (xhr.status === 200 || (mapUri.slice(0, 7) === \"file://\" && xhr.status === 0)) {\n              this.mapForUri[uri] = new source_map_consumer.SourceMapConsumer(xhr.responseText);\n            }\n            this.sem.decr();\n          });\n        }\n      } else {\n        // no map\n        this.sem.decr();\n      }\n    } else {\n      // HTTP error fetching uri of the script\n      this.sem.decr();\n    }\n  };\n\n  var processSourceMaps = function(lines, rows, mapForUri) {\n    var result = [];\n    var map;\n    for (var i=0; i < lines.length; i++) {\n      var row = rows[i];\n      if (row) {\n        var uri = row[1];\n        var line = parseInt(row[2], 10);\n        var column = parseInt(row[3], 10);\n        map = mapForUri[uri];\n\n        if (map) {\n          // we think we have a map for that uri. call source-map library\n          var origPos = map.originalPositionFor(\n            { line: line, column: column });\n          result.push(formatOriginalPosition(origPos.source,\n            origPos.line, origPos.column, origPos.name || origName(lines[i])));\n        } else {\n          // we can't find a map for that url, but we parsed the row.\n          // reformat unchanged line for consistency with the sourcemapped\n          // lines.\n          result.push(formatOriginalPosition(uri, line, column, origName(lines[i])));\n        }\n      } else {\n        // we weren't able to parse the row, push back what we were given\n        result.push(lines[i]);\n      }\n    }\n\n    return result;\n  };\n\n  function origName(origLine) {\n    var match = String(origLine).match((isChromeOrEdge() || isIE11Plus()) ?\n      / +at +([^ ]*).*/ :\n      /([^@]*)@.*/);\n    return match && match[1];\n  }\n\n  var formatOriginalPosition = function(source, line, column, name) {\n    // mimic chrome's format\n    return \"    at \" + (name ? name : \"(unknown)\") +\n      \" (\" + source + \":\" + line + \":\" + column + \")\";\n  };\n\n  // xmlhttprequest boilerplate\n  var XMLHttpFactories = [\n\tfunction () {return new XMLHttpRequest();},\n\tfunction () {return new ActiveXObject(\"Msxml2.XMLHTTP\");},\n\tfunction () {return new ActiveXObject(\"Msxml3.XMLHTTP\");},\n\tfunction () {return new ActiveXObject(\"Microsoft.XMLHTTP\");}\n  ];\n\n  function createXMLHTTPObject() {\n      var xmlhttp = false;\n      for (var i=0;i<XMLHttpFactories.length;i++) {\n          try {\n              xmlhttp = XMLHttpFactories[i]();\n          }\n          catch (e) {\n              continue;\n          }\n          break;\n      }\n      return xmlhttp;\n  }\n\n  return {\n    mapStackTrace: mapStackTrace\n  }\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n\n/***/ \"./node_modules/webpack/buildin/global.js\":\n/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/\n/*! no static exports found */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n\n/***/ \"./platform/assert-web.js\":\n/*!********************************!*\\\n  !*** ./platform/assert-web.js ***!\n  \\********************************/\n/*! exports provided: assert */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"assert\", function() { return assert; });\n// Copyright (c) 2017 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\nfunction assert(test, message) {\n  if (!test) {\n    debugger; // eslint-disable-line no-debugger\n    throw new Error(message);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./platform/devtools-channel-web.js\":\n/*!******************************************!*\\\n  !*** ./platform/devtools-channel-web.js ***!\n  \\******************************************/\n/*! exports provided: DevtoolsChannel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DevtoolsChannel\", function() { return DevtoolsChannel; });\n/* harmony import */ var _runtime_debug_abstract_devtools_channel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../runtime/debug/abstract-devtools-channel.js */ \"./runtime/debug/abstract-devtools-channel.js\");\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\nclass DevtoolsChannel extends _runtime_debug_abstract_devtools_channel_js__WEBPACK_IMPORTED_MODULE_0__[\"AbstractDevtoolsChannel\"] {\n  constructor() {\n    super();\n    document.addEventListener('arcs-debug-in', e => this._handleMessage(e.detail));\n  }\n\n  _flush(messages) {\n    document.dispatchEvent(new CustomEvent('arcs-debug-out', {detail: messages}));\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./platform/fs-web.js\":\n/*!****************************!*\\\n  !*** ./platform/fs-web.js ***!\n  \\****************************/\n/*! exports provided: fs */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fs\", function() { return fs; });\n// Copyright (c) 2017 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\nconst fs = {};\n\n\n/***/ }),\n\n/***/ \"./platform/sourcemapped-stacktrace-web.js\":\n/*!*************************************************!*\\\n  !*** ./platform/sourcemapped-stacktrace-web.js ***!\n  \\*************************************************/\n/*! exports provided: mapStackTrace */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapStackTrace\", function() { return mapStackTrace; });\n// Copyright (c) 2018 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\n// \"Convert\" old-style module to ES6.\nconst smst = __webpack_require__(/*! sourcemapped-stacktrace/sourcemapped-stacktrace.js */ \"./node_modules/sourcemapped-stacktrace/sourcemapped-stacktrace.js\");\nconst mapStackTrace = smst.mapStackTrace;\n\n\n/***/ }),\n\n/***/ \"./platform/vm-web.js\":\n/*!****************************!*\\\n  !*** ./platform/vm-web.js ***!\n  \\****************************/\n/*! exports provided: vm */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vm\", function() { return vm; });\n// Copyright (c) 2017 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\nconst vm = {};\n\n\n/***/ }),\n\n/***/ \"./runtime/api-channel.js\":\n/*!********************************!*\\\n  !*** ./runtime/api-channel.js ***!\n  \\********************************/\n/*! exports provided: APIPort, PECOuterPort, PECInnerPort */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"APIPort\", function() { return APIPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PECOuterPort\", function() { return PECOuterPort; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PECInnerPort\", function() { return PECInnerPort; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ts-build/particle-spec.js */ \"./runtime/ts-build/particle-spec.js\");\n/* harmony import */ var _ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ts-build/type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _debug_outer_port_attachment_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./debug/outer-port-attachment.js */ \"./runtime/debug/outer-port-attachment.js\");\n/* harmony import */ var _debug_devtools_connection_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./debug/devtools-connection.js */ \"./runtime/debug/devtools-connection.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\n\n\nclass ThingMapper {\n  constructor(prefix) {\n    this._prefix = prefix;\n    this._nextIdentifier = 0;\n    this._idMap = new Map();\n    this._reverseIdMap = new Map();\n  }\n\n  _newIdentifier() {\n    return this._prefix + (this._nextIdentifier++);\n  }\n\n  createMappingForThing(thing, requestedId) {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!this._reverseIdMap.has(thing));\n    let id;\n    if (requestedId) {\n      id = requestedId;\n    } else if (thing.apiChannelMappingId) {\n      id = thing.apiChannelMappingId;\n    } else {\n      id = this._newIdentifier();\n    }\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!this._idMap.has(id), `${requestedId ? 'requestedId' : (thing.apiChannelMappingId ? 'apiChannelMappingId' : 'newIdentifier()')} ${id} already in use`);\n    this.establishThingMapping(id, thing);\n    return id;\n  }\n\n  maybeCreateMappingForThing(thing) {\n    if (this.hasMappingForThing(thing)) {\n      return this.identifierForThing(thing);\n    }\n    return this.createMappingForThing(thing);\n  }\n\n  async establishThingMapping(id, thing) {\n    let continuation;\n    if (Array.isArray(thing)) {\n      [thing, continuation] = thing;\n    }\n    this._idMap.set(id, thing);\n    if (thing instanceof Promise) {\n      Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(continuation == null);\n      await this.establishThingMapping(id, await thing);\n    } else {\n      this._reverseIdMap.set(thing, id);\n      if (continuation) {\n        await continuation();\n      }\n    }\n  }\n\n  hasMappingForThing(thing) {\n    return this._reverseIdMap.has(thing);\n  }\n\n  identifierForThing(thing) {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this._reverseIdMap.has(thing), `Missing thing [${thing}]`);\n    return this._reverseIdMap.get(thing);\n  }\n\n  thingForIdentifier(id) {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this._idMap.has(id), `Missing id: ${id}`);\n    return this._idMap.get(id);\n  }\n}\n\n\nclass APIPort {\n  constructor(messagePort, prefix) {\n    this._port = messagePort;\n    this._mapper = new ThingMapper(prefix);\n    this._messageMap = new Map();\n    this._port.onmessage = async e => this._processMessage(e);\n    this._debugAttachment = null;\n    this._attachStack = false;\n    this.messageCount = 0;\n\n    this.Direct = {\n      convert: a => a,\n      unconvert: a => a\n    };\n\n    this.LocalMapped = {\n      convert: a => this._mapper.maybeCreateMappingForThing(a),\n      unconvert: a => this._mapper.thingForIdentifier(a)\n    };\n\n    this.Mapped = {\n      convert: a => this._mapper.identifierForThing(a),\n      unconvert: a => this._mapper.thingForIdentifier(a)\n    };\n\n    this.Map = function(keyprimitive, valueprimitive) {\n      return {\n        convert: a => {\n          const r = {};\n          a.forEach((value, key) => r[keyprimitive.convert(key)] = valueprimitive.convert(value));\n          return r;\n        },\n        unconvert: a => {\n          const r = new Map();\n          for (const key in a) {\n            r.set(\n                keyprimitive.unconvert(key), valueprimitive.unconvert(a[key]));\n          }\n          return r;\n        }\n      };\n    };\n\n    this.List = function(primitive) {\n      return {\n        convert: a => a.map(v => primitive.convert(v)),\n        unconvert: a => a.map(v => primitive.unconvert(v))\n      };\n    };\n\n    this.ByLiteral = function(clazz) {\n      return {\n        convert: a => a.toLiteral(),\n        unconvert: a => clazz.fromLiteral(a)\n      };\n    };\n\n    this._testingHook();\n  }\n\n  // Overridden by unit tests.\n  _testingHook() {\n  }\n\n  close() {\n    this._port.close();\n  }\n\n  async _processMessage(e) {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this._messageMap.has(e.data.messageType));\n\n    const cnt = this.messageCount++;\n\n    const handler = this._messageMap.get(e.data.messageType);\n    let args;\n    try {\n      args = this._unprocessArguments(handler.args, e.data.messageBody);\n    } catch (exc) {\n      console.error(`Exception during unmarshaling for ${e.data.messageType}`);\n      throw exc;\n    }\n    // If any of the converted arguments are still pending promises\n    // wait for them to complete before processing the message.\n    for (const arg of Object.values(args)) {\n      if (arg instanceof Promise) {\n        arg.then(() => this._processMessage(e));\n        return;\n      }\n    }\n    const handlerName = 'on' + e.data.messageType;\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this[handlerName], `no handler named ${handlerName}`);\n    if (this._debugAttachment) {\n      this._debugAttachment.handlePecMessage(handlerName, e.data.messageBody, cnt, e.data.stack);\n    }\n    const result = this[handlerName](args);\n    if (handler.isInitializer) {\n      Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(args.identifier);\n      await this._mapper.establishThingMapping(args.identifier, result);\n    }\n  }\n\n  _processArguments(argumentTypes, args) {\n    const messageBody = {};\n    for (const argument in argumentTypes) {\n      messageBody[argument] = argumentTypes[argument].convert(args[argument]);\n    }\n    return messageBody;\n  }\n\n  _unprocessArguments(argumentTypes, args) {\n    const messageBody = {};\n    for (const argument in argumentTypes) {\n      messageBody[argument] = argumentTypes[argument].unconvert(args[argument]);\n    }\n    return messageBody;\n  }\n\n  registerCall(name, argumentTypes) {\n    this[name] = args => {\n      const call = {messageType: name, messageBody: this._processArguments(argumentTypes, args)};\n      if (this._attachStack) call.stack = new Error().stack;\n      const cnt = this.messageCount++;\n      this._port.postMessage(call);\n      if (this._debugAttachment) {\n        this._debugAttachment.handlePecMessage(name, call.messageBody, cnt, new Error().stack);\n      }\n    };\n  }\n\n  registerHandler(name, argumentTypes) {\n    this._messageMap.set(name, {args: argumentTypes});\n  }\n\n  registerInitializerHandler(name, argumentTypes) {\n    argumentTypes.identifier = this.Direct;\n    this._messageMap.set(name, {\n      isInitializer: true,\n      args: argumentTypes,\n    });\n  }\n\n  registerRedundantInitializer(name, argumentTypes, mappingIdArg) {\n    this.registerInitializer(name, argumentTypes, mappingIdArg, true /* redundant */);\n  }\n\n  registerInitializer(name, argumentTypes, mappingIdArg = null, redundant = false) {\n    this[name] = (thing, args) => {\n      if (redundant && this._mapper.hasMappingForThing(thing)) return;\n      const call = {messageType: name, messageBody: this._processArguments(argumentTypes, args)};\n      if (this._attachStack) call.stack = new Error().stack;\n      const requestedId = mappingIdArg && args[mappingIdArg];\n      call.messageBody.identifier = this._mapper.createMappingForThing(thing, requestedId);\n      const cnt = this.messageCount++;\n      this._port.postMessage(call);\n      if (this._debugAttachment) {\n        this._debugAttachment.handlePecMessage(name, call.messageBody, cnt, new Error().stack);\n      }\n    };\n  }\n}\n\nclass PECOuterPort extends APIPort {\n  constructor(messagePort, arc) {\n    super(messagePort, 'o');\n\n    this.registerCall('Stop', {});\n    this.registerRedundantInitializer('DefineHandle', {type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct});\n    this.registerInitializer('InstantiateParticle',\n      {id: this.Direct, spec: this.ByLiteral(_ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__[\"ParticleSpec\"]), handles: this.Map(this.Direct, this.Mapped)}, 'id');\n\n    this.registerCall('UIEvent', {particle: this.Mapped, slotName: this.Direct, event: this.Direct});\n    this.registerCall('SimpleCallback', {callback: this.Direct, data: this.Direct});\n    this.registerCall('AwaitIdle', {version: this.Direct});\n    this.registerCall('StartRender', {particle: this.Mapped, slotName: this.Direct, providedSlots: this.Map(this.Direct, this.Direct), contentTypes: this.List(this.Direct)});\n    this.registerCall('StopRender', {particle: this.Mapped, slotName: this.Direct});\n\n    this.registerHandler('Render', {particle: this.Mapped, slotName: this.Direct, content: this.Direct});\n    this.registerHandler('InitializeProxy', {handle: this.Mapped, callback: this.Direct});\n    this.registerHandler('SynchronizeProxy', {handle: this.Mapped, callback: this.Direct});\n    this.registerHandler('HandleGet', {handle: this.Mapped, callback: this.Direct});\n    this.registerHandler('HandleToList', {handle: this.Mapped, callback: this.Direct});\n    this.registerHandler('HandleSet', {handle: this.Mapped, data: this.Direct, particleId: this.Direct, barrier: this.Direct});\n    this.registerHandler('HandleClear', {handle: this.Mapped, particleId: this.Direct, barrier: this.Direct});\n    this.registerHandler('HandleStore', {handle: this.Mapped, callback: this.Direct, data: this.Direct, particleId: this.Direct});\n    this.registerHandler('HandleRemove', {handle: this.Mapped, callback: this.Direct, data: this.Direct, particleId: this.Direct});\n    this.registerHandler('HandleRemoveMultiple', {handle: this.Mapped, callback: this.Direct, data: this.Direct, particleId: this.Direct});\n    this.registerHandler('HandleStream', {handle: this.Mapped, callback: this.Direct, pageSize: this.Direct, forward: this.Direct});\n    this.registerHandler('StreamCursorNext', {handle: this.Mapped, callback: this.Direct, cursorId: this.Direct});\n    this.registerHandler('StreamCursorClose', {handle: this.Mapped, cursorId: this.Direct});\n\n    this.registerHandler('Idle', {version: this.Direct, relevance: this.Map(this.Mapped, this.Direct)});\n\n    this.registerHandler('GetBackingStore', {callback: this.Direct, storageKey: this.Direct, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"])});\n    this.registerInitializer('GetBackingStoreCallback', {callback: this.Direct, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct, id: this.Direct, storageKey: this.Direct});\n\n    this.registerHandler('ConstructInnerArc', {callback: this.Direct, particle: this.Mapped});\n    this.registerCall('ConstructArcCallback', {callback: this.Direct, arc: this.LocalMapped});\n\n    this.registerHandler('ArcCreateHandle', {callback: this.Direct, arc: this.LocalMapped, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct});\n    this.registerInitializer('CreateHandleCallback', {callback: this.Direct, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct, id: this.Direct});\n    this.registerHandler('ArcMapHandle', {callback: this.Direct, arc: this.LocalMapped, handle: this.Mapped});\n    this.registerInitializer('MapHandleCallback', {callback: this.Direct, id: this.Direct});\n    this.registerHandler('ArcCreateSlot',\n      {callback: this.Direct, arc: this.LocalMapped, transformationParticle: this.Mapped, transformationSlotName: this.Direct, hostedParticleName: this.Direct, hostedSlotName: this.Direct, handleId: this.Direct});\n    this.registerInitializer('CreateSlotCallback', {callback: this.Direct, hostedSlotId: this.Direct});\n    this.registerCall('InnerArcRender', {transformationParticle: this.Mapped, transformationSlotName: this.Direct, hostedSlotId: this.Direct, content: this.Direct});\n\n    this.registerHandler('ArcLoadRecipe', {arc: this.LocalMapped, recipe: this.Direct, callback: this.Direct});\n\n    this.registerHandler('RaiseSystemException', {exception: this.Direct, methodName: this.Direct, particleId: this.Direct});\n\n    // We need an API call to tell the context side that DevTools has been connected, so it can start sending\n    // stack traces attached to the API calls made from that side.\n    this.registerCall('DevToolsConnected', {});\n    _debug_devtools_connection_js__WEBPACK_IMPORTED_MODULE_4__[\"DevtoolsConnection\"].onceConnected.then(devtoolsChannel => {\n      this.DevToolsConnected();\n      this._debugAttachment = new _debug_outer_port_attachment_js__WEBPACK_IMPORTED_MODULE_3__[\"OuterPortAttachment\"](arc, devtoolsChannel);\n    });\n  }\n}\n\nclass PECInnerPort extends APIPort {\n  constructor(messagePort) {\n    super(messagePort, 'i');\n\n    this.registerHandler('Stop', {});\n    this.registerInitializerHandler('DefineHandle', {type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct});\n    this.registerInitializerHandler('InstantiateParticle',\n      {id: this.Direct, spec: this.ByLiteral(_ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__[\"ParticleSpec\"]), handles: this.Map(this.Direct, this.Mapped)});\n\n    this.registerHandler('UIEvent', {particle: this.Mapped, slotName: this.Direct, event: this.Direct});\n    this.registerHandler('SimpleCallback', {callback: this.LocalMapped, data: this.Direct});\n    this.registerHandler('AwaitIdle', {version: this.Direct});\n    this.registerHandler('StartRender', {particle: this.Mapped, slotName: this.Direct, providedSlots: this.Map(this.Direct, this.Direct), contentTypes: this.List(this.Direct)});\n    this.registerHandler('StopRender', {particle: this.Mapped, slotName: this.Direct});\n\n    this.registerCall('Render', {particle: this.Mapped, slotName: this.Direct, content: this.Direct});\n    this.registerCall('InitializeProxy', {handle: this.Mapped, callback: this.LocalMapped});\n    this.registerCall('SynchronizeProxy', {handle: this.Mapped, callback: this.LocalMapped});\n    this.registerCall('HandleGet', {handle: this.Mapped, callback: this.LocalMapped});\n    this.registerCall('HandleToList', {handle: this.Mapped, callback: this.LocalMapped});\n    this.registerCall('HandleSet', {handle: this.Mapped, data: this.Direct, particleId: this.Direct, barrier: this.Direct});\n    this.registerCall('HandleClear', {handle: this.Mapped, particleId: this.Direct, barrier: this.Direct});\n    this.registerCall('HandleStore', {handle: this.Mapped, callback: this.LocalMapped, data: this.Direct, particleId: this.Direct});\n    this.registerCall('HandleRemove', {handle: this.Mapped, callback: this.LocalMapped, data: this.Direct, particleId: this.Direct});\n    this.registerCall('HandleRemoveMultiple', {handle: this.Mapped, callback: this.LocalMapped, data: this.Direct, particleId: this.Direct});\n    this.registerCall('HandleStream', {handle: this.Mapped, callback: this.LocalMapped, pageSize: this.Direct, forward: this.Direct});\n    this.registerCall('StreamCursorNext', {handle: this.Mapped, callback: this.LocalMapped, cursorId: this.Direct});\n    this.registerCall('StreamCursorClose', {handle: this.Mapped, cursorId: this.Direct});\n\n    this.registerCall('Idle', {version: this.Direct, relevance: this.Map(this.Mapped, this.Direct)});\n\n    this.registerCall('GetBackingStore', {callback: this.LocalMapped, storageKey: this.Direct, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"])});\n    this.registerInitializerHandler('GetBackingStoreCallback', {callback: this.LocalMapped, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct, id: this.Direct, storageKey: this.Direct});\n\n    this.registerCall('ConstructInnerArc', {callback: this.LocalMapped, particle: this.Mapped});\n    this.registerHandler('ConstructArcCallback', {callback: this.LocalMapped, arc: this.Direct});\n\n    this.registerCall('ArcCreateHandle', {callback: this.LocalMapped, arc: this.Direct, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct});\n    this.registerInitializerHandler('CreateHandleCallback', {callback: this.LocalMapped, type: this.ByLiteral(_ts_build_type_js__WEBPACK_IMPORTED_MODULE_2__[\"Type\"]), name: this.Direct, id: this.Direct});\n    this.registerCall('ArcMapHandle', {callback: this.LocalMapped, arc: this.Direct, handle: this.Mapped});\n    this.registerInitializerHandler('MapHandleCallback', {callback: this.LocalMapped, id: this.Direct});\n    this.registerCall('ArcCreateSlot',\n      {callback: this.LocalMapped, arc: this.Direct, transformationParticle: this.Mapped, transformationSlotName: this.Direct, hostedParticleName: this.Direct, hostedSlotName: this.Direct, handleId: this.Direct});\n    this.registerInitializerHandler('CreateSlotCallback', {callback: this.LocalMapped, hostedSlotId: this.Direct});\n    this.registerHandler('InnerArcRender', {transformationParticle: this.Mapped, transformationSlotName: this.Direct, hostedSlotId: this.Direct, content: this.Direct});\n\n    this.registerCall('ArcLoadRecipe', {arc: this.Direct, recipe: this.Direct, callback: this.LocalMapped});\n\n    this.registerCall('RaiseSystemException', {exception: this.Direct, methodName: this.Direct, particleId: this.Direct});\n\n    // To show stack traces for calls made inside the context, we need to capture the trace at the call point and\n    // send it along with the message. We only want to do this after a DevTools connection has been detected, which\n    // we can't directly detect inside a worker context, so the PECOuterPort will send an API message instead.\n    this.registerHandler('DevToolsConnected', {});\n    this.onDevToolsConnected = () => this._attachStack = true;\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/debug/abstract-devtools-channel.js\":\n/*!****************************************************!*\\\n  !*** ./runtime/debug/abstract-devtools-channel.js ***!\n  \\****************************************************/\n/*! exports provided: AbstractDevtoolsChannel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AbstractDevtoolsChannel\", function() { return AbstractDevtoolsChannel; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\nclass AbstractDevtoolsChannel {\n  constructor() {\n    this.debouncedMessages = [];\n    this.debouncing = false;\n    this.messageListeners = new Map();\n  }\n\n  send(message) {\n    this.debouncedMessages.push(message);\n    if (!this.debouncing) {\n      this.debouncing = true;\n      setTimeout(() => {\n        this._flush(this.debouncedMessages);\n        this.debouncedMessages = [];\n        this.debouncing = false;\n      }, 100);\n    }\n  }\n\n  listen(arcOrId, messageType, callback) {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(messageType);\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(arcOrId);\n    const arcId = typeof arcOrId === 'string' ? arcOrId : arcOrId.id.toString();\n    const key = `${arcId}/${messageType}`;\n    let listeners = this.messageListeners.get(key);\n    if (!listeners) this.messageListeners.set(key, listeners = []);\n    listeners.push(callback);\n  }\n\n  _handleMessage(msg) {\n    const listeners = this.messageListeners.get(`${msg.arcId}/${msg.messageType}`);\n    if (!listeners) {\n      console.warn(`No one is listening to ${msg.messageType} message`);\n    } else {\n      for (const listener of listeners) listener(msg);\n    }\n  }\n\n  _flush(messages) {\n    throw 'Not implemented in an abstract class';\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/debug/devtools-connection.js\":\n/*!**********************************************!*\\\n  !*** ./runtime/debug/devtools-connection.js ***!\n  \\**********************************************/\n/*! exports provided: DevtoolsConnection, DevtoolsForTests */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DevtoolsConnection\", function() { return DevtoolsConnection; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DevtoolsForTests\", function() { return DevtoolsForTests; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _platform_devtools_channel_web_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../platform/devtools-channel-web.js */ \"./platform/devtools-channel-web.js\");\n/* harmony import */ var _testing_devtools_channel_stub_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./testing/devtools-channel-stub.js */ \"./runtime/debug/testing/devtools-channel-stub.js\");\n/* harmony import */ var _devtools_shared_devtools_broker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../devtools/shared/devtools-broker.js */ \"./devtools/shared/devtools-broker.js\");\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\nlet channel = null;\nlet isConnected = false;\nlet onceConnectedResolve = null;\nlet onceConnected = new Promise(resolve => onceConnectedResolve = resolve);\n\n_devtools_shared_devtools_broker_js__WEBPACK_IMPORTED_MODULE_3__[\"DevtoolsBroker\"].onceConnected.then(() => {\n  DevtoolsConnection.ensure();\n  onceConnectedResolve(channel);\n  isConnected = true;\n});\n\nclass DevtoolsConnection {\n  static get isConnected() {\n    return isConnected;\n  }\n  static get onceConnected() {\n    return onceConnected;\n  }\n  static get() {\n    return channel;\n  }\n  static ensure() {\n    if (!channel) channel = new _platform_devtools_channel_web_js__WEBPACK_IMPORTED_MODULE_1__[\"DevtoolsChannel\"]();\n  }\n}\n\nclass DevtoolsForTests {\n  static get channel() {\n    return channel;\n  }\n  static ensureStub() {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!channel);\n    channel = new _testing_devtools_channel_stub_js__WEBPACK_IMPORTED_MODULE_2__[\"DevtoolsChannelStub\"]();\n    onceConnectedResolve(channel);\n    isConnected = true;\n  }\n  static reset() {\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(channel);\n    isConnected = false;\n    onceConnectedResolve = null;\n    onceConnected = new Promise(resolve => onceConnectedResolve = resolve);\n    channel = null;\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/debug/outer-port-attachment.js\":\n/*!************************************************!*\\\n  !*** ./runtime/debug/outer-port-attachment.js ***!\n  \\************************************************/\n/*! exports provided: OuterPortAttachment */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"OuterPortAttachment\", function() { return OuterPortAttachment; });\n/* harmony import */ var _platform_sourcemapped_stacktrace_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/sourcemapped-stacktrace-web.js */ \"./platform/sourcemapped-stacktrace-web.js\");\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\nclass OuterPortAttachment {\n  constructor(arc, devtoolsChannel) {\n    this._devtoolsChannel = devtoolsChannel;\n    this._arcIdString = arc.id.toString();\n    this._speculative = arc.isSpeculative;\n  }\n\n  handlePecMessage(name, pecMsgBody, pecMsgCount, stackString) {\n    // Skip speculative and pipes arcs for now.\n    if (this._arcIdString.endsWith('-pipes') || this._speculative) return;\n\n    const stack = this._extractStackFrames(stackString);\n    this._devtoolsChannel.send({\n      messageType: 'PecLog',\n      messageBody: {name, pecMsgBody, pecMsgCount, timestamp: Date.now(), stack},\n    });\n  }\n\n  _extractStackFrames(stackString) {\n    const stack = [];\n    if (!stackString) return stack;\n\n    // File refs should appear only in stack traces generated by tests run with\n    // --explore set.\n    if (stackString.includes('(file:///')) {\n      // The slice discards the 'Error' text and the the stack frame\n      // corresponding to the API channel function, which is already being\n      // displayed in the log entry.\n      for (const frameString of stackString.split('\\n    at ').slice(2)) {\n        let match = frameString.match(/^(.*) \\((.*)\\)$/);\n        if (match === null) {\n          match = {1: '<unknown>', 2: frameString};\n        }\n\n        let location = match[2].replace(/:[0-9]+$/, '');\n        if (location.startsWith('file')) {\n          // 'file:///<path>/arcs.*/runtime/file.js:84'\n          // -> location: 'runtime/file.js:150'\n          location = location.replace(/^.*\\/arcs[^/]*\\//, '');\n        }\n        stack.push({method: match[1], location, target: null, targetClass: 'noLink'});\n      }\n      return stack;\n    }\n\n    // The slice discards the stack frame corresponding to the API channel\n    // function, which is already being displayed in the log entry.\n    Object(_platform_sourcemapped_stacktrace_web_js__WEBPACK_IMPORTED_MODULE_0__[\"mapStackTrace\"])(stackString, mapped => mapped.slice(1).map(frameString => {\n      // Each frame has the form '    at function (source:line:column)'.\n      // Extract the function name and source:line:column text, then set up\n      // a frame object with the following fields:\n      //   location: text to display as the source in devtools Arcs panel\n      //   target: URL to open in devtools Sources panel\n      //   targetClass: CSS class specifier to attach to the location text\n      let match = frameString.match(/^ {4}at (.*) \\((.*)\\)$/);\n      if (match === null) {\n        match = {1: '<unknown>', 2: frameString.replace(/^ *at */, '')};\n      }\n\n      const frame = {method: match[1]};\n      const source = match[2].replace(/:[0-9]+$/, '');\n      if (source.startsWith('http')) {\n        // 'http://<url>/arcs.*/shell/file.js:150'\n        // -> location: 'shell/file.js:150', target: same as source\n        frame.location = source.replace(/^.*\\/arcs[^/]*\\//, '');\n        frame.target = source;\n        frame.targetClass = 'link';\n      } else if (source.startsWith('webpack')) {\n        // 'webpack:///runtime/sub/file.js:18'\n        // -> location: 'runtime/sub/file.js:18', target: 'webpack:///./runtime/sub/file.js:18'\n        frame.location = source.slice(11);\n        frame.target = `webpack:///./${frame.location}`;\n        frame.targetClass = 'link';\n      } else {\n        // '<anonymous>' (or similar)\n        frame.location = source;\n        frame.target = null;\n        frame.targetClass = 'noLink';\n      }\n      stack.push(frame);\n    }), {sync: true, cacheGlobally: true});\n    return stack;\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/debug/testing/devtools-channel-stub.js\":\n/*!********************************************************!*\\\n  !*** ./runtime/debug/testing/devtools-channel-stub.js ***!\n  \\********************************************************/\n/*! exports provided: DevtoolsChannelStub */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DevtoolsChannelStub\", function() { return DevtoolsChannelStub; });\n/**\n * @license\n * Copyright (c) 2018 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nclass DevtoolsChannelStub {\n  constructor() {\n    this._messages = [];\n  }\n\n  get messages() {\n    return this._messages;\n  }\n\n  send(message) {\n    this._messages.push(JSON.parse(JSON.stringify(message)));\n  }\n\n  listen(arcOrId, messageType, callback) { /* No-op */ }\n\n  clear() {\n    this._messages.length = 0;\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/dom-particle-base.js\":\n/*!**************************************!*\\\n  !*** ./runtime/dom-particle-base.js ***!\n  \\**************************************/\n/*! exports provided: DomParticleBase */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomParticleBase\", function() { return DomParticleBase; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ts-build/particle.js */ \"./runtime/ts-build/particle.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n/** @class DomParticleBase\n * Particle that interoperates with DOM.\n */\nclass DomParticleBase extends _ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__[\"Particle\"] {\n  constructor() {\n    super();\n  }\n  /** @method get template()\n   * Override to return a String defining primary markup.\n   */\n  get template() {\n    return '';\n  }\n  /** @method getTemplate(slotName)\n   * Override to return a String defining primary markup for the given slot name.\n   */\n  getTemplate(slotName) {\n    // TODO: only supports a single template for now. add multiple templates support.\n    return this.template;\n  }\n  /** @method getTemplateName(slotName)\n   * Override to return a String defining the name of the template for the given slot name.\n   */\n  getTemplateName(slotName) {\n    // TODO: only supports a single template for now. add multiple templates support.\n    return `default`;\n  }\n  /** @method shouldRender()\n   * Override to return false if the Particle won't use\n   * it's slot.\n   */\n  shouldRender() {\n    return true;\n  }\n  /** @method render()\n   * Override to return a dictionary to map into the template.\n   */\n  render() {\n    return {};\n  }\n  renderSlot(slotName, contentTypes) {\n    const stateArgs = this._getStateArgs();\n    const slot = this.getSlot(slotName);\n    if (!slot) {\n      return; // didn't receive StartRender.\n    }\n    // Set this to support multiple slots consumed by a particle, without needing\n    // to pass slotName to particle's render method, where it useless in most cases.\n    this.currentSlotName = slotName;\n    contentTypes.forEach(ct => slot.requestedContentTypes.add(ct));\n    // TODO(sjmiles): redundant, same answer for every slot\n    if (this.shouldRender(...stateArgs)) {\n      const content = {};\n      if (slot.requestedContentTypes.has('template')) {\n        content.template = this.getTemplate(slot.slotName);\n      }\n      if (slot.requestedContentTypes.has('model')) {\n        content.model = this.render(...stateArgs);\n      }\n      content.templateName = this.getTemplateName(slot.slotName);\n      slot.render(content);\n    } else if (slot.isRendered) {\n      // Send empty object, to clear rendered slot contents.\n      slot.render({});\n    }\n    this.currentSlotName = undefined;\n  }\n  _getStateArgs() {\n    return [];\n  }\n  forceRenderTemplate(slotName) {\n    this._slotByName.forEach((slot, name) => {\n      if (!slotName || (name == slotName)) {\n        slot.requestedContentTypes.add('template');\n      }\n    });\n  }\n  fireEvent(slotName, {handler, data}) {\n    if (this[handler]) {\n      this[handler]({data});\n    }\n  }\n  setParticleDescription(pattern) {\n    if (typeof pattern === 'string') {\n      return super.setParticleDescription(pattern);\n    }\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!!pattern.template && !!pattern.model, 'Description pattern must either be string or have template and model');\n    super.setDescriptionPattern('_template_', pattern.template);\n    super.setDescriptionPattern('_model_', JSON.stringify(pattern.model));\n  }\n  /** @method clearHandle(handleName)\n   * Remove entities from named handle.\n   */\n  async clearHandle(handleName) {\n    await this.handles.get(handleName).clear();\n    /*\n    const handle = this.handles.get(handleName);\n    if (handle.clear) {\n      handle.clear();\n    } else {\n      const entities = await handle.toList();\n      if (entities) {\n        return Promise.all(entities.map(entity => handle.remove(entity)));\n      }\n    }\n    */\n  }\n  /** @method mergeEntitiesToHandle(handleName, entityArray)\n   * Merge entities from Array into named handle.\n   */\n  async mergeEntitiesToHandle(handleName, entities) {\n    const idMap = {};\n    const handle = this.handles.get(handleName);\n    const handleEntities = await handle.toList();\n    handleEntities.forEach(entity => idMap[entity.id] = entity);\n    for (const entity of entities) {\n      if (!idMap[entity.id]) {\n        handle.store(entity);\n      }\n    }\n    //Promise.all(entities.map(entity => !idMap[entity.id] && handle.store(entity)));\n    //Promise.all(entities.map(entity => handle.store(entity)));\n  }\n  /** @method appendEntitiesToHandle(handleName, entityArray)\n   * Append entities from Array to named handle.\n   */\n  async appendEntitiesToHandle(handleName, entities) {\n    const handle = this.handles.get(handleName);\n    if (handle) {\n      Promise.all(entities.map(entity => handle.store(entity)));\n    }\n  }\n  /** @method appendRawDataToHandle(handleName, rawDataArray)\n   * Create an entity from each rawData, and append to named handle.\n   */\n  async appendRawDataToHandle(handleName, rawDataArray) {\n    const handle = this.handles.get(handleName);\n    if (handle) {\n      Promise.all(rawDataArray.map(raw => handle.store(new (handle.entityClass)(raw))));\n    }\n  }\n  /** @method updateVariable(handleName, rawData)\n   * Modify value of named handle. A new entity is created\n   * from `rawData` (`new [EntityClass](rawData)`).\n   */\n  updateVariable(handleName, rawData) {\n    const handle = this.handles.get(handleName);\n    if (handle) {\n      const entity = new (handle.entityClass)(rawData);\n      handle.set(entity);\n      return entity;\n    }\n  }\n  /** @method updateSet(handleName, entity)\n   * Modify or insert `entity` into named handle.\n   * Modification is done by removing the old entity and reinserting the new one.\n   */\n  async updateSet(handleName, entity) {\n    // Set the entity into the right place in the set. If we find it\n    // already present replace it, otherwise, add it.\n    // TODO(dstockwell): Replace this with happy entity mutation approach.\n    const handle = this.handles.get(handleName);\n    if (handle) {\n      // const entities = await handle.toList();\n      // const target = entities.find(r => r.id === entity.id);\n      // if (target) {\n      //   handle.remove(target);\n      // }\n      handle.remove(entity);\n      handle.store(entity);\n    }\n  }\n  /** @method boxQuery(box, userid)\n   * Returns array of Entities found in BOXED data `box` that are owned by `userid`\n   */\n  boxQuery(box, userid) {\n    return box.filter(item => userid === item.getUserID().split('|')[0]);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/dom-particle.js\":\n/*!*********************************!*\\\n  !*** ./runtime/dom-particle.js ***!\n  \\*********************************/\n/*! exports provided: DomParticle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DomParticle\", function() { return DomParticle; });\n/* harmony import */ var _shell_components_xen_xen_state_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../shell/components/xen/xen-state.js */ \"./shell/components/xen/xen-state.js\");\n/* harmony import */ var _dom_particle_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom-particle-base.js */ \"./runtime/dom-particle-base.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n/** @class DomParticle\n * Particle that interoperates with DOM and uses a simple state system\n * to handle updates.\n */\nclass DomParticle extends Object(_shell_components_xen_xen_state_js__WEBPACK_IMPORTED_MODULE_0__[\"XenStateMixin\"])(_dom_particle_base_js__WEBPACK_IMPORTED_MODULE_1__[\"DomParticleBase\"]) {\n  constructor() {\n    super();\n    // alias properties to remove `_`\n    this.state = this._state;\n    this.props = this._props;\n  }\n  /** @method willReceiveProps(props, state, oldProps, oldState)\n   * Override if necessary, to do things when props change.\n   */\n  willReceiveProps() {\n  }\n  /** @method update(props, state, oldProps, oldState)\n   * Override if necessary, to modify superclass config.\n   */\n  update() {\n  }\n  /** @method shouldRender(props, state, oldProps, oldState)\n   * Override to return false if the Particle won't use\n   * it's slot.\n   */\n  shouldRender() {\n    return true;\n  }\n  /** @method render(props, state, oldProps, oldState)\n   * Override to return a dictionary to map into the template.\n   */\n  render() {\n    return {};\n  }\n  /** @method setState(state)\n   * Copy values from `state` into the particle's internal state,\n   * triggering an update cycle unless currently updating.\n   */\n  setState(state) {\n    return this._setState(state);\n  }\n  // TODO(sjmiles): deprecated, just use setState\n  setIfDirty(state) {\n    console.warn('DomParticle: `setIfDirty` is deprecated, please use `setState` instead');\n    return this._setState(state);\n  }\n  /** @method configureHandles(handles)\n   * This is called once during particle setup. Override to control sync and update\n   * configuration on specific handles (via their configure() method).\n   * `handles` is a map from names to handle instances.\n   */\n  configureHandles(handles) {\n    // Example: handles.get('foo').configure({keepSynced: false});\n  }\n  /** @method get config()\n   * Override if necessary, to modify superclass config.\n   */\n  get config() {\n    // TODO(sjmiles): getter that does work is a bad idea, this is temporary\n    return {\n      handleNames: this.spec.inputs.map(i => i.name),\n      // TODO(mmandlis): this.spec needs to be replaced with a particle-spec loaded from\n      // .manifest files, instead of .ptcl ones.\n      slotNames: [...this.spec.slots.values()].map(s => s.name)\n    };\n  }\n  // affordances for aliasing methods to remove `_`\n  _willReceiveProps(...args) {\n    this.willReceiveProps(...args);\n  }\n  _update(...args) {\n    this.update(...args);\n    if (this.shouldRender(...args)) { // TODO: should shouldRender be slot specific?\n      this.relevance = 1; // TODO: improve relevance signal.\n    }\n    this.config.slotNames.forEach(s => this.renderSlot(s, ['model']));\n  }\n  //\n  // deprecated\n  get _views() {\n    console.warn(`Particle ${this.spec.name} uses deprecated _views getter.`);\n    return this.handles;\n  }\n  async setViews(views) {\n    console.warn(`Particle ${this.spec.name} uses deprecated setViews method.`);\n    return this.setHandles(views);\n  }\n  // end deprecated\n  //\n  async setHandles(handles) {\n    this.configureHandles(handles);\n    this.handles = handles;\n    this._handlesToSync = new Set();\n    for (const name of this.config.handleNames) {\n      const handle = handles.get(name);\n      if (handle && handle.options.keepSynced && handle.options.notifySync) {\n        this._handlesToSync.add(name);\n      }\n    }\n    // make sure we invalidate once, even if there are no incoming handles\n    setTimeout(() => !this._hasProps && this._invalidate(), 200);\n    //this._invalidate();\n  }\n  async onHandleSync(handle, model) {\n    this._handlesToSync.delete(handle.name);\n    if (this._handlesToSync.size == 0) {\n      await this._handlesToProps();\n    }\n  }\n  async onHandleUpdate(handle, update) {\n    // TODO(sjmiles): debounce handles updates\n    const work = () => {\n      //console.warn(handle, update);\n      this._handlesToProps();\n    };\n    this._debounce('handleUpdateDebounce', work, 100);\n  }\n  async _handlesToProps() {\n    const config = this.config;\n    // acquire (async) list data from handles; BigCollections map to the handle itself\n    const data = await Promise.all(\n      config.handleNames\n      .map(name => this.handles.get(name))\n      .map(handle => {\n        if (handle.toList) return handle.toList();\n        if (handle.get) return handle.get();\n        return handle;\n      })\n    );\n    // convert handle data (array) into props (dictionary)\n    const props = Object.create(null);\n    config.handleNames.forEach((name, i) => {\n      props[name] = data[i];\n    });\n    this._hasProps = true;\n    this._setProps(props);\n  }\n  fireEvent(slotName, {handler, data}) {\n    if (this[handler]) {\n      // TODO(sjmiles): remove `this._state` parameter\n      this[handler]({data}, this._state);\n    }\n  }\n  _debounce(key, func, delay) {\n    const subkey = `_debounce_${key}`;\n    if (!this._state[subkey]) {\n      this.startBusy();\n    }\n    const idleThenFunc = () => {\n      this.doneBusy();\n      func();\n      this._state[subkey] = null;\n    };\n    super._debounce(key, idleThenFunc, delay);\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/fetch-web.js\":\n/*!******************************!*\\\n  !*** ./runtime/fetch-web.js ***!\n  \\******************************/\n/*! exports provided: fetch */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"fetch\", function() { return local_fetch; });\n// Copyright (c) 2017 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\n// 'export default fetch' works because 'fetch' is evaluated as an expression, which finds the\n// appropriate global definition - but we don't want to use default exports.\n// 'export {fetch}' doesn't work because 'fetch' is just a name in that context and is not defined.\n// So we need to use an expression to find the global fetch function then map that for export.\n\nconst local_fetch = fetch;\n\n\n\n/***/ }),\n\n/***/ \"./runtime/multiplexer-dom-particle.js\":\n/*!*********************************************!*\\\n  !*** ./runtime/multiplexer-dom-particle.js ***!\n  \\*********************************************/\n/*! exports provided: MultiplexerDomParticle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MultiplexerDomParticle\", function() { return MultiplexerDomParticle; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ts-build/particle-spec.js */ \"./runtime/ts-build/particle-spec.js\");\n/* harmony import */ var _transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./transformation-dom-particle.js */ \"./runtime/transformation-dom-particle.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\nclass MultiplexerDomParticle extends _transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__[\"TransformationDomParticle\"] {\n  constructor() {\n    super();\n    this._itemSubIdByHostedSlotId = new Map();\n    this._connByHostedConn = new Map();\n  }\n\n  async _mapParticleConnections(\n      listHandleName,\n      particleHandleName,\n      hostedParticle,\n      handles,\n      arc) {\n    const otherMappedHandles = [];\n    const otherConnections = [];\n    let index = 2;\n    const skipConnectionNames = [listHandleName, particleHandleName];\n    for (const [connectionName, otherHandle] of handles) {\n      if (skipConnectionNames.includes(connectionName)) {\n        continue;\n      }\n      // TODO(wkorman): For items with embedded recipes we may need a map\n      // (perhaps id to index) to make sure we don't map a handle into the inner\n      // arc multiple times unnecessarily.\n      otherMappedHandles.push(\n          `use '${await arc.mapHandle(otherHandle._proxy)}' as v${index}`);\n      const hostedOtherConnection = hostedParticle.connections.find(\n          conn => conn.isCompatibleType(otherHandle.type));\n      if (hostedOtherConnection) {\n        otherConnections.push(`${hostedOtherConnection.name} = v${index++}`);\n        // TODO(wkorman): For items with embedded recipes where we may have a\n        // different particle rendering each item, we need to track\n        // |connByHostedConn| keyed on the particle type.\n        this._connByHostedConn.set(hostedOtherConnection.name, connectionName);\n      }\n    }\n    return [otherMappedHandles, otherConnections];\n  }\n\n  async setHandles(handles) {\n    this.handleIds = {};\n    const arc = await this.constructInnerArc();\n    const listHandleName = 'list';\n    const particleHandleName = 'hostedParticle';\n    const particleHandle = handles.get(particleHandleName);\n    let hostedParticle = null;\n    let otherMappedHandles = [];\n    let otherConnections = [];\n    if (particleHandle) {\n      hostedParticle = await particleHandle.get();\n      if (hostedParticle) {\n        [otherMappedHandles, otherConnections] =\n            await this._mapParticleConnections(\n                listHandleName, particleHandleName, hostedParticle, handles, arc);\n      }\n    }\n    this.setState({\n      arc,\n      type: handles.get(listHandleName).type,\n      hostedParticle,\n      otherMappedHandles,\n      otherConnections\n    });\n\n    super.setHandles(handles);\n  }\n\n  async willReceiveProps(\n      {list},\n      {arc, type, hostedParticle, otherMappedHandles, otherConnections}) {\n    if (list.length > 0) {\n      this.relevance = 0.1;\n    }\n\n    for (const [index, item] of this.getListEntries(list)) {\n      let resolvedHostedParticle = hostedParticle;\n      if (this.handleIds[item.id]) {\n        const itemHandle = await this.handleIds[item.id];\n        itemHandle.set(item);\n        continue;\n      }\n\n      const itemHandlePromise =\n          arc.createHandle(type.primitiveType(), 'item' + index);\n      this.handleIds[item.id] = itemHandlePromise;\n\n      const itemHandle = await itemHandlePromise;\n\n      if (!resolvedHostedParticle) {\n        // If we're muxing on behalf of an item with an embedded recipe, the\n        // hosted particle should be retrievable from the item itself. Else we\n        // just skip this item.\n        if (!item.renderParticleSpec) {\n          continue;\n        }\n        resolvedHostedParticle =\n            _ts_build_particle_spec_js__WEBPACK_IMPORTED_MODULE_1__[\"ParticleSpec\"].fromLiteral(JSON.parse(item.renderParticleSpec));\n        // Re-map compatible handles and compute the connections specific\n        // to this item's render particle.\n        const listHandleName = 'list';\n        const particleHandleName = 'renderParticle';\n        [otherMappedHandles, otherConnections] =\n            await this._mapParticleConnections(\n                listHandleName,\n                particleHandleName,\n                resolvedHostedParticle,\n                this.handles,\n                arc);\n      }\n      const hostedSlotName = [...resolvedHostedParticle.slots.keys()][0];\n      const slotName = [...this.spec.slots.values()][0].name;\n      const slotId = await arc.createSlot(\n          this, slotName, resolvedHostedParticle.name, hostedSlotName, itemHandle._id);\n\n      if (!slotId) {\n        continue;\n      }\n\n      this._itemSubIdByHostedSlotId.set(slotId, item.id);\n\n      try {\n        const recipe = this.constructInnerRecipe(\n          resolvedHostedParticle,\n          item,\n          itemHandle,\n          {name: hostedSlotName, id: slotId},\n          {connections: otherConnections, handles: otherMappedHandles}\n        );\n        await arc.loadRecipe(recipe, this);\n        itemHandle.set(item);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  combineHostedModel(slotName, hostedSlotId, content) {\n    const subId = this._itemSubIdByHostedSlotId.get(hostedSlotId);\n    if (!subId) {\n      return;\n    }\n    const items = this._state.renderModel ? this._state.renderModel.items : [];\n    const listIndex = items.findIndex(item => item.subId == subId);\n    const item = Object.assign({}, content.model, {subId});\n    if (listIndex >= 0 && listIndex < items.length) {\n      items[listIndex] = item;\n    } else {\n      items.push(item);\n    }\n    this._setState({renderModel: {items}});\n  }\n\n  combineHostedTemplate(slotName, hostedSlotId, content) {\n    const subId = this._itemSubIdByHostedSlotId.get(hostedSlotId);\n    if (!subId) {\n      return;\n    }\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(content.templateName, `Template name is missing for slot '${slotName}' (hosted slot ID: '${hostedSlotId}')`);\n    this._setState({templateName: Object.assign(this._state.templateName || {}, {[subId]: `${content.templateName}`})});\n\n    if (content.template) {\n      let template = content.template;\n      // Append subid$={{subid}} attribute to all provided slots, to make it usable for the transformation particle.\n      template = template.replace(new RegExp('slotid=\"[a-z]+\"', 'gi'), '$& subid$=\"{{subId}}\"');\n\n      // Replace hosted particle connection in template with the corresponding particle connection names.\n      // TODO: make this generic!\n      this._connByHostedConn.forEach((conn, hostedConn) => {\n        template = template.replace(\n            new RegExp(`{{${hostedConn}.description}}`, 'g'),\n            `{{${conn}.description}}`);\n      });\n      this._setState({template: Object.assign(this._state.template || {}, {[content.templateName]: template})});\n\n      this.forceRenderTemplate();\n    }\n  }\n\n  // Abstract methods below.\n\n  // Called to produce a full interpolated recipe for loading into an inner\n  // arc for each item. Subclasses should override this method as by default\n  // it does nothing and so no recipe will be returned and content will not\n  // be loaded successfully into the inner arc.\n  constructInnerRecipe(hostedParticle, item, itemHandle, slot, other) {}\n\n  // Called with the list of items and by default returns the direct result of\n  // `Array.entries()`. Subclasses can override this method to alter the item\n  // order or otherwise permute the items as desired before their slots are\n  // created and contents are rendered.\n  getListEntries(list) {\n    return list.entries();\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/transformation-dom-particle.js\":\n/*!************************************************!*\\\n  !*** ./runtime/transformation-dom-particle.js ***!\n  \\************************************************/\n/*! exports provided: TransformationDomParticle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TransformationDomParticle\", function() { return TransformationDomParticle; });\n/* harmony import */ var _dom_particle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom-particle.js */ \"./runtime/dom-particle.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n// Regex to separate style and template.\nconst re = /<style>((?:.|[\\r\\n])*)<\\/style>((?:.|[\\r\\n])*)/;\n\n/** @class TransformationDomParticle\n * Particle that does transformation stuff with DOM.\n */\nclass TransformationDomParticle extends _dom_particle_js__WEBPACK_IMPORTED_MODULE_0__[\"DomParticle\"] {\n  getTemplate(slotName) {\n    // TODO: add support for multiple slots.\n    return this._state.template;\n  }\n  getTemplateName(slotName) {\n    // TODO: add support for multiple slots.\n    return this._state.templateName;\n  }\n  render(props, state) {\n    return state.renderModel;\n  }\n  shouldRender(props, state) {\n    return Boolean((state.template || state.templateName) && state.renderModel);\n  }\n\n  renderHostedSlot(slotName, hostedSlotId, content) {\n    this.combineHostedTemplate(slotName, hostedSlotId, content);\n    this.combineHostedModel(slotName, hostedSlotId, content);\n  }\n\n  // abstract\n  combineHostedTemplate(slotName, hostedSlotId, content) {}\n  combineHostedModel(slotName, hostedSlotId, content) {}\n\n  // Helper methods that may be reused in transformation particles to combine hosted content.\n  static propsToItems(propsValues) {\n    return propsValues ? propsValues.map(({rawData, id}) => Object.assign({}, rawData, {subId: id})) : [];\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/converters/jsonldToManifest.js\":\n/*!*********************************************************!*\\\n  !*** ./runtime/ts-build/converters/jsonldToManifest.js ***!\n  \\*********************************************************/\n/*! exports provided: JsonldToManifest */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"JsonldToManifest\", function() { return JsonldToManifest; });\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\nconst supportedTypes = ['Text', 'URL', 'Number', 'Boolean'];\r\nclass JsonldToManifest {\r\n    static convert(jsonld, theClass = undefined) {\r\n        const obj = JSON.parse(jsonld);\r\n        const classes = {};\r\n        const properties = {};\r\n        if (!obj['@graph']) {\r\n            obj['@graph'] = [obj];\r\n        }\r\n        for (const item of obj['@graph']) {\r\n            if (item['@type'] === 'rdf:Property') {\r\n                properties[item['@id']] = item;\r\n            }\r\n            else if (item['@type'] === 'rdfs:Class') {\r\n                classes[item['@id']] = item;\r\n                item['subclasses'] = [];\r\n                item['superclass'] = null;\r\n            }\r\n        }\r\n        for (const clazz of Object.values(classes)) {\r\n            if (clazz['rdfs:subClassOf'] !== undefined) {\r\n                if (clazz['rdfs:subClassOf'].length == undefined) {\r\n                    clazz['rdfs:subClassOf'] = [clazz['rdfs:subClassOf']];\r\n                }\r\n                for (const subClass of clazz['rdfs:subClassOf']) {\r\n                    const superclass = subClass['@id'];\r\n                    if (clazz['superclass'] == undefined) {\r\n                        clazz['superclass'] = [];\r\n                    }\r\n                    if (classes[superclass]) {\r\n                        classes[superclass].subclasses.push(clazz);\r\n                        clazz['superclass'].push(classes[superclass]);\r\n                    }\r\n                    else {\r\n                        clazz['superclass'].push({ '@id': superclass });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for (const clazz of Object.values(classes)) {\r\n            if (clazz['subclasses'].length === 0 && theClass == undefined) {\r\n                theClass = clazz;\r\n            }\r\n        }\r\n        const relevantProperties = [];\r\n        for (const property of Object.values(properties)) {\r\n            let domains = property['schema:domainIncludes'];\r\n            if (!domains) {\r\n                domains = { '@id': theClass['@id'] };\r\n            }\r\n            if (!domains.length) {\r\n                domains = [domains];\r\n            }\r\n            domains = domains.map(a => a['@id']);\r\n            if (domains.includes(theClass['@id'])) {\r\n                const name = property['@id'].split(':')[1];\r\n                let type = property['schema:rangeIncludes'];\r\n                if (!type) {\r\n                    console.log(property);\r\n                }\r\n                if (!type.length) {\r\n                    type = [type];\r\n                }\r\n                type = type.map(a => a['@id'].split(':')[1]);\r\n                type = type.filter(type => supportedTypes.includes(type));\r\n                if (type.length > 0) {\r\n                    relevantProperties.push({ name, type });\r\n                }\r\n            }\r\n        }\r\n        const className = theClass['@id'].split(':')[1];\r\n        const superNames = theClass && theClass.superclass ? theClass.superclass.map(a => a['@id'].split(':')[1]) : [];\r\n        let s = '';\r\n        for (const superName of superNames) {\r\n            s += `import 'https://schema.org/${superName}'\\n\\n`;\r\n        }\r\n        s += `schema ${className}`;\r\n        if (superNames.length > 0) {\r\n            s += ` extends ${superNames.join(', ')}`;\r\n        }\r\n        if (relevantProperties.length > 0) {\r\n            for (const property of relevantProperties) {\r\n                let type;\r\n                if (property.type.length > 1) {\r\n                    type = '(' + property.type.join(' or ') + ')';\r\n                }\r\n                else {\r\n                    type = property.type[0];\r\n                }\r\n                s += `\\n  ${type} ${property.name}`;\r\n            }\r\n        }\r\n        s += '\\n';\r\n        return s;\r\n    }\r\n}\r\n//# sourceMappingURL=jsonldToManifest.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/entity.js\":\n/*!************************************!*\\\n  !*** ./runtime/ts-build/entity.js ***!\n  \\************************************/\n/*! exports provided: Entity */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Entity\", function() { return Entity; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols.js */ \"./runtime/ts-build/symbols.js\");\n// @license\r\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n\r\n\r\nclass Entity {\r\n    constructor(userIDComponent) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!userIDComponent || userIDComponent.indexOf(':') === -1, 'user IDs must not contain the \\':\\' character');\r\n        this[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier] = undefined;\r\n        this.userIDComponent = userIDComponent;\r\n    }\r\n    get data() {\r\n        return undefined;\r\n    }\r\n    getUserID() {\r\n        return this.userIDComponent;\r\n    }\r\n    isIdentified() {\r\n        return this[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier] !== undefined;\r\n    }\r\n    // TODO: entity should not be exposing its IDs.\r\n    get id() {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!!this.isIdentified());\r\n        return this[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier];\r\n    }\r\n    identify(identifier) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!this.isIdentified());\r\n        this[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier] = identifier;\r\n        const components = identifier.split(':');\r\n        if (components[components.length - 2] === 'uid') {\r\n            this.userIDComponent = components[components.length - 1];\r\n        }\r\n    }\r\n    createIdentity(components) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(!this.isIdentified());\r\n        let id;\r\n        if (this.userIDComponent) {\r\n            id = `${components.base}:uid:${this.userIDComponent}`;\r\n        }\r\n        else {\r\n            id = `${components.base}:${components.component()}`;\r\n        }\r\n        this[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier] = id;\r\n    }\r\n    toLiteral() {\r\n        return this.rawData;\r\n    }\r\n}\r\n//# sourceMappingURL=entity.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/handle.js\":\n/*!************************************!*\\\n  !*** ./runtime/ts-build/handle.js ***!\n  \\************************************/\n/*! exports provided: Handle, handleFor */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Handle\", function() { return Handle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"handleFor\", function() { return handleFor; });\n/* harmony import */ var _reference_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./reference.js */ \"./runtime/ts-build/reference.js\");\n/* harmony import */ var _symbols_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./symbols.js */ \"./runtime/ts-build/symbols.js\");\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _particle_spec_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./particle-spec.js */ \"./runtime/ts-build/particle-spec.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/** @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\n\r\n// TODO: This won't be needed once runtime is transferred between contexts.\r\nfunction cloneData(data) {\r\n    return data;\r\n    //return JSON.parse(JSON.stringify(data));\r\n}\r\nfunction restore(entry, entityClass) {\r\n    Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(entityClass, 'Handles need entity classes for deserialization');\r\n    const { id, rawData } = entry;\r\n    const entity = new entityClass(cloneData(rawData));\r\n    if (entry.id) {\r\n        entity.identify(entry.id);\r\n    }\r\n    // TODO some relation magic, somewhere, at some point.\r\n    return entity;\r\n}\r\n/** @class Handle\r\n * Base class for Collections and Variables.\r\n */\r\nclass Handle {\r\n    // TODO type particleId, marked as string, but called with number\r\n    constructor(proxy, name, particleId, canRead, canWrite) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(!(proxy instanceof Handle));\r\n        this._proxy = proxy;\r\n        this.name = name || this._proxy.name;\r\n        this.canRead = canRead;\r\n        this.canWrite = canWrite;\r\n        this._particleId = particleId;\r\n        this.options = {\r\n            keepSynced: true,\r\n            notifySync: true,\r\n            notifyUpdate: true,\r\n            notifyDesync: false,\r\n        };\r\n    }\r\n    raiseSystemException(exception, method) {\r\n        this._proxy.raiseSystemException(exception, method, this._particleId);\r\n    }\r\n    // `options` may contain any of:\r\n    // - keepSynced (bool): load full data on startup, maintain data in proxy and resync as required\r\n    // - notifySync (bool): if keepSynced is true, call onHandleSync when the full data is received\r\n    // - notifyUpdate (bool): call onHandleUpdate for every change event received\r\n    // - notifyDesync (bool): if keepSynced is true, call onHandleDesync when desync is detected\r\n    configure(options) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(this.canRead, 'configure can only be called on readable Handles');\r\n        try {\r\n            const keys = Object.keys(this.options);\r\n            const badKeys = Object.keys(options).filter(o => !keys.includes(o));\r\n            if (badKeys.length > 0) {\r\n                throw new Error(`Invalid option in Handle.configure(): ${badKeys}`);\r\n            }\r\n            Object.assign(this.options, options);\r\n        }\r\n        catch (e) {\r\n            this.raiseSystemException(e, 'Handle::configure');\r\n            throw e;\r\n        }\r\n    }\r\n    _serialize(entity) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(entity, 'can\\'t serialize a null entity');\r\n        if (!entity.isIdentified()) {\r\n            entity.createIdentity(this._proxy.generateIDComponents());\r\n        }\r\n        const id = entity[_symbols_js__WEBPACK_IMPORTED_MODULE_1__[\"Symbols\"].identifier];\r\n        const rawData = entity.dataClone();\r\n        return {\r\n            id,\r\n            rawData\r\n        };\r\n    }\r\n    get type() {\r\n        return this._proxy.type;\r\n    }\r\n    get _id() {\r\n        return this._proxy.id;\r\n    }\r\n    async store(entity) {\r\n        throw new Error('unimplemented');\r\n    }\r\n    toManifestString() {\r\n        return `'${this._id}'`;\r\n    }\r\n}\r\n/**\r\n * A handle on a set of Entity data. Note that, as a set, a Collection can only\r\n * contain a single version of an Entity for each given ID. Further, no order is\r\n * implied by the set. A particle's manifest dictates the types of handles that\r\n * need to be connected to that particle, and the current recipe identifies\r\n * which handles are connected.\r\n */\r\nclass Collection extends Handle {\r\n    _notify(kind, particle, details) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(this.canRead, '_notify should not be called for non-readable handles');\r\n        switch (kind) {\r\n            case 'sync':\r\n                particle.onHandleSync(this, this._restore(details));\r\n                return;\r\n            case 'update': {\r\n                // tslint:disable-next-line: no-any\r\n                const update = {};\r\n                if ('add' in details) {\r\n                    update.added = this._restore(details.add);\r\n                }\r\n                if ('remove' in details) {\r\n                    update.removed = this._restore(details.remove);\r\n                }\r\n                update.originator = details.originatorId === this._particleId;\r\n                particle.onHandleUpdate(this, update);\r\n                return;\r\n            }\r\n            case 'desync':\r\n                particle.onHandleDesync(this);\r\n                return;\r\n            default:\r\n                throw new Error('unsupported');\r\n        }\r\n    }\r\n    /**\r\n     * Returns the Entity specified by id contained by the handle, or null if this id is not\r\n     * contained by the handle.\r\n     * @throws {Error} if this handle is not configured as a readable handle (i.e. 'in' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async get(id) {\r\n        if (!this.canRead) {\r\n            throw new Error('Handle not readable');\r\n        }\r\n        return this._restore([await this._proxy.get(id, this._particleId)])[0];\r\n    }\r\n    /**\r\n     * @returns a list of the Entities contained by the handle.\r\n     * @throws {Error} if this handle is not configured as a readable handle (i.e. 'in' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async toList() {\r\n        if (!this.canRead) {\r\n            throw new Error('Handle not readable');\r\n        }\r\n        return this._restore(await this._proxy.toList());\r\n    }\r\n    _restore(list) {\r\n        return (list !== null) ? list.map(a => restore(a, this.entityClass)) : null;\r\n    }\r\n    /**\r\n     * Stores a new entity into the Handle.\r\n     * @throws {Error} if this handle is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async store(entity) {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        const serialization = this._serialize(entity);\r\n        const keys = [this._proxy.generateID() + 'key'];\r\n        return this._proxy.store(serialization, keys, this._particleId);\r\n    }\r\n    /**\r\n     * Removes all known entities from the Handle.\r\n     * @throws {Error} if this handle is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async clear() {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        return this._proxy.clear(this._particleId);\r\n    }\r\n    /**\r\n     * Removes an entity from the Handle.\r\n     * @throws {Error} if this handle is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async remove(entity) {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        const serialization = this._serialize(entity);\r\n        // Remove the keys that exist at storage/proxy.\r\n        const keys = [];\r\n        return this._proxy.remove(serialization.id, keys, this._particleId);\r\n    }\r\n}\r\n/**\r\n * A handle on a single entity. A particle's manifest dictates\r\n * the types of handles that need to be connected to that particle, and\r\n * the current recipe identifies which handles are connected.\r\n */\r\nclass Variable extends Handle {\r\n    // Called by StorageProxy.\r\n    async _notify(kind, particle, details) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(this.canRead, '_notify should not be called for non-readable handles');\r\n        switch (kind) {\r\n            case 'sync':\r\n                try {\r\n                    await particle.onHandleSync(this, this._restore(details));\r\n                }\r\n                catch (e) {\r\n                    this.raiseSystemException(e, `${particle.name}::onHandleSync`);\r\n                }\r\n                return;\r\n            case 'update': {\r\n                try {\r\n                    await particle.onHandleUpdate(this, { data: this._restore(details.data) });\r\n                }\r\n                catch (e) {\r\n                    this.raiseSystemException(e, `${particle.name}::onHandleUpdate`);\r\n                }\r\n                return;\r\n            }\r\n            case 'desync':\r\n                try {\r\n                    await particle.onHandleDesync(this);\r\n                }\r\n                catch (e) {\r\n                    this.raiseSystemException(e, `${particle.name}::onHandleDesync`);\r\n                }\r\n                return;\r\n            default:\r\n                throw new Error('unsupported');\r\n        }\r\n    }\r\n    /**\r\n     * @returns the Entity contained by the Variable, or undefined if the Variable\r\n     * is cleared.\r\n     * @throws {Error} if this variable is not configured as a readable handle (i.e. 'in' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async get() {\r\n        if (!this.canRead) {\r\n            throw new Error('Handle not readable');\r\n        }\r\n        const model = await this._proxy.get();\r\n        return this._restore(model);\r\n    }\r\n    _restore(model) {\r\n        if (model === null) {\r\n            return null;\r\n        }\r\n        if (this.type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"EntityType\"]) {\r\n            return restore(model, this.entityClass);\r\n        }\r\n        if (this.type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"InterfaceType\"]) {\r\n            return _particle_spec_js__WEBPACK_IMPORTED_MODULE_3__[\"ParticleSpec\"].fromLiteral(model);\r\n        }\r\n        if (this.type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"ReferenceType\"]) {\r\n            return new _reference_js__WEBPACK_IMPORTED_MODULE_0__[\"Reference\"](model, this.type, this._proxy.pec);\r\n        }\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(false, `Don't know how to deliver handle data of type ${this.type}`);\r\n    }\r\n    /**\r\n     * Stores a new entity into the Variable, replacing any existing entity.\r\n     * @throws {Error} if this variable is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async set(entity) {\r\n        try {\r\n            if (!this.canWrite) {\r\n                throw new Error('Handle not writeable');\r\n            }\r\n            return this._proxy.set(this._serialize(entity), this._particleId);\r\n        }\r\n        catch (e) {\r\n            this.raiseSystemException(e, 'Handle::set');\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Clears any entity currently in the Variable.\r\n     * @throws {Error} if this variable is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async clear() {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        return this._proxy.clear(this._particleId);\r\n    }\r\n}\r\n/**\r\n * Provides paginated read access to a BigCollection. Conforms to the javascript iterator protocol\r\n * but is not marked as iterable because next() is async, which is currently not supported by\r\n * implicit iteration in Javascript.\r\n */\r\nclass Cursor {\r\n    constructor(parent, cursorId) {\r\n        this._parent = parent;\r\n        this._cursorId = cursorId;\r\n    }\r\n    /**\r\n     * Returns {value: [items], done: false} while there are items still available, or {done: true}\r\n     * when the cursor has completed reading the collection.\r\n     */\r\n    async next() {\r\n        const data = await this._parent._proxy.cursorNext(this._cursorId);\r\n        if (!data.done) {\r\n            data.value = data.value.map(a => restore(a, this._parent.entityClass));\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * Terminates the streamed read. This must be called if a cursor is no longer needed but has not\r\n     * yet completed streaming (i.e. next() hasn't returned {done: true}).\r\n     */\r\n    close() {\r\n        this._parent._proxy.cursorClose(this._cursorId);\r\n    }\r\n}\r\n/**\r\n * A handle on a large set of Entity data. Similar to Collection, except the complete set of\r\n * entities is not available directly; use stream() to read the full set. Particles wanting to\r\n * operate on BigCollections should do so in the setHandles() call, since BigCollections do not\r\n * trigger onHandleSync() or onHandleUpdate().\r\n */\r\nclass BigCollection extends Handle {\r\n    configure(options) {\r\n        throw new Error('BigCollections do not support sync/update configuration');\r\n    }\r\n    async _notify(kind, particle, details) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(this.canRead, '_notify should not be called for non-readable handles');\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_2__[\"assert\"])(kind === 'sync', 'BigCollection._notify only supports sync events');\r\n        await particle.onHandleSync(this, []);\r\n    }\r\n    /**\r\n     * Stores a new entity into the Handle.\r\n     * @throws {Error} if this handle is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async store(entity) {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        const serialization = this._serialize(entity);\r\n        const keys = [this._proxy.generateID() + 'key'];\r\n        return this._proxy.store(serialization, keys, this._particleId);\r\n    }\r\n    /**\r\n     * Removes an entity from the Handle.\r\n     * @throws {Error} if this handle is not configured as a writeable handle (i.e. 'out' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async remove(entity) {\r\n        if (!this.canWrite) {\r\n            throw new Error('Handle not writeable');\r\n        }\r\n        const serialization = this._serialize(entity);\r\n        return this._proxy.remove(serialization.id, this._particleId);\r\n    }\r\n    /**\r\n     * @returns a Cursor instance that iterates over the full set of entities, reading `pageSize`\r\n     * entities at a time. The cursor views a snapshot of the collection, locked to the version\r\n     * at which the cursor is created.\r\n     *\r\n     * By default items are returned in order of original insertion into the collection (with the\r\n     * caveat that items removed during a streamed read may be returned at the end). Set `forward`\r\n     * to false to return items in reverse insertion order.\r\n     *\r\n     * @throws {Error} if this variable is not configured as a readable handle (i.e. 'in' or 'inout')\r\n     * in the particle's manifest.\r\n     */\r\n    async stream({ pageSize, forward = true }) {\r\n        if (!this.canRead) {\r\n            throw new Error('Handle not readable');\r\n        }\r\n        if (isNaN(pageSize) || pageSize < 1) {\r\n            throw new Error('Streamed reads require a positive pageSize');\r\n        }\r\n        const cursorId = await this._proxy.stream(pageSize, forward);\r\n        return new Cursor(this, cursorId);\r\n    }\r\n}\r\nfunction handleFor(proxy, name = null, particleId = 0, canRead = true, canWrite = true) {\r\n    let handle;\r\n    if (proxy.type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"CollectionType\"]) {\r\n        handle = new Collection(proxy, name, particleId, canRead, canWrite);\r\n    }\r\n    else if (proxy.type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"BigCollectionType\"]) {\r\n        handle = new BigCollection(proxy, name, particleId, canRead, canWrite);\r\n    }\r\n    else {\r\n        handle = new Variable(proxy, name, particleId, canRead, canWrite);\r\n    }\r\n    const type = proxy.type.getContainedType() || proxy.type;\r\n    if (type instanceof _type_js__WEBPACK_IMPORTED_MODULE_4__[\"EntityType\"]) {\r\n        handle.entityClass = type.entitySchema.entityClass(proxy.pec);\r\n    }\r\n    return handle;\r\n}\r\n//# sourceMappingURL=handle.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/loader.js\":\n/*!************************************!*\\\n  !*** ./runtime/ts-build/loader.js ***!\n  \\************************************/\n/*! exports provided: Loader */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Loader\", function() { return Loader; });\n/* harmony import */ var _platform_fs_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/fs-web.js */ \"./platform/fs-web.js\");\n/* harmony import */ var _platform_vm_web_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../platform/vm-web.js */ \"./platform/vm-web.js\");\n/* harmony import */ var _fetch_web_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../fetch-web.js */ \"./runtime/fetch-web.js\");\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _particle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./particle.js */ \"./runtime/ts-build/particle.js\");\n/* harmony import */ var _dom_particle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom-particle.js */ \"./runtime/dom-particle.js\");\n/* harmony import */ var _multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../multiplexer-dom-particle.js */ \"./runtime/multiplexer-dom-particle.js\");\n/* harmony import */ var _reference_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./reference.js */ \"./runtime/ts-build/reference.js\");\n/* harmony import */ var _transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../transformation-dom-particle.js */ \"./runtime/transformation-dom-particle.js\");\n/* harmony import */ var _converters_jsonldToManifest_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./converters/jsonldToManifest.js */ \"./runtime/ts-build/converters/jsonldToManifest.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst html = (strings, ...values) => (strings[0] + values.map((v, i) => v + strings[i + 1]).join('')).trim();\r\nfunction schemaLocationFor(name) {\r\n    return `../entities/${name}.schema`;\r\n}\r\nclass Loader {\r\n    path(fileName) {\r\n        const path = fileName.replace(/[/][^/]+$/, '/');\r\n        return path;\r\n    }\r\n    join(prefix, path) {\r\n        if (/^https?:\\/\\//.test(path)) {\r\n            return path;\r\n        }\r\n        // TODO: replace this with something that isn't hacky\r\n        if (path[0] === '/' || path[1] === ':') {\r\n            return path;\r\n        }\r\n        prefix = this.path(prefix);\r\n        path = this.normalizeDots(`${prefix}${path}`);\r\n        return path;\r\n    }\r\n    // convert `././foo/bar/../baz` to `./foo/baz`\r\n    normalizeDots(path) {\r\n        // only unix slashes\r\n        path = path.replace(/\\\\/g, '/');\r\n        // remove './'\r\n        path = path.replace(/\\/\\.\\//g, '/');\r\n        // remove 'foo/..'\r\n        const norm = s => s.replace(/(?:^|\\/)[^./]*\\/\\.\\./g, '');\r\n        for (let n = norm(path); n !== path; path = n, n = norm(path))\r\n            ;\r\n        return path;\r\n    }\r\n    loadResource(file) {\r\n        if (/^https?:\\/\\//.test(file)) {\r\n            return this._loadURL(file);\r\n        }\r\n        return this._loadFile(file);\r\n    }\r\n    _loadFile(file) {\r\n        return new Promise((resolve, reject) => {\r\n            _platform_fs_web_js__WEBPACK_IMPORTED_MODULE_0__[\"fs\"].readFile(file, (err, data) => {\r\n                if (err) {\r\n                    reject(err);\r\n                }\r\n                else {\r\n                    resolve(data.toString('utf-8'));\r\n                }\r\n            });\r\n        });\r\n    }\r\n    _loadURL(url) {\r\n        if (/\\/\\/schema.org\\//.test(url)) {\r\n            if (url.endsWith('/Thing')) {\r\n                return Object(_fetch_web_js__WEBPACK_IMPORTED_MODULE_2__[\"fetch\"])('https://schema.org/Product.jsonld').then(res => res.text()).then(data => _converters_jsonldToManifest_js__WEBPACK_IMPORTED_MODULE_9__[\"JsonldToManifest\"].convert(data, { '@id': 'schema:Thing' }));\r\n            }\r\n            return Object(_fetch_web_js__WEBPACK_IMPORTED_MODULE_2__[\"fetch\"])(url + '.jsonld').then(res => res.text()).then(data => _converters_jsonldToManifest_js__WEBPACK_IMPORTED_MODULE_9__[\"JsonldToManifest\"].convert(data));\r\n        }\r\n        return Object(_fetch_web_js__WEBPACK_IMPORTED_MODULE_2__[\"fetch\"])(url).then(res => res.text());\r\n    }\r\n    async loadParticleClass(spec) {\r\n        const clazz = await this.requireParticle(spec.implFile);\r\n        clazz.spec = spec;\r\n        return clazz;\r\n    }\r\n    async requireParticle(fileName) {\r\n        if (fileName === null)\r\n            fileName = '';\r\n        const src = await this.loadResource(fileName);\r\n        // Note. This is not real isolation.\r\n        const script = new _platform_vm_web_js__WEBPACK_IMPORTED_MODULE_1__[\"vm\"].Script(src, { filename: fileName, displayErrors: true });\r\n        const result = [];\r\n        const self = {\r\n            defineParticle(particleWrapper) {\r\n                result.push(particleWrapper);\r\n            },\r\n            console,\r\n            fetch: _fetch_web_js__WEBPACK_IMPORTED_MODULE_2__[\"fetch\"],\r\n            setTimeout,\r\n            importScripts: s => null //console.log(`(skipping browser-space import for [${s}])`)\r\n        };\r\n        script.runInNewContext(self, { filename: fileName, displayErrors: true });\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__[\"assert\"])(result.length > 0 && typeof result[0] === 'function', `Error while instantiating particle implementation from ${fileName}`);\r\n        return this.unwrapParticle(result[0]);\r\n    }\r\n    setParticleExecutionContext(pec) {\r\n        this.pec = pec;\r\n    }\r\n    unwrapParticle(particleWrapper) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__[\"assert\"])(this.pec);\r\n        return particleWrapper({ Particle: _particle_js__WEBPACK_IMPORTED_MODULE_4__[\"Particle\"], DomParticle: _dom_particle_js__WEBPACK_IMPORTED_MODULE_5__[\"DomParticle\"], TransformationDomParticle: _transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_8__[\"TransformationDomParticle\"], MultiplexerDomParticle: _multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_6__[\"MultiplexerDomParticle\"], Reference: _reference_js__WEBPACK_IMPORTED_MODULE_7__[\"Reference\"].newClientReference(this.pec), html });\r\n    }\r\n}\r\n//# sourceMappingURL=loader.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/particle-execution-context.js\":\n/*!********************************************************!*\\\n  !*** ./runtime/ts-build/particle-execution-context.js ***!\n  \\********************************************************/\n/*! exports provided: ParticleExecutionContext */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParticleExecutionContext\", function() { return ParticleExecutionContext; });\n/* harmony import */ var _handle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./handle.js */ \"./runtime/ts-build/handle.js\");\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _api_channel_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../api-channel.js */ \"./runtime/api-channel.js\");\n/* harmony import */ var _storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./storage-proxy.js */ \"./runtime/ts-build/storage-proxy.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\nclass ParticleExecutionContext {\r\n    constructor(port, idBase, loader) {\r\n        this.particles = [];\r\n        this._nextLocalID = 0;\r\n        this.pendingLoads = [];\r\n        this.scheduler = new _storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__[\"StorageProxyScheduler\"]();\r\n        this.keyedProxies = {};\r\n        this.apiPort = new _api_channel_js__WEBPACK_IMPORTED_MODULE_2__[\"PECInnerPort\"](port);\r\n        this.idBase = idBase;\r\n        this.loader = loader;\r\n        loader.setParticleExecutionContext(this);\r\n        /*\r\n         * This code ensures that the relevant types are known\r\n         * in the scope object, because otherwise we can't do\r\n         * particleSpec resolution, which is currently a necessary\r\n         * part of particle construction.\r\n         *\r\n         * Possibly we should eventually consider having particle\r\n         * specifications separated from particle classes - and\r\n         * only keeping type information on the arc side.\r\n         */\r\n        this.apiPort.onDefineHandle = ({ type, identifier, name }) => {\r\n            return _storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__[\"StorageProxy\"].newProxy(identifier, type, this.apiPort, this, this.scheduler, name);\r\n        };\r\n        this.apiPort.onGetBackingStoreCallback = ({ type, id, name, callback, storageKey }) => {\r\n            const proxy = _storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__[\"StorageProxy\"].newProxy(id, type, this.apiPort, this, this.scheduler, name);\r\n            proxy.storageKey = storageKey;\r\n            return [proxy, () => callback(proxy, storageKey)];\r\n        };\r\n        this.apiPort.onCreateHandleCallback = ({ type, id, name, callback }) => {\r\n            const proxy = _storage_proxy_js__WEBPACK_IMPORTED_MODULE_3__[\"StorageProxy\"].newProxy(id, type, this.apiPort, this, this.scheduler, name);\r\n            return [proxy, () => callback(proxy)];\r\n        };\r\n        this.apiPort.onMapHandleCallback = ({ id, callback }) => {\r\n            return [id, () => callback(id)];\r\n        };\r\n        this.apiPort.onCreateSlotCallback = ({ hostedSlotId, callback }) => {\r\n            return [hostedSlotId, () => callback(hostedSlotId)];\r\n        };\r\n        this.apiPort.onInnerArcRender = ({ transformationParticle, transformationSlotName, hostedSlotId, content }) => {\r\n            transformationParticle.renderHostedSlot(transformationSlotName, hostedSlotId, content);\r\n        };\r\n        this.apiPort.onStop = () => {\r\n            if (global['close']) {\r\n                global['close']();\r\n            }\r\n        };\r\n        this.apiPort.onInstantiateParticle =\r\n            ({ id, spec, handles }) => this._instantiateParticle(id, spec, handles);\r\n        this.apiPort.onSimpleCallback = ({ callback, data }) => callback(data);\r\n        this.apiPort.onConstructArcCallback = ({ callback, arc }) => callback(arc);\r\n        this.apiPort.onAwaitIdle = ({ version }) => this.idle.then(a => {\r\n            // TODO: dom-particles update is async, this is a workaround to allow dom-particles to\r\n            // update relevance, after handles are updated. Needs better idle signal.\r\n            setTimeout(() => { this.apiPort.Idle({ version, relevance: this.relevance }); }, 0);\r\n        });\r\n        this.apiPort.onUIEvent = ({ particle, slotName, event }) => particle.fireEvent(slotName, event);\r\n        this.apiPort.onStartRender = ({ particle, slotName, providedSlots, contentTypes }) => {\r\n            /**\r\n             * A representation of a consumed slot. Retrieved from a particle using\r\n             * particle.getSlot(name)\r\n             */\r\n            class Slotlet {\r\n                constructor(pec, particle, slotName, providedSlots) {\r\n                    this.handlers = new Map();\r\n                    this.requestedContentTypes = new Set();\r\n                    this._isRendered = false;\r\n                    this.slotName = slotName;\r\n                    this.particle = particle;\r\n                    this.pec = pec;\r\n                    this.providedSlots = providedSlots;\r\n                }\r\n                get isRendered() { return this._isRendered; }\r\n                /**\r\n                 * renders content to the slot.\r\n                 */\r\n                render(content) {\r\n                    if (content.template && this.providedSlots.size > 0) {\r\n                        content = Object.assign({}, content);\r\n                        if (typeof content.template === 'string') {\r\n                            content.template = this.substituteSlotNamesForIds(content.template);\r\n                        }\r\n                        else {\r\n                            content.template = Object.entries(content.template).reduce((templateDictionary, [templateName, templateValue]) => {\r\n                                templateDictionary[templateName] = this.substituteSlotNamesForIds(templateValue);\r\n                                return templateDictionary;\r\n                            }, {});\r\n                        }\r\n                    }\r\n                    this.pec.apiPort.Render({ particle, slotName, content });\r\n                    Object.keys(content).forEach(key => { this.requestedContentTypes.delete(key); });\r\n                    // Slot is considered rendered, if a non-empty content was sent and all requested content types were fullfilled.\r\n                    this._isRendered = this.requestedContentTypes.size === 0 && (Object.keys(content).length > 0);\r\n                }\r\n                substituteSlotNamesForIds(template) {\r\n                    this.providedSlots.forEach((slotId, slotName) => {\r\n                        // TODO: This is a simple string replacement right now,\r\n                        // ensuring that 'slotid' is an attribute on an HTML element would be an improvement.\r\n                        template = template.replace(new RegExp(`slotid=\\\"${slotName}\\\"`, 'gi'), `slotid=\"${slotId}\"`);\r\n                    });\r\n                    return template;\r\n                }\r\n                /**\r\n                 * registers a callback to be invoked when 'name' event happens.\r\n                 */\r\n                registerEventHandler(name, f) {\r\n                    if (!this.handlers.has(name)) {\r\n                        this.handlers.set(name, []);\r\n                    }\r\n                    this.handlers.get(name).push(f);\r\n                }\r\n                clearEventHandlers(name) {\r\n                    this.handlers.set(name, []);\r\n                }\r\n                fireEvent(event) {\r\n                    for (const handler of this.handlers.get(event.handler) || []) {\r\n                        handler(event);\r\n                    }\r\n                }\r\n            }\r\n            particle._slotByName.set(slotName, new Slotlet(this, particle, slotName, providedSlots));\r\n            particle.renderSlot(slotName, contentTypes);\r\n        };\r\n        this.apiPort.onStopRender = ({ particle, slotName }) => {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(particle._slotByName.has(slotName), `Stop render called for particle ${particle.name} slot ${slotName} without start render being called.`);\r\n            particle._slotByName.delete(slotName);\r\n        };\r\n    }\r\n    generateIDComponents() {\r\n        return { base: this.idBase, component: () => this._nextLocalID++ };\r\n    }\r\n    generateID() {\r\n        return `${this.idBase}:${this._nextLocalID++}`;\r\n    }\r\n    innerArcHandle(arcId, particleId) {\r\n        const pec = this;\r\n        return {\r\n            createHandle(type, name, hostParticle) {\r\n                return new Promise((resolve, reject) => pec.apiPort.ArcCreateHandle({ arc: arcId, type, name, callback: proxy => {\r\n                        const handle = Object(_handle_js__WEBPACK_IMPORTED_MODULE_0__[\"handleFor\"])(proxy, name, particleId);\r\n                        resolve(handle);\r\n                        if (hostParticle) {\r\n                            proxy.register(hostParticle, handle);\r\n                        }\r\n                    } }));\r\n            },\r\n            mapHandle(handle) {\r\n                return new Promise((resolve, reject) => pec.apiPort.ArcMapHandle({ arc: arcId, handle, callback: id => {\r\n                        resolve(id);\r\n                    } }));\r\n            },\r\n            createSlot(transformationParticle, transformationSlotName, hostedParticleName, hostedSlotName, handleId) {\r\n                // handleId: the ID of a handle (returned by `createHandle` above) this slot is rendering; null - if not applicable.\r\n                // TODO: support multiple handle IDs.\r\n                return new Promise((resolve, reject) => pec.apiPort.ArcCreateSlot({ arc: arcId, transformationParticle, transformationSlotName, hostedParticleName, hostedSlotName, handleId, callback: hostedSlotId => {\r\n                        resolve(hostedSlotId);\r\n                    } }));\r\n            },\r\n            loadRecipe(recipe) {\r\n                // TODO: do we want to return a promise on completion?\r\n                return new Promise((resolve, reject) => pec.apiPort.ArcLoadRecipe({\r\n                    arc: arcId,\r\n                    recipe,\r\n                    callback: a => {\r\n                        if (a == undefined) {\r\n                            resolve();\r\n                        }\r\n                        else {\r\n                            reject(a);\r\n                        }\r\n                    }\r\n                }));\r\n            }\r\n        };\r\n    }\r\n    getStorageProxy(storageKey, type) {\r\n        if (!this.keyedProxies[storageKey]) {\r\n            this.keyedProxies[storageKey] = new Promise((resolve, reject) => {\r\n                this.apiPort.GetBackingStore({ storageKey, type, callback: (proxy, storageKey) => {\r\n                        this.keyedProxies[storageKey] = proxy;\r\n                        resolve(proxy);\r\n                    } });\r\n            });\r\n        }\r\n        return this.keyedProxies[storageKey];\r\n    }\r\n    defaultCapabilitySet() {\r\n        return {\r\n            constructInnerArc: particle => {\r\n                return new Promise((resolve, reject) => this.apiPort.ConstructInnerArc({ callback: arcId => { resolve(this.innerArcHandle(arcId, particle.id)); }, particle }));\r\n            }\r\n        };\r\n    }\r\n    async _instantiateParticle(id, spec, proxies) {\r\n        const name = spec.name;\r\n        let resolve = null;\r\n        const p = new Promise(res => resolve = res);\r\n        this.pendingLoads.push(p);\r\n        const clazz = await this.loader.loadParticleClass(spec);\r\n        const capabilities = this.defaultCapabilitySet();\r\n        const particle = new clazz(); // TODO: how can i add an argument to DomParticle ctor?\r\n        particle.id = id;\r\n        particle.capabilities = capabilities;\r\n        this.particles.push(particle);\r\n        const handleMap = new Map();\r\n        const registerList = [];\r\n        proxies.forEach((proxy, name) => {\r\n            const connSpec = spec.connectionMap.get(name);\r\n            const handle = Object(_handle_js__WEBPACK_IMPORTED_MODULE_0__[\"handleFor\"])(proxy, name, id, connSpec.isInput, connSpec.isOutput);\r\n            handleMap.set(name, handle);\r\n            // Defer registration of handles with proxies until after particles have a chance to\r\n            // configure them in setHandles.\r\n            registerList.push({ proxy, particle, handle });\r\n        });\r\n        return [particle, async () => {\r\n                await particle.setHandles(handleMap);\r\n                registerList.forEach(({ proxy, particle, handle }) => proxy.register(particle, handle));\r\n                const idx = this.pendingLoads.indexOf(p);\r\n                this.pendingLoads.splice(idx, 1);\r\n                resolve();\r\n            }];\r\n    }\r\n    get relevance() {\r\n        const rMap = new Map();\r\n        this.particles.forEach(p => {\r\n            if (p.relevances.length === 0) {\r\n                return;\r\n            }\r\n            rMap.set(p, p.relevances);\r\n            p.relevances = [];\r\n        });\r\n        return rMap;\r\n    }\r\n    get busy() {\r\n        if (this.pendingLoads.length > 0 || this.scheduler.busy) {\r\n            return true;\r\n        }\r\n        if (this.particles.filter(particle => particle.busy).length > 0) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    get idle() {\r\n        if (!this.busy) {\r\n            return Promise.resolve();\r\n        }\r\n        const busyParticlePromises = this.particles.filter(particle => particle.busy).map(particle => particle.idle);\r\n        return Promise.all([this.scheduler.idle, ...this.pendingLoads, ...busyParticlePromises]).then(() => this.idle);\r\n    }\r\n}\r\n//# sourceMappingURL=particle-execution-context.js.map\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/particle-spec.js\":\n/*!*******************************************!*\\\n  !*** ./runtime/ts-build/particle-spec.js ***!\n  \\*******************************************/\n/*! exports provided: ConnectionSpec, SlotSpec, ProvidedSlotSpec, ParticleSpec */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ConnectionSpec\", function() { return ConnectionSpec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotSpec\", function() { return SlotSpec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ProvidedSlotSpec\", function() { return ProvidedSlotSpec; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ParticleSpec\", function() { return ParticleSpec; });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./recipe/type-checker.js */ \"./runtime/ts-build/recipe/type-checker.js\");\n/* harmony import */ var _shape_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shape.js */ \"./runtime/ts-build/shape.js\");\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\nclass ConnectionSpec {\r\n    constructor(rawData, typeVarMap) {\r\n        this.parentConnection = null;\r\n        this.rawData = rawData;\r\n        this.direction = rawData.direction;\r\n        this.name = rawData.name;\r\n        this.type = rawData.type.mergeTypeVariablesByName(typeVarMap);\r\n        this.isOptional = rawData.isOptional;\r\n        this.tags = rawData.tags || [];\r\n        this.dependentConnections = [];\r\n    }\r\n    instantiateDependentConnections(particle, typeVarMap) {\r\n        for (const dependentArg of this.rawData.dependentConnections) {\r\n            const dependentConnection = particle.createConnection(dependentArg, typeVarMap);\r\n            dependentConnection.parentConnection = this;\r\n            this.dependentConnections.push(dependentConnection);\r\n        }\r\n    }\r\n    get isInput() {\r\n        // TODO: we probably don't really want host to be here.\r\n        return this.direction === 'in' || this.direction === 'inout' || this.direction === 'host';\r\n    }\r\n    get isOutput() {\r\n        return this.direction === 'out' || this.direction === 'inout';\r\n    }\r\n    isCompatibleType(type) {\r\n        return _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeChecker\"].compareTypes({ type }, { type: this.type, direction: this.direction });\r\n    }\r\n}\r\nclass SlotSpec {\r\n    constructor(slotModel) {\r\n        this.name = slotModel.name;\r\n        this.isRequired = slotModel.isRequired;\r\n        this.isSet = slotModel.isSet;\r\n        this.tags = slotModel.tags || [];\r\n        this.formFactor = slotModel.formFactor; // TODO: deprecate form factors?\r\n        this.providedSlots = [];\r\n        if (!slotModel.providedSlots) {\r\n            return;\r\n        }\r\n        slotModel.providedSlots.forEach(ps => {\r\n            this.providedSlots.push(new ProvidedSlotSpec(ps));\r\n        });\r\n    }\r\n    getProvidedSlotSpec(name) {\r\n        return this.providedSlots.find(ps => ps.name === name);\r\n    }\r\n}\r\nclass ProvidedSlotSpec {\r\n    constructor(slotModel) {\r\n        this.name = slotModel.name;\r\n        this.isRequired = slotModel.isRequired || false;\r\n        this.isSet = slotModel.isSet || false;\r\n        this.tags = slotModel.tags || [];\r\n        this.formFactor = slotModel.formFactor; // TODO: deprecate form factors?\r\n        this.handles = slotModel.handles || [];\r\n    }\r\n}\r\nclass ParticleSpec {\r\n    constructor(model) {\r\n        this.model = model;\r\n        this.name = model.name;\r\n        this.verbs = model.verbs;\r\n        const typeVarMap = new Map();\r\n        this.connections = [];\r\n        model.args.forEach(arg => this.createConnection(arg, typeVarMap));\r\n        this.connectionMap = new Map();\r\n        this.connections.forEach(a => this.connectionMap.set(a.name, a));\r\n        this.inputs = this.connections.filter(a => a.isInput);\r\n        this.outputs = this.connections.filter(a => a.isOutput);\r\n        // initialize descriptions patterns.\r\n        model.description = model.description || {};\r\n        this.validateDescription(model.description);\r\n        this.pattern = model.description['pattern'];\r\n        this.connections.forEach(connectionSpec => {\r\n            connectionSpec.pattern = model.description[connectionSpec.name];\r\n        });\r\n        this.implFile = model.implFile;\r\n        this.modality = model.modality;\r\n        this.slots = new Map();\r\n        if (model.slots) {\r\n            model.slots.forEach(s => this.slots.set(s.name, new SlotSpec(s)));\r\n        }\r\n        // Verify provided slots use valid handle connection names.\r\n        this.slots.forEach(slot => {\r\n            slot.providedSlots.forEach(ps => {\r\n                ps.handles.forEach(v => Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__[\"assert\"])(this.connectionMap.has(v), 'Cannot provide slot for nonexistent handle constraint ', v));\r\n            });\r\n        });\r\n    }\r\n    createConnection(arg, typeVarMap) {\r\n        const connection = new ConnectionSpec(arg, typeVarMap);\r\n        this.connections.push(connection);\r\n        connection.instantiateDependentConnections(this, typeVarMap);\r\n        return connection;\r\n    }\r\n    isInput(param) {\r\n        for (const input of this.inputs)\r\n            if (input.name === param)\r\n                return true;\r\n        return false;\r\n    }\r\n    isOutput(param) {\r\n        for (const outputs of this.outputs)\r\n            if (outputs.name === param)\r\n                return true;\r\n        return false;\r\n    }\r\n    getSlotSpec(slotName) {\r\n        return this.slots.get(slotName);\r\n    }\r\n    get primaryVerb() {\r\n        return (this.verbs.length > 0) ? this.verbs[0] : undefined;\r\n    }\r\n    matchModality(modality) {\r\n        return this.slots.size <= 0 || this.modality.includes(modality);\r\n    }\r\n    toLiteral() {\r\n        const { args, name, verbs, description, implFile, modality, slots } = this.model;\r\n        const connectionToLiteral = ({ type, direction, name, isOptional, dependentConnections }) => ({ type: type.toLiteral(), direction, name, isOptional, dependentConnections: dependentConnections.map(connectionToLiteral) });\r\n        const argsLiteral = args.map(a => connectionToLiteral(a));\r\n        return { args: argsLiteral, name, verbs, description, implFile, modality, slots };\r\n    }\r\n    static fromLiteral(literal) {\r\n        let { args, name, verbs, description, implFile, modality, slots } = literal;\r\n        const connectionFromLiteral = ({ type, direction, name, isOptional, dependentConnections }) => ({ type: _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].fromLiteral(type), direction, name, isOptional, dependentConnections: dependentConnections ? dependentConnections.map(connectionFromLiteral) : [] });\r\n        args = args.map(connectionFromLiteral);\r\n        return new ParticleSpec({ args, name, verbs: verbs || [], description, implFile, modality, slots });\r\n    }\r\n    clone() {\r\n        return ParticleSpec.fromLiteral(this.toLiteral());\r\n    }\r\n    equals(other) {\r\n        return JSON.stringify(this.toLiteral()) === JSON.stringify(other.toLiteral());\r\n    }\r\n    validateDescription(description) {\r\n        Object.keys(description || []).forEach(d => {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__[\"assert\"])(['kind', 'location', 'pattern'].includes(d) || this.connectionMap.has(d), `Unexpected description for ${d}`);\r\n        });\r\n    }\r\n    toInterface() {\r\n        return _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newInterface(this._toShape());\r\n    }\r\n    _toShape() {\r\n        const handles = this.model.args;\r\n        // TODO: wat do?\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_3__[\"assert\"])(!this.slots.size, 'please implement slots toShape');\r\n        const slots = [];\r\n        return new _shape_js__WEBPACK_IMPORTED_MODULE_2__[\"Shape\"](this.name, handles, slots);\r\n    }\r\n    toString() {\r\n        const results = [];\r\n        let verbs = '';\r\n        if (this.verbs.length > 0) {\r\n            verbs = ' ' + this.verbs.map(verb => `&${verb}`).join(' ');\r\n        }\r\n        results.push(`particle ${this.name}${verbs} in '${this.implFile}'`.trim());\r\n        const indent = '  ';\r\n        const writeConnection = (connection, indent) => {\r\n            const tags = connection.tags.map((tag) => ` #${tag}`).join('');\r\n            results.push(`${indent}${connection.direction}${connection.isOptional ? '?' : ''} ${connection.type.toString()} ${connection.name}${tags}`);\r\n            for (const dependent of connection.dependentConnections) {\r\n                writeConnection(dependent, indent + '  ');\r\n            }\r\n        };\r\n        for (const connection of this.connections) {\r\n            if (connection.parentConnection) {\r\n                continue;\r\n            }\r\n            writeConnection(connection, indent);\r\n        }\r\n        this.modality.filter(a => a !== 'mock').forEach(a => results.push(`  modality ${a}`));\r\n        this.slots.forEach(s => {\r\n            // Consume slot.\r\n            const consume = [];\r\n            if (s.isRequired) {\r\n                consume.push('must');\r\n            }\r\n            consume.push('consume');\r\n            if (s.isSet) {\r\n                consume.push('set of');\r\n            }\r\n            consume.push(s.name);\r\n            if (s.tags.length > 0) {\r\n                consume.push(s.tags.map(a => `#${a}`).join(' '));\r\n            }\r\n            results.push(`  ${consume.join(' ')}`);\r\n            if (s.formFactor) {\r\n                results.push(`    formFactor ${s.formFactor}`);\r\n            }\r\n            // Provided slots.\r\n            s.providedSlots.forEach(ps => {\r\n                const provide = [];\r\n                if (ps.isRequired) {\r\n                    provide.push('must');\r\n                }\r\n                provide.push('provide');\r\n                if (ps.isSet) {\r\n                    provide.push('set of');\r\n                }\r\n                provide.push(ps.name);\r\n                if (ps.tags.length > 0) {\r\n                    provide.push(ps.tags.map(a => `#${a}`).join(' '));\r\n                }\r\n                results.push(`    ${provide.join(' ')}`);\r\n                if (ps.formFactor) {\r\n                    results.push(`      formFactor ${ps.formFactor}`);\r\n                }\r\n                ps.handles.forEach(handle => results.push(`      handle ${handle}`));\r\n            });\r\n        });\r\n        // Description\r\n        if (this.pattern) {\r\n            results.push(`  description \\`${this.pattern}\\``);\r\n            this.connections.forEach(cs => {\r\n                if (cs.pattern) {\r\n                    results.push(`    ${cs.name} \\`${cs.pattern}\\``);\r\n                }\r\n            });\r\n        }\r\n        return results.join('\\n');\r\n    }\r\n    toManifestString() {\r\n        return this.toString();\r\n    }\r\n}\r\n//# sourceMappingURL=particle-spec.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/particle.js\":\n/*!**************************************!*\\\n  !*** ./runtime/ts-build/particle.js ***!\n  \\**************************************/\n/*! exports provided: Particle */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Particle\", function() { return Particle; });\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n/**\r\n * A basic particle. For particles that provide UI, you may like to\r\n * instead use DOMParticle.\r\n */\r\nclass Particle {\r\n    constructor(capabilities) {\r\n        this.relevances = [];\r\n        this._idle = Promise.resolve();\r\n        this._busy = 0;\r\n        // Only used by a Slotlet class in particle-execution-context\r\n        // tslint:disable-next-line: no-any\r\n        this._slotByName = new Map();\r\n        // Typescript only sees this.constructor as a Function type.\r\n        // TODO(shans): move spec off the constructor\r\n        this.spec = this.constructor['spec'];\r\n        if (this.spec.inputs.length === 0) {\r\n            this.extraData = true;\r\n        }\r\n        this.capabilities = capabilities || {};\r\n    }\r\n    /**\r\n     * This method is invoked with a handle for each store this particle\r\n     * is registered to interact with, once those handles are ready for\r\n     * interaction. Override the method to register for events from\r\n     * the handles.\r\n     *\r\n     * @param handles a map from handle names to store handles.\r\n     */\r\n    setHandles(handles) {\r\n    }\r\n    /**\r\n     * This method is deprecated. Use setHandles instead.\r\n     */\r\n    setViews(views) {\r\n    }\r\n    /**\r\n     * Called for handles that are configured with both keepSynced and notifySync, when they are\r\n     * updated with the full model of their data. This will occur once after setHandles() and any time\r\n     * thereafter if the handle is resynchronized.\r\n     *\r\n     * @param handle The Handle instance that was updated.\r\n     * @param model For Variable-backed Handles, the Entity data or null if the Variable is not set.\r\n     *        For Collection-backed Handles, the Array of Entities, which may be empty.\r\n     */\r\n    onHandleSync(handle, model) {\r\n    }\r\n    /**\r\n     * Called for handles that are configued with notifyUpdate, when change events are received from\r\n     * the backing store. For handles also configured with keepSynced these events will be correctly\r\n     * ordered, with some potential skips if a desync occurs. For handles not configured with\r\n     * keepSynced, all change events will be passed through as they are received.\r\n     *\r\n     * @param handle The Handle instance that was updated.\r\n     * @param update An object containing one of the following fields:\r\n     *  - data: The full Entity for a Variable-backed Handle.\r\n     *  - added: An Array of Entities added to a Collection-backed Handle.\r\n     *  - removed: An Array of Entities removed from a Collection-backed Handle.\r\n     */\r\n    // tslint:disable-next-line: no-any\r\n    onHandleUpdate(handle, update) {\r\n    }\r\n    /**\r\n     * Called for handles that are configured with both keepSynced and notifyDesync, when they are\r\n     * detected as being out-of-date against the backing store. For Variables, the event that triggers\r\n     * this will also resync the data and thus this call may usually be ignored. For Collections, the\r\n     * underlying proxy will automatically request a full copy of the stored data to resynchronize.\r\n     * onHandleSync will be invoked when that is received.\r\n     *\r\n     * @param handle The Handle instance that was desynchronized.\r\n     */\r\n    onHandleDesync(handle) {\r\n    }\r\n    constructInnerArc() {\r\n        if (!this.capabilities.constructInnerArc) {\r\n            throw new Error('This particle is not allowed to construct inner arcs');\r\n        }\r\n        return this.capabilities.constructInnerArc(this);\r\n    }\r\n    get busy() {\r\n        return this._busy > 0;\r\n    }\r\n    get idle() {\r\n        return this._idle;\r\n    }\r\n    set relevance(r) {\r\n        this.relevances.push(r);\r\n    }\r\n    startBusy() {\r\n        if (this._busy === 0) {\r\n            this._idle = new Promise(resolve => this._idleResolver = resolve);\r\n        }\r\n        this._busy++;\r\n    }\r\n    doneBusy() {\r\n        this._busy--;\r\n        if (this._busy === 0) {\r\n            this._idleResolver();\r\n        }\r\n    }\r\n    inputs() {\r\n        return this.spec.inputs;\r\n    }\r\n    outputs() {\r\n        return this.spec.outputs;\r\n    }\r\n    /**\r\n     * Returns the slot with provided name.\r\n     */\r\n    getSlot(name) {\r\n        return this._slotByName.get(name);\r\n    }\r\n    static buildManifest(strings, ...bits) {\r\n        const output = [];\r\n        for (let i = 0; i < bits.length; i++) {\r\n            const str = strings[i];\r\n            const indent = / *$/.exec(str)[0];\r\n            let bitStr;\r\n            if (typeof bits[i] === 'string') {\r\n                bitStr = bits[i];\r\n            }\r\n            else {\r\n                bitStr = bits[i].toManifestString();\r\n            }\r\n            bitStr = bitStr.replace(/(\\n)/g, '$1' + indent);\r\n            output.push(str);\r\n            output.push(bitStr);\r\n        }\r\n        if (strings.length > bits.length) {\r\n            output.push(strings[strings.length - 1]);\r\n        }\r\n        return output.join('');\r\n    }\r\n    setParticleDescription(pattern) {\r\n        return this.setDescriptionPattern('pattern', pattern);\r\n    }\r\n    setDescriptionPattern(connectionName, pattern) {\r\n        const descriptions = this.handles.get('descriptions');\r\n        if (descriptions) {\r\n            // Typescript can't infer the type here and fails with TS2351\r\n            // tslint:disable-next-line: no-any\r\n            const entityClass = descriptions.entityClass;\r\n            descriptions.store(new entityClass({ key: connectionName, value: pattern }, this.spec.name + '-' + connectionName));\r\n            return true;\r\n        }\r\n        throw new Error('A particle needs a description handle to set a decription pattern');\r\n    }\r\n}\r\n//# sourceMappingURL=particle.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/recipe/type-checker.js\":\n/*!*************************************************!*\\\n  !*** ./runtime/ts-build/recipe/type-checker.js ***!\n  \\*************************************************/\n/*! exports provided: TypeChecker */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeChecker\", function() { return TypeChecker; });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _type_variable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../type-variable.js */ \"./runtime/ts-build/type-variable.js\");\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n\r\n\r\nclass TypeChecker {\r\n    // resolve a list of handleConnection types against a handle\r\n    // base type. This is the core type resolution mechanism, but should only\r\n    // be used when types can actually be associated with each other / constrained.\r\n    //\r\n    // By design this function is called exactly once per handle in a recipe during\r\n    // normalization, and should provide the same final answers regardless of the\r\n    // ordering of handles within that recipe\r\n    //\r\n    // NOTE: you probably don't want to call this function, if you think you\r\n    // do, talk to shans@.\r\n    static processTypeList(baseType, list) {\r\n        const newBaseTypeVariable = new _type_variable_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeVariable\"]('', null, null);\r\n        if (baseType) {\r\n            newBaseTypeVariable.resolution = baseType;\r\n        }\r\n        const newBaseType = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newVariable(newBaseTypeVariable);\r\n        baseType = newBaseType;\r\n        const concreteTypes = [];\r\n        // baseType might be a variable (and is definitely a variable if no baseType was available).\r\n        // Some of the list might contain variables too.\r\n        // First attempt to merge all the variables into the baseType\r\n        //\r\n        // If the baseType is a variable then this results in a single place to manipulate the constraints\r\n        // of all the other connected variables at the same time.\r\n        for (const item of list) {\r\n            if (item.type.resolvedType().hasVariable) {\r\n                baseType = TypeChecker._tryMergeTypeVariable(baseType, item.type);\r\n                if (baseType == null) {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                concreteTypes.push(item);\r\n            }\r\n        }\r\n        for (const item of concreteTypes) {\r\n            if (!TypeChecker._tryMergeConstraints(baseType, item)) {\r\n                return null;\r\n            }\r\n        }\r\n        const getResolution = candidate => {\r\n            if (!(candidate instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"])) {\r\n                return candidate;\r\n            }\r\n            if (candidate.canReadSubset == null || candidate.canWriteSuperset == null) {\r\n                return candidate;\r\n            }\r\n            if (candidate.canReadSubset.isMoreSpecificThan(candidate.canWriteSuperset)) {\r\n                if (candidate.canWriteSuperset.isMoreSpecificThan(candidate.canReadSubset)) {\r\n                    candidate.variable.resolution = candidate.canReadSubset;\r\n                }\r\n                return candidate;\r\n            }\r\n            return null;\r\n        };\r\n        const candidate = baseType.resolvedType();\r\n        if (candidate instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"CollectionType\"]) {\r\n            const resolution = getResolution(candidate.collectionType);\r\n            return (resolution !== null) ? resolution.collectionOf() : null;\r\n        }\r\n        if (candidate instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"BigCollectionType\"]) {\r\n            const resolution = getResolution(candidate.bigCollectionType);\r\n            return (resolution !== null) ? resolution.bigCollectionOf() : null;\r\n        }\r\n        return getResolution(candidate);\r\n    }\r\n    static _tryMergeTypeVariable(base, onto) {\r\n        const [primitiveBase, primitiveOnto] = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].unwrapPair(base.resolvedType(), onto.resolvedType());\r\n        if (primitiveBase instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n            if (primitiveOnto instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n                // base, onto both variables.\r\n                const result = primitiveBase.variable.maybeMergeConstraints(primitiveOnto.variable);\r\n                if (result === false) {\r\n                    return null;\r\n                }\r\n                // Here onto grows, one level at a time,\r\n                // as we assign new resolution to primitiveOnto, which is a leaf.\r\n                primitiveOnto.variable.resolution = primitiveBase;\r\n            }\r\n            else {\r\n                // base variable, onto not.\r\n                primitiveBase.variable.resolution = primitiveOnto;\r\n            }\r\n            return base;\r\n        }\r\n        else if (primitiveOnto instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n            // onto variable, base not.\r\n            primitiveOnto.variable.resolution = primitiveBase;\r\n            return onto;\r\n        }\r\n        else if (primitiveBase instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"InterfaceType\"] && primitiveOnto instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"InterfaceType\"]) {\r\n            const result = primitiveBase.interfaceShape.tryMergeTypeVariablesWith(primitiveOnto.interfaceShape);\r\n            if (result == null) {\r\n                return null;\r\n            }\r\n            return _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newInterface(result);\r\n        }\r\n        else if ((primitiveBase.isTypeContainer() && primitiveBase.hasVariable)\r\n            || (primitiveOnto.isTypeContainer() && primitiveOnto.hasVariable)) {\r\n            // Cannot merge [~a] with a type that is not a variable and not a collection.\r\n            return null;\r\n        }\r\n        throw new Error('tryMergeTypeVariable shouldn\\'t be called on two types without any type variables');\r\n    }\r\n    static _tryMergeConstraints(handleType, { type, direction }) {\r\n        let [primitiveHandleType, primitiveConnectionType] = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].unwrapPair(handleType.resolvedType(), type.resolvedType());\r\n        if (primitiveHandleType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n            while (primitiveConnectionType.isTypeContainer()) {\r\n                if (primitiveHandleType.variable.resolution != null\r\n                    || primitiveHandleType.variable.canReadSubset != null\r\n                    || primitiveHandleType.variable.canWriteSuperset != null) {\r\n                    // Resolved and/or constrained variables can only represent Entities, not sets.\r\n                    return false;\r\n                }\r\n                // If this is an undifferentiated variable then we need to create structure to match against. That's\r\n                // allowed because this variable could represent anything, and it needs to represent this structure\r\n                // in order for type resolution to succeed.\r\n                const newVar = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newVariable(new _type_variable_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeVariable\"]('a', null, null));\r\n                if (primitiveConnectionType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"CollectionType\"]) {\r\n                    primitiveHandleType.variable.resolution = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newCollection(newVar);\r\n                }\r\n                else if (primitiveConnectionType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"BigCollectionType\"]) {\r\n                    primitiveHandleType.variable.resolution = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newBigCollection(newVar);\r\n                }\r\n                else {\r\n                    primitiveHandleType.variable.resolution = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newReference(newVar);\r\n                }\r\n                const unwrap = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].unwrapPair(primitiveHandleType.resolvedType(), primitiveConnectionType);\r\n                [primitiveHandleType, primitiveConnectionType] = unwrap;\r\n            }\r\n            if (direction === 'out' || direction === 'inout' || direction === '`provide') {\r\n                // the canReadSubset of the handle represents the maximal type that can be read from the\r\n                // handle, so we need to intersect out any type that is more specific than the maximal type\r\n                // that could be written.\r\n                if (!primitiveHandleType.variable.maybeMergeCanReadSubset(primitiveConnectionType.canWriteSuperset)) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (direction === 'in' || direction === 'inout' || direction === '`consume') {\r\n                // the canWriteSuperset of the handle represents the maximum lower-bound type that is read from the handle,\r\n                // so we need to union it with the type that wants to be read here.\r\n                if (!primitiveHandleType.variable.maybeMergeCanWriteSuperset(primitiveConnectionType.canReadSubset)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (primitiveConnectionType.tag !== primitiveHandleType.tag) {\r\n                return false;\r\n            }\r\n            if (direction === 'out' || direction === 'inout') {\r\n                if (!TypeChecker._writeConstraintsApply(primitiveHandleType, primitiveConnectionType)) {\r\n                    return false;\r\n                }\r\n            }\r\n            if (direction === 'in' || direction === 'inout') {\r\n                if (!TypeChecker._readConstraintsApply(primitiveHandleType, primitiveConnectionType)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    static _writeConstraintsApply(handleType, connectionType) {\r\n        // this connection wants to write to this handle. If the written type is\r\n        // more specific than the canReadSubset then it isn't violating the maximal type\r\n        // that can be read.\r\n        const writtenType = connectionType.canWriteSuperset;\r\n        if (writtenType == null || handleType.canReadSubset == null) {\r\n            return true;\r\n        }\r\n        if (writtenType.isMoreSpecificThan(handleType.canReadSubset)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    static _readConstraintsApply(handleType, connectionType) {\r\n        // this connection wants to read from this handle. If the read type\r\n        // is less specific than the canWriteSuperset, then it isn't violating\r\n        // the maximum lower-bound read type.\r\n        const readType = connectionType.canReadSubset;\r\n        if (readType == null || handleType.canWriteSuperset == null) {\r\n            return true;\r\n        }\r\n        if (handleType.canWriteSuperset.isMoreSpecificThan(readType)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // Compare two types to see if they could be potentially resolved (in the absence of other\r\n    // information). This is used as a filter when selecting compatible handles or checking\r\n    // validity of recipes. This function returning true never implies that full type resolution\r\n    // will succeed, but if the function returns false for a pair of types that are associated\r\n    // then type resolution is guaranteed to fail.\r\n    //\r\n    // left, right: {type, direction, connection}\r\n    static compareTypes(left, right) {\r\n        const resolvedLeft = left.type.resolvedType();\r\n        const resolvedRight = right.type.resolvedType();\r\n        const [leftType, rightType] = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].unwrapPair(resolvedLeft, resolvedRight);\r\n        // a variable is compatible with a set only if it is unconstrained.\r\n        if (leftType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"] && rightType.isTypeContainer()) {\r\n            return !(leftType.variable.canReadSubset || leftType.variable.canWriteSuperset);\r\n        }\r\n        if (rightType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"] && leftType.isTypeContainer()) {\r\n            return !(rightType.variable.canReadSubset || rightType.variable.canWriteSuperset);\r\n        }\r\n        if (leftType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"] || rightType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n            // TODO: everything should use this, eventually. Need to implement the\r\n            // right functionality in Shapes first, though.\r\n            return _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].canMergeConstraints(leftType, rightType);\r\n        }\r\n        if ((leftType === undefined) !== (rightType === undefined)) {\r\n            return false;\r\n        }\r\n        if (leftType === rightType) {\r\n            return true;\r\n        }\r\n        if (leftType.tag !== rightType.tag) {\r\n            return false;\r\n        }\r\n        if (leftType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"SlotType\"]) {\r\n            return true;\r\n        }\r\n        // TODO: we need a generic way to evaluate type compatibility\r\n        //       shapes + entities + etc\r\n        if (leftType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"InterfaceType\"] && rightType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"InterfaceType\"]) {\r\n            if (leftType.interfaceShape.equals(rightType.interfaceShape)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (!(leftType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"EntityType\"]) || !(rightType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"EntityType\"])) {\r\n            return false;\r\n        }\r\n        const leftIsSub = leftType.entitySchema.isMoreSpecificThan(rightType.entitySchema);\r\n        const leftIsSuper = rightType.entitySchema.isMoreSpecificThan(leftType.entitySchema);\r\n        if (leftIsSuper && leftIsSub) {\r\n            return true;\r\n        }\r\n        if (!leftIsSuper && !leftIsSub) {\r\n            return false;\r\n        }\r\n        const [superclass, subclass] = leftIsSuper ? [left, right] : [right, left];\r\n        // treat handle types as if they were 'inout' connections. Note that this\r\n        // guarantees that the handle's type will be preserved, and that the fact\r\n        // that the type comes from a handle rather than a connection will also\r\n        // be preserved.\r\n        const superDirection = superclass.direction || (superclass.connection ? superclass.connection.direction : 'inout');\r\n        const subDirection = subclass.direction || (subclass.connection ? subclass.connection.direction : 'inout');\r\n        if (superDirection === 'in') {\r\n            return true;\r\n        }\r\n        if (subDirection === 'out') {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n//# sourceMappingURL=type-checker.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/reference.js\":\n/*!***************************************!*\\\n  !*** ./runtime/ts-build/reference.js ***!\n  \\***************************************/\n/*! exports provided: Reference */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Reference\", function() { return Reference; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _handle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./handle.js */ \"./runtime/ts-build/handle.js\");\n/** @license\r\n * Copyright (c) 2018 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\nvar ReferenceMode;\r\n(function (ReferenceMode) {\r\n    ReferenceMode[ReferenceMode[\"Unstored\"] = 0] = \"Unstored\";\r\n    ReferenceMode[ReferenceMode[\"Stored\"] = 1] = \"Stored\";\r\n})(ReferenceMode || (ReferenceMode = {}));\r\nclass Reference {\r\n    constructor(data, type, context) {\r\n        this.entity = null;\r\n        this.storageProxy = null;\r\n        this.handle = null;\r\n        this.id = data.id;\r\n        this.storageKey = data.storageKey;\r\n        this.context = context;\r\n        this.type = type;\r\n    }\r\n    async ensureStorageProxy() {\r\n        if (this.storageProxy == null) {\r\n            this.storageProxy = await this.context.getStorageProxy(this.storageKey, this.type.referredType);\r\n            this.handle = Object(_handle_js__WEBPACK_IMPORTED_MODULE_2__[\"handleFor\"])(this.storageProxy);\r\n            if (this.storageKey) {\r\n                Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this.storageKey === this.storageProxy.storageKey);\r\n            }\r\n            else {\r\n                this.storageKey = this.storageProxy.storageKey;\r\n            }\r\n        }\r\n    }\r\n    async dereference() {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this.context, \"Must have context to dereference\");\r\n        if (this.entity) {\r\n            return this.entity;\r\n        }\r\n        await this.ensureStorageProxy();\r\n        this.entity = await this.handle.get(this.id);\r\n        return this.entity;\r\n    }\r\n    dataClone() {\r\n        return { storageKey: this.storageKey, id: this.id };\r\n    }\r\n    static newClientReference(context) {\r\n        return class extends Reference {\r\n            constructor(entity) {\r\n                // TODO(shans): start carrying storageKey information around on Entity objects\r\n                super({ id: entity.id, storageKey: null }, new _type_js__WEBPACK_IMPORTED_MODULE_1__[\"ReferenceType\"](entity.constructor.type), context);\r\n                this.mode = ReferenceMode.Unstored;\r\n                this.entity = entity;\r\n                this.stored = new Promise(async (resolve, reject) => {\r\n                    await this.storeReference(entity);\r\n                    resolve();\r\n                });\r\n            }\r\n            async storeReference(entity) {\r\n                await this.ensureStorageProxy();\r\n                await this.handle.store(entity);\r\n                this.mode = ReferenceMode.Stored;\r\n            }\r\n            async dereference() {\r\n                if (this.mode === ReferenceMode.Unstored) {\r\n                    return null;\r\n                }\r\n                return super.dereference();\r\n            }\r\n            isIdentified() {\r\n                return this.entity.isIdentified();\r\n            }\r\n        };\r\n    }\r\n}\r\n//# sourceMappingURL=reference.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/schema.js\":\n/*!************************************!*\\\n  !*** ./runtime/ts-build/schema.js ***!\n  \\************************************/\n/*! exports provided: Schema */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Schema\", function() { return Schema; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recipe/type-checker.js */ \"./runtime/ts-build/recipe/type-checker.js\");\n/* harmony import */ var _entity_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./entity.js */ \"./runtime/ts-build/entity.js\");\n/* harmony import */ var _reference_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./reference.js */ \"./runtime/ts-build/reference.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\n\r\nclass Schema {\r\n    constructor(model) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(model.fields);\r\n        this._model = model;\r\n        this.description = {};\r\n        if (model.description) {\r\n            model.description.description.forEach(desc => this.description[desc.name] = desc.pattern || desc.patterns[0]);\r\n        }\r\n    }\r\n    toLiteral() {\r\n        const fields = {};\r\n        const updateField = field => {\r\n            if (field.kind === 'schema-reference') {\r\n                const schema = field.schema;\r\n                return { kind: 'schema-reference', schema: { kind: schema.kind, model: schema.model.toLiteral() } };\r\n            }\r\n            else if (field.kind === 'schema-collection') {\r\n                return { kind: 'schema-collection', schema: updateField(field.schema) };\r\n            }\r\n            else {\r\n                return field;\r\n            }\r\n        };\r\n        for (const key of Object.keys(this._model.fields)) {\r\n            fields[key] = updateField(this._model.fields[key]);\r\n        }\r\n        return { names: this._model.names, fields, description: this.description };\r\n    }\r\n    static fromLiteral(data = { fields: {}, names: [], description: {} }) {\r\n        const fields = {};\r\n        const updateField = field => {\r\n            if (field.kind === 'schema-reference') {\r\n                const schema = field.schema;\r\n                return { kind: 'schema-reference', schema: { kind: schema.kind, model: _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].fromLiteral(schema.model) } };\r\n            }\r\n            else if (field.kind === 'schema-collection') {\r\n                return { kind: 'schema-collection', schema: updateField(field.schema) };\r\n            }\r\n            else {\r\n                return field;\r\n            }\r\n        };\r\n        for (const key of Object.keys(data.fields)) {\r\n            fields[key] = updateField(data.fields[key]);\r\n        }\r\n        const result = new Schema({ names: data.names, fields });\r\n        result.description = data.description || {};\r\n        return result;\r\n    }\r\n    get fields() {\r\n        return this._model.fields;\r\n    }\r\n    get names() {\r\n        return this._model.names;\r\n    }\r\n    // TODO: This should only be an ident used in manifest parsing.\r\n    get name() {\r\n        return this.names[0];\r\n    }\r\n    static typesEqual(fieldType1, fieldType2) {\r\n        // TODO: structural check instead of stringification.\r\n        return Schema._typeString(fieldType1) === Schema._typeString(fieldType2);\r\n    }\r\n    static _typeString(type) {\r\n        if (typeof (type) !== 'object') {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(typeof type === 'string');\r\n            return type;\r\n        }\r\n        switch (type.kind) {\r\n            case 'schema-union':\r\n                return `(${type.types.join(' or ')})`;\r\n            case 'schema-tuple':\r\n                return `(${type.types.join(', ')})`;\r\n            case 'schema-reference':\r\n                return `Reference<${Schema._typeString(type.schema)}>`;\r\n            case 'type-name':\r\n            case 'schema-inline':\r\n                return type.model.entitySchema.toInlineSchemaString();\r\n            case 'schema-collection':\r\n                return `[${Schema._typeString(type.schema)}]`;\r\n            default:\r\n                throw new Error(`Unknown type kind ${type.kind} in schema ${this.name}`);\r\n        }\r\n    }\r\n    static union(schema1, schema2) {\r\n        const names = [...new Set([...schema1.names, ...schema2.names])];\r\n        const fields = {};\r\n        for (const [field, type] of [...Object.entries(schema1.fields), ...Object.entries(schema2.fields)]) {\r\n            if (fields[field]) {\r\n                if (!Schema.typesEqual(fields[field], type)) {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                fields[field] = type;\r\n            }\r\n        }\r\n        return new Schema({\r\n            names,\r\n            fields,\r\n        });\r\n    }\r\n    static intersect(schema1, schema2) {\r\n        const names = [...schema1.names].filter(name => schema2.names.includes(name));\r\n        const fields = {};\r\n        for (const [field, type] of Object.entries(schema1.fields)) {\r\n            const otherType = schema2.fields[field];\r\n            if (otherType && Schema.typesEqual(type, otherType)) {\r\n                fields[field] = type;\r\n            }\r\n        }\r\n        return new Schema({\r\n            names,\r\n            fields,\r\n        });\r\n    }\r\n    equals(otherSchema) {\r\n        return this === otherSchema || (this.name === otherSchema.name\r\n            // TODO: Check equality without calling contains.\r\n            && this.isMoreSpecificThan(otherSchema)\r\n            && otherSchema.isMoreSpecificThan(this));\r\n    }\r\n    isMoreSpecificThan(otherSchema) {\r\n        const names = new Set(this.names);\r\n        for (const name of otherSchema.names) {\r\n            if (!names.has(name)) {\r\n                return false;\r\n            }\r\n        }\r\n        const fields = {};\r\n        for (const [name, type] of Object.entries(this.fields)) {\r\n            fields[name] = type;\r\n        }\r\n        for (const [name, type] of Object.entries(otherSchema.fields)) {\r\n            if (fields[name] == undefined) {\r\n                return false;\r\n            }\r\n            if (!Schema.typesEqual(fields[name], type)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    get type() {\r\n        return _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].newEntity(this);\r\n    }\r\n    entityClass(context = null) {\r\n        const schema = this;\r\n        const className = this.name;\r\n        const classJunk = ['toJSON', 'prototype', 'toString', 'inspect'];\r\n        const convertToJsType = fieldType => {\r\n            switch (fieldType) {\r\n                case 'Text':\r\n                    return 'string';\r\n                case 'URL':\r\n                    return 'string';\r\n                case 'Number':\r\n                    return 'number';\r\n                case 'Boolean':\r\n                    return 'boolean';\r\n                case 'Object':\r\n                    return 'object';\r\n                default:\r\n                    throw new Error(`Unknown field type ${fieldType} in schema ${className}`);\r\n            }\r\n        };\r\n        const fieldTypes = this.fields;\r\n        const validateFieldAndTypes = (op, name, value) => _validateFieldAndTypes(op, name, fieldTypes[name], value);\r\n        const _validateFieldAndTypes = (op, name, fieldType, value) => {\r\n            if (fieldType === undefined) {\r\n                throw new Error(`Can't ${op} field ${name}; not in schema ${className}`);\r\n            }\r\n            if (value === undefined || value === null) {\r\n                return;\r\n            }\r\n            if (typeof (fieldType) !== 'object') {\r\n                // Primitive fields.\r\n                if (typeof (value) !== convertToJsType(fieldType)) {\r\n                    throw new TypeError(`Type mismatch ${op}ting field ${name} (type ${fieldType}); ` +\r\n                        `value '${value}' is type ${typeof (value)}`);\r\n                }\r\n                return;\r\n            }\r\n            switch (fieldType.kind) {\r\n                case 'schema-union':\r\n                    // Value must be a primitive that matches one of the union types.\r\n                    for (const innerType of fieldType.types) {\r\n                        if (typeof (value) === convertToJsType(innerType)) {\r\n                            return;\r\n                        }\r\n                    }\r\n                    throw new TypeError(`Type mismatch ${op}ting field ${name} (union [${fieldType.types}]); ` +\r\n                        `value '${value}' is type ${typeof (value)}`);\r\n                case 'schema-tuple':\r\n                    // Value must be an array whose contents match each of the tuple types.\r\n                    if (!Array.isArray(value)) {\r\n                        throw new TypeError(`Cannot ${op} tuple ${name} with non-array value '${value}'`);\r\n                    }\r\n                    if (value.length !== fieldType.types.length) {\r\n                        throw new TypeError(`Length mismatch ${op}ting tuple ${name} ` +\r\n                            `[${fieldType.types}] with value '${value}'`);\r\n                    }\r\n                    fieldType.types.map((innerType, i) => {\r\n                        if (value[i] !== undefined && value[i] !== null &&\r\n                            typeof (value[i]) !== convertToJsType(innerType)) {\r\n                            throw new TypeError(`Type mismatch ${op}ting field ${name} (tuple [${fieldType.types}]); ` +\r\n                                `value '${value}' has type ${typeof (value[i])} at index ${i}`);\r\n                        }\r\n                    });\r\n                    break;\r\n                case 'schema-reference':\r\n                    if (!(value instanceof _reference_js__WEBPACK_IMPORTED_MODULE_4__[\"Reference\"])) {\r\n                        throw new TypeError(`Cannot ${op} reference ${name} with non-reference '${value}'`);\r\n                    }\r\n                    if (!_recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__[\"TypeChecker\"].compareTypes({ type: value.type }, { type: _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].newReference(fieldType.schema.model) })) {\r\n                        throw new TypeError(`Cannot ${op} reference ${name} with value '${value}' of mismatched type`);\r\n                    }\r\n                    break;\r\n                case 'schema-collection':\r\n                    // WTF?! value instanceof Set is returning false sometimes here because the Set in\r\n                    // this environment (a native code constructor) isn't equal to the Set that the value\r\n                    // has been constructed with (another native code constructor)...\r\n                    if (value.constructor.name !== 'Set') {\r\n                        throw new TypeError(`Cannot ${op} collection ${name} with non-Set '${value}'`);\r\n                    }\r\n                    for (const element of value) {\r\n                        _validateFieldAndTypes(op, name, fieldType.schema, element);\r\n                    }\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unknown kind ${fieldType.kind} in schema ${className}`);\r\n            }\r\n        };\r\n        const clazz = class extends _entity_js__WEBPACK_IMPORTED_MODULE_3__[\"Entity\"] {\r\n            constructor(data, userIDComponent) {\r\n                super(userIDComponent);\r\n                this.rawData = new Proxy({}, {\r\n                    get: (target, name) => {\r\n                        if (classJunk.includes(name) || name.constructor === Symbol) {\r\n                            return undefined;\r\n                        }\r\n                        const value = target[name];\r\n                        validateFieldAndTypes('get', name, value);\r\n                        return value;\r\n                    },\r\n                    set: (target, name, value) => {\r\n                        validateFieldAndTypes('set', name, value);\r\n                        target[name] = value;\r\n                        return true;\r\n                    }\r\n                });\r\n                Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(data, `can't construct entity with null data`);\r\n                // TODO: figure out how to do this only on wire-created entities.\r\n                const sanitizedData = this.sanitizeData(data);\r\n                for (const [name, value] of Object.entries(sanitizedData)) {\r\n                    this.rawData[name] = value;\r\n                }\r\n            }\r\n            sanitizeData(data) {\r\n                const sanitizedData = {};\r\n                for (const [name, value] of Object.entries(data)) {\r\n                    sanitizedData[name] = this.sanitizeEntry(fieldTypes[name], value, name);\r\n                }\r\n                return sanitizedData;\r\n            }\r\n            sanitizeEntry(type, value, name) {\r\n                if (!type) {\r\n                    // If there isn't a field type for this, the proxy will pick up\r\n                    // that fact and report a meaningful error.\r\n                    return value;\r\n                }\r\n                if (type.kind === 'schema-reference' && value) {\r\n                    if (value instanceof _reference_js__WEBPACK_IMPORTED_MODULE_4__[\"Reference\"]) {\r\n                        // Setting value as Reference (Particle side). This will enforce that the type provided for\r\n                        // the handle matches the type of the reference.\r\n                        return value;\r\n                    }\r\n                    else if (value.id && value.storageKey) {\r\n                        // Setting value from raw data (Channel side).\r\n                        // TODO(shans): This can't enforce type safety here as there isn't any type data available.\r\n                        // Maybe this is OK because there's type checking on the other side of the channel?\r\n                        return new _reference_js__WEBPACK_IMPORTED_MODULE_4__[\"Reference\"](value, _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].newReference(type.schema.model), context);\r\n                    }\r\n                    else {\r\n                        throw new TypeError(`Cannot set reference ${name} with non-reference '${value}'`);\r\n                    }\r\n                }\r\n                else if (type.kind === 'schema-collection' && value) {\r\n                    // WTF?! value instanceof Set is returning false sometimes here because the Set in\r\n                    // this environment (a native code constructor) isn't equal to the Set that the value\r\n                    // has been constructed with (another native code constructor)...\r\n                    if (value.constructor.name === 'Set') {\r\n                        return value;\r\n                    }\r\n                    else if (value.length && value instanceof Object) {\r\n                        return new Set(value.map(v => this.sanitizeEntry(type.schema, v, name)));\r\n                    }\r\n                    else {\r\n                        throw new TypeError(`Cannot set collection ${name} with non-collection '${value}'`);\r\n                    }\r\n                }\r\n                else {\r\n                    return value;\r\n                }\r\n            }\r\n            dataClone() {\r\n                const clone = {};\r\n                for (const name of Object.keys(schema.fields)) {\r\n                    if (this.rawData[name] !== undefined) {\r\n                        if (fieldTypes[name] && fieldTypes[name].kind === 'schema-reference') {\r\n                            clone[name] = this.rawData[name].dataClone();\r\n                        }\r\n                        else if (fieldTypes[name] && fieldTypes[name].kind === 'schema-collection') {\r\n                            clone[name] = [...this.rawData[name]].map(a => a.dataClone());\r\n                        }\r\n                        else {\r\n                            clone[name] = this.rawData[name];\r\n                        }\r\n                    }\r\n                }\r\n                return clone;\r\n            }\r\n            static get type() {\r\n                // TODO: should the entity's key just be its type?\r\n                // Should it just be called type in that case?\r\n                return _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].newEntity(this.key.schema);\r\n            }\r\n            static get key() {\r\n                return {\r\n                    tag: 'entity',\r\n                    schema,\r\n                };\r\n            }\r\n        };\r\n        Object.defineProperty(clazz, 'type', { value: this.type });\r\n        Object.defineProperty(clazz, 'name', { value: this.name });\r\n        // TODO: add query / getter functions for user properties\r\n        for (const name of Object.keys(this.fields)) {\r\n            Object.defineProperty(clazz.prototype, name, {\r\n                get() {\r\n                    return this.rawData[name];\r\n                },\r\n                set(v) {\r\n                    this.rawData[name] = v;\r\n                }\r\n            });\r\n        }\r\n        return clazz;\r\n    }\r\n    toInlineSchemaString(options) {\r\n        const names = this.names.join(' ') || '*';\r\n        const fields = Object.entries(this.fields).map(([name, type]) => `${Schema._typeString(type)} ${name}`).join(', ');\r\n        return `${names} {${fields.length > 0 && options && options.hideFields ? '...' : fields}}`;\r\n    }\r\n    toManifestString() {\r\n        const results = [];\r\n        results.push(`schema ${this.names.join(' ')}`);\r\n        results.push(...Object.entries(this.fields).map(([name, type]) => `  ${Schema._typeString(type)} ${name}`));\r\n        if (Object.keys(this.description).length > 0) {\r\n            results.push(`  description \\`${this.description.pattern}\\``);\r\n            for (const name of Object.keys(this.description)) {\r\n                if (name !== 'pattern') {\r\n                    results.push(`    ${name} \\`${this.description[name]}\\``);\r\n                }\r\n            }\r\n        }\r\n        return results.join('\\n');\r\n    }\r\n}\r\n//# sourceMappingURL=schema.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/shape.js\":\n/*!***********************************!*\\\n  !*** ./runtime/ts-build/shape.js ***!\n  \\***********************************/\n/*! exports provided: Shape */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Shape\", function() { return Shape; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./recipe/type-checker.js */ \"./runtime/ts-build/recipe/type-checker.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n// ShapeHandle {name, direction, type}\r\n// Slot {name, direction, isRequired, isSet}\r\nfunction _fromLiteral(member) {\r\n    if (!!member && typeof member === 'object') {\r\n        return _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].fromLiteral(member);\r\n    }\r\n    return member;\r\n}\r\nfunction _toLiteral(member) {\r\n    if (!!member && member.toLiteral) {\r\n        return member.toLiteral();\r\n    }\r\n    return member;\r\n}\r\nconst handleFields = ['type', 'name', 'direction'];\r\nconst slotFields = ['name', 'direction', 'isRequired', 'isSet'];\r\nclass Shape {\r\n    constructor(name, handles, slots) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(name);\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(handles !== undefined);\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(slots !== undefined);\r\n        this.name = name;\r\n        this.handles = handles;\r\n        this.slots = slots;\r\n        this.typeVars = [];\r\n        for (const handle of handles) {\r\n            for (const field of handleFields) {\r\n                if (Shape.isTypeVar(handle[field])) {\r\n                    this.typeVars.push({ object: handle, field });\r\n                }\r\n            }\r\n        }\r\n        for (const slot of slots) {\r\n            for (const field of slotFields) {\r\n                if (Shape.isTypeVar(slot[field])) {\r\n                    this.typeVars.push({ object: slot, field });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    toPrettyString() {\r\n        return 'SHAAAAPE';\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        this.typeVars.map(({ object, field }) => object[field] = object[field].mergeTypeVariablesByName(variableMap));\r\n    }\r\n    get canReadSubset() {\r\n        return this._cloneAndUpdate(typeVar => typeVar.canReadSubset);\r\n    }\r\n    get canWriteSuperset() {\r\n        return this._cloneAndUpdate(typeVar => typeVar.canWriteSuperset);\r\n    }\r\n    isMoreSpecificThan(other) {\r\n        if (this.handles.length !== other.handles.length ||\r\n            this.slots.length !== other.slots.length) {\r\n            return false;\r\n        }\r\n        // TODO: should probably confirm that handles and slots actually match.\r\n        for (let i = 0; i < this.typeVars.length; i++) {\r\n            const thisTypeVar = this.typeVars[i];\r\n            const otherTypeVar = other.typeVars[i];\r\n            if (!thisTypeVar.object[thisTypeVar.field].isMoreSpecificThan(otherTypeVar.object[otherTypeVar.field])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _applyExistenceTypeTest(test) {\r\n        for (const typeRef of this.typeVars) {\r\n            if (test(typeRef.object[typeRef.field])) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    _handlesToManifestString() {\r\n        return this.handles\r\n            .map(handle => {\r\n            const type = handle.type.resolvedType();\r\n            return `  ${handle.direction ? handle.direction + ' ' : ''}${type.toString()} ${handle.name ? handle.name : '*'}`;\r\n        }).join('\\n');\r\n    }\r\n    _slotsToManifestString() {\r\n        // TODO deal with isRequired\r\n        return this.slots\r\n            .map(slot => `  ${slot.direction} ${slot.isSet ? 'set of ' : ''}${slot.name ? slot.name + ' ' : ''}`)\r\n            .join('\\n');\r\n    }\r\n    // TODO: Include name as a property of the shape and normalize this to just\r\n    // toString().\r\n    toString() {\r\n        return `shape ${this.name}\n${this._handlesToManifestString()}\n${this._slotsToManifestString()}\n`;\r\n    }\r\n    static fromLiteral(data) {\r\n        const handles = data.handles.map(handle => ({ type: _fromLiteral(handle.type), name: _fromLiteral(handle.name), direction: _fromLiteral(handle.direction) }));\r\n        const slots = data.slots.map(slot => ({ name: _fromLiteral(slot.name), direction: _fromLiteral(slot.direction), isRequired: _fromLiteral(slot.isRequired), isSet: _fromLiteral(slot.isSet) }));\r\n        return new Shape(data.name, handles, slots);\r\n    }\r\n    toLiteral() {\r\n        const handles = this.handles.map(handle => ({ type: _toLiteral(handle.type), name: _toLiteral(handle.name), direction: _toLiteral(handle.direction) }));\r\n        const slots = this.slots.map(slot => ({ name: _toLiteral(slot.name), direction: _toLiteral(slot.direction), isRequired: _toLiteral(slot.isRequired), isSet: _toLiteral(slot.isSet) }));\r\n        return { name: this.name, handles, slots };\r\n    }\r\n    clone(variableMap) {\r\n        const handles = this.handles.map(({ name, direction, type }) => ({ name, direction, type: type ? type.clone(variableMap) : undefined }));\r\n        const slots = this.slots.map(({ name, direction, isRequired, isSet }) => ({ name, direction, isRequired, isSet }));\r\n        return new Shape(this.name, handles, slots);\r\n    }\r\n    cloneWithResolutions(variableMap) {\r\n        return this._cloneWithResolutions(variableMap);\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        const handles = this.handles.map(({ name, direction, type }) => ({ name, direction, type: type ? type._cloneWithResolutions(variableMap) : undefined }));\r\n        const slots = this.slots.map(({ name, direction, isRequired, isSet }) => ({ name, direction, isRequired, isSet }));\r\n        return new Shape(this.name, handles, slots);\r\n    }\r\n    canEnsureResolved() {\r\n        for (const typeVar of this.typeVars) {\r\n            if (!typeVar.object[typeVar.field].canEnsureResolved()) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    maybeEnsureResolved() {\r\n        for (const typeVar of this.typeVars) {\r\n            let variable = typeVar.object[typeVar.field];\r\n            variable = variable.clone(new Map());\r\n            if (!variable.maybeEnsureResolved())\r\n                return false;\r\n        }\r\n        for (const typeVar of this.typeVars) {\r\n            typeVar.object[typeVar.field].maybeEnsureResolved();\r\n        }\r\n        return true;\r\n    }\r\n    tryMergeTypeVariablesWith(other) {\r\n        // Type variable enabled slot matching will Just Work when we\r\n        // unify slots and handles.\r\n        if (!this._equalItems(other.slots, this.slots, this._equalSlot)) {\r\n            return null;\r\n        }\r\n        if (other.handles.length !== this.handles.length) {\r\n            return null;\r\n        }\r\n        const handles = new Set(this.handles);\r\n        const otherHandles = new Set(other.handles);\r\n        const handleMap = new Map();\r\n        let sizeCheck = handles.size;\r\n        while (handles.size > 0) {\r\n            const handleMatches = [...handles.values()].map(handle => ({ handle, match: [...otherHandles.values()].filter(otherHandle => this._equalHandle(handle, otherHandle)) }));\r\n            for (const handleMatch of handleMatches) {\r\n                // no match!\r\n                if (handleMatch.match.length === 0) {\r\n                    return null;\r\n                }\r\n                if (handleMatch.match.length === 1) {\r\n                    handleMap.set(handleMatch.handle, handleMatch.match[0]);\r\n                    otherHandles.delete(handleMatch.match[0]);\r\n                    handles.delete(handleMatch.handle);\r\n                }\r\n            }\r\n            // no progress!\r\n            if (handles.size === sizeCheck) {\r\n                return null;\r\n            }\r\n            sizeCheck = handles.size;\r\n        }\r\n        const handleList = [];\r\n        for (const handle of this.handles) {\r\n            const otherHandle = handleMap.get(handle);\r\n            let resultType;\r\n            if (handle.type.hasVariable || otherHandle.type.hasVariable) {\r\n                resultType = _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__[\"TypeChecker\"]._tryMergeTypeVariable(handle.type, otherHandle.type);\r\n                if (!resultType) {\r\n                    return null;\r\n                }\r\n            }\r\n            else {\r\n                resultType = handle.type || otherHandle.type;\r\n            }\r\n            handleList.push({ name: handle.name || otherHandle.name, direction: handle.direction || otherHandle.direction, type: resultType });\r\n        }\r\n        const slots = this.slots.map(({ name, direction, isRequired, isSet }) => ({ name, direction, isRequired, isSet }));\r\n        return new Shape(this.name, handleList, slots);\r\n    }\r\n    resolvedType() {\r\n        return this._cloneAndUpdate(typeVar => typeVar.resolvedType());\r\n    }\r\n    equals(other) {\r\n        if (this.handles.length !== other.handles.length) {\r\n            return false;\r\n        }\r\n        // TODO: this isn't quite right as it doesn't deal with duplicates properly\r\n        if (!this._equalItems(other.handles, this.handles, this._equalHandle)) {\r\n            return false;\r\n        }\r\n        if (!this._equalItems(other.slots, this.slots, this._equalSlot)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    _equalHandle(handle, otherHandle) {\r\n        return handle.name === otherHandle.name && handle.direction === otherHandle.direction && handle.type.equals(otherHandle.type);\r\n    }\r\n    _equalSlot(slot, otherSlot) {\r\n        return slot.name === otherSlot.name && slot.direction === otherSlot.direction && slot.isRequired === otherSlot.isRequired && slot.isSet === otherSlot.isSet;\r\n    }\r\n    _equalItems(otherItems, items, compareItem) {\r\n        for (const otherItem of otherItems) {\r\n            let exists = false;\r\n            for (const item of items) {\r\n                if (compareItem(item, otherItem)) {\r\n                    exists = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!exists) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    _cloneAndUpdate(update) {\r\n        const copy = this.clone(new Map());\r\n        copy.typeVars.forEach(typeVar => Shape._updateTypeVar(typeVar, update));\r\n        return copy;\r\n    }\r\n    static _updateTypeVar(typeVar, update) {\r\n        typeVar.object[typeVar.field] = update(typeVar.object[typeVar.field]);\r\n    }\r\n    static isTypeVar(reference) {\r\n        return (reference instanceof _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"]) && reference.hasProperty(r => r instanceof _type_js__WEBPACK_IMPORTED_MODULE_1__[\"VariableType\"]);\r\n    }\r\n    static mustMatch(reference) {\r\n        return !(reference == undefined || Shape.isTypeVar(reference));\r\n    }\r\n    static handlesMatch(shapeHandle, particleHandle) {\r\n        if (Shape.mustMatch(shapeHandle.name) &&\r\n            shapeHandle.name !== particleHandle.name) {\r\n            return false;\r\n        }\r\n        // TODO: direction subsetting?\r\n        if (Shape.mustMatch(shapeHandle.direction) &&\r\n            shapeHandle.direction !== particleHandle.direction) {\r\n            return false;\r\n        }\r\n        if (shapeHandle.type == undefined) {\r\n            return true;\r\n        }\r\n        const [left, right] = _type_js__WEBPACK_IMPORTED_MODULE_1__[\"Type\"].unwrapPair(shapeHandle.type, particleHandle.type);\r\n        if (left instanceof _type_js__WEBPACK_IMPORTED_MODULE_1__[\"VariableType\"]) {\r\n            return [{ var: left, value: right, direction: shapeHandle.direction }];\r\n        }\r\n        else {\r\n            return left.equals(right);\r\n        }\r\n    }\r\n    static slotsMatch(shapeSlot, particleSlot) {\r\n        if (Shape.mustMatch(shapeSlot.name) &&\r\n            shapeSlot.name !== particleSlot.name) {\r\n            return false;\r\n        }\r\n        if (Shape.mustMatch(shapeSlot.direction) &&\r\n            shapeSlot.direction !== particleSlot.direction) {\r\n            return false;\r\n        }\r\n        if (Shape.mustMatch(shapeSlot.isRequired) &&\r\n            shapeSlot.isRequired !== particleSlot.isRequired) {\r\n            return false;\r\n        }\r\n        if (Shape.mustMatch(shapeSlot.isSet) &&\r\n            shapeSlot.isSet !== particleSlot.isSet) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    particleMatches(particleSpec) {\r\n        const shape = this.cloneWithResolutions(new Map());\r\n        return shape.restrictType(particleSpec) !== false;\r\n    }\r\n    restrictType(particleSpec) {\r\n        return this._restrictThis(particleSpec);\r\n    }\r\n    _restrictThis(particleSpec) {\r\n        const handleMatches = this.handles.map(handle => particleSpec.connections.map(connection => ({ match: connection, result: Shape.handlesMatch(handle, connection) }))\r\n            .filter(a => a.result !== false));\r\n        const particleSlots = [];\r\n        particleSpec.slots.forEach(consumedSlot => {\r\n            particleSlots.push({ name: consumedSlot.name, direction: 'consume', isRequired: consumedSlot.isRequired, isSet: consumedSlot.isSet });\r\n            consumedSlot.providedSlots.forEach(providedSlot => {\r\n                particleSlots.push({ name: providedSlot.name, direction: 'provide', isRequired: false, isSet: providedSlot.isSet });\r\n            });\r\n        });\r\n        let slotMatches = this.slots.map(slot => particleSlots.filter(particleSlot => Shape.slotsMatch(slot, particleSlot)));\r\n        slotMatches = slotMatches.map(matchList => matchList.map(slot => ({ match: slot, result: true })));\r\n        const exclusions = [];\r\n        // TODO: this probably doesn't deal with multiple match options.\r\n        function choose(list, exclusions) {\r\n            if (list.length === 0) {\r\n                return [];\r\n            }\r\n            const thisLevel = list.pop();\r\n            for (const connection of thisLevel) {\r\n                if (exclusions.includes(connection.match)) {\r\n                    continue;\r\n                }\r\n                const newExclusions = exclusions.slice();\r\n                newExclusions.push(connection.match);\r\n                const constraints = choose(list, newExclusions);\r\n                if (constraints !== false) {\r\n                    return connection.result.length ? constraints.concat(connection.result) : constraints;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n        const handleOptions = choose(handleMatches, []);\r\n        const slotOptions = choose(slotMatches, []);\r\n        if (handleOptions === false || slotOptions === false) {\r\n            return false;\r\n        }\r\n        for (const constraint of handleOptions) {\r\n            if (!constraint.var.variable.resolution) {\r\n                constraint.var.variable.resolution = constraint.value;\r\n            }\r\n            else if (constraint.var.variable.resolution instanceof _type_js__WEBPACK_IMPORTED_MODULE_1__[\"VariableType\"]) {\r\n                // TODO(shans): revisit how this should be done,\r\n                // consider reusing tryMergeTypeVariablesWith(other).\r\n                if (!_recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_2__[\"TypeChecker\"].processTypeList(constraint.var, [{\r\n                        type: constraint.value, direction: constraint.direction\r\n                    }]))\r\n                    return false;\r\n            }\r\n            else {\r\n                if (!constraint.var.variable.resolution.equals(constraint.value))\r\n                    return false;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\r\n\r\n\r\n//# sourceMappingURL=shape.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/storage-proxy.js\":\n/*!*******************************************!*\\\n  !*** ./runtime/ts-build/storage-proxy.js ***!\n  \\*******************************************/\n/*! exports provided: StorageProxy, CollectionProxy, VariableProxy, BigCollectionProxy, StorageProxyScheduler */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StorageProxy\", function() { return StorageProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CollectionProxy\", function() { return CollectionProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableProxy\", function() { return VariableProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BigCollectionProxy\", function() { return BigCollectionProxy; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"StorageProxyScheduler\", function() { return StorageProxyScheduler; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _storage_crdt_collection_model_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage/crdt-collection-model.js */ \"./runtime/ts-build/storage/crdt-collection-model.js\");\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/**\r\n * @license\r\n * Copyright (c) 2017 Google Inc. All rights reserved.\r\n * This code may only be used under the BSD style license found at\r\n * http://polymer.github.io/LICENSE.txt\r\n * Code distributed by Google as part of this project is also\r\n * subject to an additional IP rights grant found at\r\n * http://polymer.github.io/PATENTS.txt\r\n */\r\n\r\n\r\n\r\n\r\nvar SyncState;\r\n(function (SyncState) {\r\n    SyncState[SyncState[\"none\"] = 0] = \"none\";\r\n    SyncState[SyncState[\"pending\"] = 1] = \"pending\";\r\n    SyncState[SyncState[\"full\"] = 2] = \"full\";\r\n})(SyncState || (SyncState = {}));\r\n/** @class StorageProxy\r\n * Mediates between one or more Handles and the backing store outside the PEC.\r\n *\r\n * This can operate in two modes, based on how observing handles are configured:\r\n * - synchronized: the proxy maintains a copy of the full data held by the backing store, keeping\r\n *                 it in sync by listening to change events from the store.\r\n * - unsynchronized: the proxy simply passes through calls from Handles to the backing store.\r\n *\r\n * In synchronized mode we maintain a queue of sorted update events received from the backing store.\r\n * While events are received correctly - each update is one version ahead of our stored model - they\r\n * are processed immediately and observing handles are notified accordingly. If we receive an update\r\n * with a \"future\" version, the proxy is desynchronized:\r\n * - a request for the full data is sent to the backing store;\r\n * - any update events received after that (and before the response) are added to the queue;\r\n * - any new updates that can be applied will be (which may cause the proxy to \"catch up\" and resync\r\n *   before the full data response arrives);\r\n * - once the resync response is received, stale queued updates are discarded and any remaining ones\r\n *   are applied.\r\n */\r\nclass StorageProxy {\r\n    constructor(id, type, port, pec, scheduler, name) {\r\n        this.localIDComponent = 0;\r\n        this.version = undefined;\r\n        this.listenerAttached = false;\r\n        this.keepSynced = false;\r\n        this.synchronized = SyncState.none;\r\n        this.observers = [];\r\n        this.updates = [];\r\n        this.barrier = null;\r\n        this.id = id;\r\n        this.type = type;\r\n        this.port = port;\r\n        this.scheduler = scheduler;\r\n        this.name = name;\r\n        this.baseForNewID = pec.generateID();\r\n        this.updates = [];\r\n        this.pec = pec;\r\n    }\r\n    static newProxy(id, type, port, pec, scheduler, name) {\r\n        if (type instanceof _type_js__WEBPACK_IMPORTED_MODULE_2__[\"CollectionType\"]) {\r\n            return new CollectionProxy(id, type, port, pec, scheduler, name);\r\n        }\r\n        if (type instanceof _type_js__WEBPACK_IMPORTED_MODULE_2__[\"BigCollectionType\"]) {\r\n            return new BigCollectionProxy(id, type, port, pec, scheduler, name);\r\n        }\r\n        return new VariableProxy(id, type, port, pec, scheduler, name);\r\n    }\r\n    raiseSystemException(exception, methodName, particleId) {\r\n        this.port.RaiseSystemException({ exception: { message: exception.message, stack: exception.stack, name: exception.name }, methodName, particleId });\r\n    }\r\n    /**\r\n     *  Called by ParticleExecutionContext to associate (potentially multiple) particle/handle pairs with this proxy.\r\n     */\r\n    register(particle, handle) {\r\n        if (!handle.canRead) {\r\n            return;\r\n        }\r\n        this.observers.push({ particle, handle });\r\n        // Attach an event listener to the backing store when the first readable handle is registered.\r\n        if (!this.listenerAttached) {\r\n            this.port.InitializeProxy({ handle: this, callback: x => this._onUpdate(x) });\r\n            this.listenerAttached = true;\r\n        }\r\n        // Change to synchronized mode as soon as we get any handle configured with keepSynced and send\r\n        // a request to get the full model (once).\r\n        // TODO: drop back to non-sync mode if all handles re-configure to !keepSynced\r\n        if (handle.options.keepSynced) {\r\n            if (!this.keepSynced) {\r\n                this.port.SynchronizeProxy({ handle: this, callback: x => this._onSynchronize(x) });\r\n                this.keepSynced = true;\r\n            }\r\n            // If a handle configured for sync notifications registers after we've received the full\r\n            // model, notify it immediately.\r\n            if (handle.options.notifySync && this.synchronized === SyncState.full) {\r\n                const syncModel = this._getModelForSync();\r\n                this.scheduler.enqueue(particle, handle, ['sync', particle, syncModel]);\r\n            }\r\n        }\r\n    }\r\n    _onSynchronize({ version, model }) {\r\n        if (this.version !== undefined && version <= this.version) {\r\n            console.warn(`StorageProxy '${this.id}' received stale model version ${version}; ` +\r\n                `current is ${this.version}`);\r\n            return;\r\n        }\r\n        // Replace the stored data with the new one and notify handles that are configured for it.\r\n        if (!this._synchronizeModel(version, model)) {\r\n            return;\r\n        }\r\n        // We may have queued updates that were received after a desync; discard any that are stale\r\n        // with respect to the received model.\r\n        this.synchronized = SyncState.full;\r\n        while (this.updates.length > 0 && this.updates[0].version <= version) {\r\n            this.updates.shift();\r\n        }\r\n        const syncModel = this._getModelForSync();\r\n        this._notify('sync', syncModel, options => options.keepSynced && options.notifySync);\r\n        this._processUpdates();\r\n    }\r\n    _onUpdate(update) {\r\n        // Immediately notify any handles that are not configured with keepSynced but do want updates.\r\n        if (this.observers.find(({ handle }) => !handle.options.keepSynced && handle.options.notifyUpdate)) {\r\n            const handleUpdate = this._processUpdate(update, false);\r\n            this._notify('update', handleUpdate, options => !options.keepSynced && options.notifyUpdate);\r\n        }\r\n        // Bail if we're not in synchronized mode or this is a stale event.\r\n        if (!this.keepSynced) {\r\n            return;\r\n        }\r\n        if (update.version <= this.version) {\r\n            console.warn(`StorageProxy '${this.id}' received stale update version ${update.version}; ` +\r\n                `current is ${this.version}`);\r\n            return;\r\n        }\r\n        // Add the update to the queue and process. Most of the time the queue should be empty and\r\n        // _processUpdates will consume this event immediately.\r\n        this.updates.push(update);\r\n        this.updates.sort((a, b) => a.version - b.version);\r\n        this._processUpdates();\r\n    }\r\n    _notify(kind, details, predicate = (ignored) => true) {\r\n        for (const { handle, particle } of this.observers) {\r\n            if (predicate(handle.options)) {\r\n                this.scheduler.enqueue(particle, handle, [kind, particle, details]);\r\n            }\r\n        }\r\n    }\r\n    _processUpdates() {\r\n        const updateIsNext = update => {\r\n            if (update.version === this.version + 1) {\r\n                return true;\r\n            }\r\n            // Holy Layering Violation Batman\r\n            // \r\n            // If we are a variable waiting for a barriered set response\r\n            // then that set response *is* the next thing we're waiting for,\r\n            // regardless of version numbers.\r\n            //\r\n            // TODO(shans): refactor this code so we don't need to layer-violate. \r\n            if (this.barrier && update.barrier === this.barrier) {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        // Consume all queued updates whose versions are monotonically increasing from our stored one.\r\n        while (this.updates.length > 0 && updateIsNext(this.updates[0])) {\r\n            const update = this.updates.shift();\r\n            // Fold the update into our stored model.\r\n            const handleUpdate = this._processUpdate(update);\r\n            this.version = update.version;\r\n            // Notify handles configured with keepSynced and notifyUpdates (non-keepSynced handles are\r\n            // notified as updates are received).\r\n            if (handleUpdate) {\r\n                this._notify('update', handleUpdate, options => options.keepSynced && options.notifyUpdate);\r\n            }\r\n        }\r\n        // If we still have update events queued, we must have received a future version are are now\r\n        // desynchronized. Send a request for the full model and notify handles configured for it.\r\n        if (this.updates.length > 0) {\r\n            if (this.synchronized !== SyncState.none) {\r\n                this.synchronized = SyncState.none;\r\n                this.port.SynchronizeProxy({ handle: this, callback: x => this._onSynchronize(x) });\r\n                for (const { handle, particle } of this.observers) {\r\n                    if (handle.options.notifyDesync) {\r\n                        this.scheduler.enqueue(particle, handle, ['desync', particle]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.synchronized !== SyncState.full) {\r\n            // If we were desynced but have now consumed all update events, we've caught up.\r\n            this.synchronized = SyncState.full;\r\n        }\r\n    }\r\n    generateID() {\r\n        return `${this.baseForNewID}:${this.localIDComponent++}`;\r\n    }\r\n    generateIDComponents() {\r\n        return { base: this.baseForNewID, component: () => this.localIDComponent++ };\r\n    }\r\n}\r\n/**\r\n * Collections are synchronized in a CRDT Observed/Removed scheme.\r\n * Each value is identified by an ID and a set of membership keys.\r\n * Concurrent adds of the same value will specify the same ID but different\r\n * keys. A value is removed by removing all of the observed keys. A value\r\n * is considered to be removed if all of it's keys have been removed.\r\n *\r\n * In synchronized mode mutation takes place synchronously inside the proxy.\r\n * The proxy uses the originatorId to skip over redundant events sent back\r\n * by the storage object.\r\n *\r\n * In unsynchronized mode removal is not based on the keys observed at the\r\n * proxy, since the proxy does not remember the state, but instead the set\r\n * of keys that exist at the storage object at the time it receives the\r\n * request.\r\n */\r\nclass CollectionProxy extends StorageProxy {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.model = new _storage_crdt_collection_model_js__WEBPACK_IMPORTED_MODULE_1__[\"CrdtCollectionModel\"]();\r\n    }\r\n    _getModelForSync() {\r\n        return this.model.toList();\r\n    }\r\n    _synchronizeModel(version, model) {\r\n        this.version = version;\r\n        this.model = new _storage_crdt_collection_model_js__WEBPACK_IMPORTED_MODULE_1__[\"CrdtCollectionModel\"](model);\r\n        return true;\r\n    }\r\n    _processUpdate(update, apply = true) {\r\n        if (this.synchronized === SyncState.full) {\r\n            // If we're synchronized, then any updates we sent have\r\n            // already been applied/notified.\r\n            for (const { handle } of this.observers) {\r\n                if (update.originatorId === handle._particleId) {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n        const added = [];\r\n        const removed = [];\r\n        if ('add' in update) {\r\n            for (const { value, keys, effective } of update.add) {\r\n                if (apply && this.model.add(value.id, value, keys) || !apply && effective) {\r\n                    added.push(value);\r\n                }\r\n            }\r\n        }\r\n        else if ('remove' in update) {\r\n            for (const { value, keys, effective } of update.remove) {\r\n                const localValue = this.model.getValue(value.id);\r\n                if (apply && this.model.remove(value.id, keys) || !apply && effective) {\r\n                    removed.push(localValue);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            throw new Error(`StorageProxy received invalid update event: ${JSON.stringify(update)}`);\r\n        }\r\n        if (added.length || removed.length) {\r\n            const result = { originatorId: update.originatorId };\r\n            if (added.length)\r\n                result.add = added;\r\n            if (removed.length)\r\n                result.remove = removed;\r\n            return result;\r\n        }\r\n        return null;\r\n    }\r\n    // Read ops: if we're synchronized we can just return the local copy of the data.\r\n    // Otherwise, send a request to the backing store.\r\n    toList() {\r\n        if (this.synchronized === SyncState.full) {\r\n            return Promise.resolve(this.model.toList());\r\n        }\r\n        else {\r\n            // TODO: in synchronized mode, this should integrate with SynchronizeProxy rather than\r\n            //       sending a parallel request\r\n            return new Promise(resolve => this.port.HandleToList({ callback: resolve, handle: this }));\r\n        }\r\n    }\r\n    get(id, particleId) {\r\n        if (this.synchronized === SyncState.full) {\r\n            return Promise.resolve(this.model.getValue(id));\r\n        }\r\n        else {\r\n            return new Promise((resolve, reject) => this.port.HandleToList({ callback: r => resolve(r.find(entity => entity.id === id)), handle: this, particleId }));\r\n        }\r\n    }\r\n    store(value, keys, particleId) {\r\n        const id = value.id;\r\n        const data = { value, keys };\r\n        this.port.HandleStore({ handle: this, callback: () => { }, data, particleId });\r\n        if (this.synchronized !== SyncState.full) {\r\n            return;\r\n        }\r\n        if (!this.model.add(id, value, keys)) {\r\n            return;\r\n        }\r\n        const update = { originatorId: particleId, add: [value] };\r\n        this._notify('update', update, options => options.notifyUpdate);\r\n    }\r\n    clear(particleId) {\r\n        if (this.synchronized !== SyncState.full) {\r\n            this.port.HandleRemoveMultiple({ handle: this, callback: () => { }, data: [], particleId });\r\n        }\r\n        let items = this.model.toList().map(item => ({ id: item.id, keys: this.model.getKeys(item.id) }));\r\n        this.port.HandleRemoveMultiple({ handle: this, callback: () => { }, data: items, particleId });\r\n        items = items.map(({ id, keys }) => ({ rawData: this.model.getValue(id).rawData, id, keys }));\r\n        items = items.filter(item => this.model.remove(item.id, item.keys));\r\n        if (items.length > 0) {\r\n            this._notify('update', { originatorId: particleId, remove: items }, options => options.notifyUpdate);\r\n        }\r\n    }\r\n    remove(id, keys, particleId) {\r\n        if (this.synchronized !== SyncState.full) {\r\n            const data = { id, keys: [] };\r\n            this.port.HandleRemove({ handle: this, callback: () => { }, data, particleId });\r\n            return;\r\n        }\r\n        const value = this.model.getValue(id);\r\n        if (!value) {\r\n            return;\r\n        }\r\n        if (keys.length === 0) {\r\n            keys = this.model.getKeys(id);\r\n        }\r\n        const data = { id, keys };\r\n        this.port.HandleRemove({ handle: this, callback: () => { }, data, particleId });\r\n        if (!this.model.remove(id, keys)) {\r\n            return;\r\n        }\r\n        const update = { originatorId: particleId, remove: [value] };\r\n        this._notify('update', update, options => options.notifyUpdate);\r\n    }\r\n}\r\n/**\r\n * Variables are synchronized in a 'last-writer-wins' scheme. When the\r\n * VariableProxy mutates the model, it sets a barrier and expects to\r\n * receive the barrier value echoed back in a subsequent update event.\r\n * Between those two points in time updates are not applied or\r\n * notified about as these reflect concurrent writes that did not 'win'.\r\n */\r\nclass VariableProxy extends StorageProxy {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.model = null;\r\n    }\r\n    _getModelForSync() {\r\n        return this.model;\r\n    }\r\n    _synchronizeModel(version, model) {\r\n        // If there's an active barrier then we shouldn't apply the model here, because\r\n        // there is a more recent write from the particle side that is still in flight.\r\n        if (this.barrier != null) {\r\n            return false;\r\n        }\r\n        this.version = version;\r\n        this.model = model.length === 0 ? null : model[0].value;\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(this.model !== undefined);\r\n        return true;\r\n    }\r\n    _processUpdate(update, apply = true) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])('data' in update);\r\n        if (!apply) {\r\n            return update;\r\n        }\r\n        // If we have set a barrier, suppress updates until after\r\n        // we have seen the barrier return via an update.\r\n        if (this.barrier != null) {\r\n            if (update.barrier === this.barrier) {\r\n                this.barrier = null;\r\n                // HOLY LAYERING VIOLATION BATMAN\r\n                //\r\n                // We just cleared a barrier which means we are now synchronized. If we weren't\r\n                // synchronized already, then we need to tell the handles.\r\n                //\r\n                // TODO(shans): refactor this code so we don't need to layer-violate. \r\n                if (this.synchronized !== SyncState.full) {\r\n                    this.synchronized = SyncState.full;\r\n                    const syncModel = this._getModelForSync();\r\n                    this._notify('sync', syncModel, options => options.keepSynced && options.notifySync);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        this.model = update.data;\r\n        return update;\r\n    }\r\n    // Read ops: if we're synchronized we can just return the local copy of the data.\r\n    // Otherwise, send a request to the backing store.\r\n    // TODO: in synchronized mode, these should integrate with SynchronizeProxy rather than\r\n    //       sending a parallel request\r\n    get() {\r\n        if (this.synchronized === SyncState.full) {\r\n            return Promise.resolve(this.model);\r\n        }\r\n        else {\r\n            return new Promise(resolve => this.port.HandleGet({ callback: resolve, handle: this }));\r\n        }\r\n    }\r\n    set(entity, particleId) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(entity !== undefined);\r\n        if (JSON.stringify(this.model) === JSON.stringify(entity)) {\r\n            return;\r\n        }\r\n        let barrier;\r\n        // If we're setting to this handle but we aren't listening to firebase, \r\n        // then there's no point creating a barrier. In fact, if the response \r\n        // to the set comes back before a listener is registered then this proxy will\r\n        // end up locked waiting for a barrier that will never arrive.\r\n        if (this.listenerAttached) {\r\n            // TODO(shans): this.generateID() used to take a parameter. Is this the\r\n            // cause of some of the key collisions we're seeing?\r\n            barrier = this.generateID( /* 'barrier' */);\r\n        }\r\n        else {\r\n            barrier = null;\r\n        }\r\n        // TODO: is this already a clone?\r\n        this.model = JSON.parse(JSON.stringify(entity));\r\n        this.barrier = barrier;\r\n        this.port.HandleSet({ data: entity, handle: this, particleId, barrier });\r\n        const update = { originatorId: particleId, data: entity };\r\n        this._notify('update', update, options => options.notifyUpdate);\r\n    }\r\n    clear(particleId) {\r\n        if (this.model == null) {\r\n            return;\r\n        }\r\n        const barrier = this.generateID( /* 'barrier' */);\r\n        this.model = null;\r\n        this.barrier = barrier;\r\n        this.port.HandleClear({ handle: this, particleId, barrier });\r\n        const update = { originatorId: particleId, data: null };\r\n        this._notify('update', update, options => options.notifyUpdate);\r\n    }\r\n}\r\n// BigCollections are never synchronized. No local state is held and all operations are passed\r\n// directly through to the backing store.\r\nclass BigCollectionProxy extends StorageProxy {\r\n    register(particle, handle) {\r\n        if (handle.canRead) {\r\n            this.scheduler.enqueue(particle, handle, ['sync', particle, {}]);\r\n        }\r\n    }\r\n    // tslint:disable-next-line: no-any\r\n    _getModelForSync() {\r\n        throw new Error(\"_getModelForSync not implemented for BigCollectionProxy\");\r\n    }\r\n    _processUpdate() {\r\n        throw new Error(\"_processUpdate not implemented for BigCollectionProxy\");\r\n    }\r\n    _synchronizeModel() {\r\n        throw new Error(\"_synchronizeModel not implemented for BigCollectionProxy\");\r\n    }\r\n    // TODO: surface get()\r\n    async store(value, keys, particleId) {\r\n        return new Promise(resolve => this.port.HandleStore({ handle: this, callback: resolve, data: { value, keys }, particleId }));\r\n    }\r\n    async remove(id, particleId) {\r\n        return new Promise(resolve => this.port.HandleRemove({ handle: this, callback: resolve, data: { id, keys: [] }, particleId }));\r\n    }\r\n    async stream(pageSize, forward) {\r\n        return new Promise(resolve => this.port.HandleStream({ handle: this, callback: resolve, pageSize, forward }));\r\n    }\r\n    async cursorNext(cursorId) {\r\n        return new Promise(resolve => this.port.StreamCursorNext({ handle: this, callback: resolve, cursorId }));\r\n    }\r\n    cursorClose(cursorId) {\r\n        this.port.StreamCursorClose({ handle: this, cursorId });\r\n    }\r\n}\r\nclass StorageProxyScheduler {\r\n    constructor() {\r\n        this._scheduled = false;\r\n        this._queues = new Map();\r\n        this._idleResolver = null;\r\n        this._idle = null;\r\n        this._scheduled = false;\r\n        // Particle -> {Handle -> [Queue of events]}\r\n        this._queues = new Map();\r\n    }\r\n    // TODO: break apart args here, sync events should flush the queue.\r\n    enqueue(particle, handle, args) {\r\n        if (!this._queues.has(particle)) {\r\n            this._queues.set(particle, new Map());\r\n        }\r\n        const byHandle = this._queues.get(particle);\r\n        if (!byHandle.has(handle)) {\r\n            byHandle.set(handle, []);\r\n        }\r\n        const queue = byHandle.get(handle);\r\n        queue.push(args);\r\n        this._schedule();\r\n    }\r\n    get busy() {\r\n        return this._queues.size > 0;\r\n    }\r\n    _updateIdle() {\r\n        if (this._idleResolver && !this.busy) {\r\n            this._idleResolver();\r\n            this._idle = null;\r\n            this._idleResolver = null;\r\n        }\r\n    }\r\n    get idle() {\r\n        if (!this.busy) {\r\n            return Promise.resolve();\r\n        }\r\n        if (!this._idle) {\r\n            this._idle = new Promise(resolve => this._idleResolver = resolve);\r\n        }\r\n        return this._idle;\r\n    }\r\n    _schedule() {\r\n        if (this._scheduled) {\r\n            return;\r\n        }\r\n        this._scheduled = true;\r\n        setTimeout(() => {\r\n            this._scheduled = false;\r\n            this._dispatch();\r\n        }, 0);\r\n    }\r\n    _dispatch() {\r\n        // TODO: should we process just one particle per task?\r\n        while (this._queues.size > 0) {\r\n            const particle = [...this._queues.keys()][0];\r\n            const byHandle = this._queues.get(particle);\r\n            this._queues.delete(particle);\r\n            for (const [handle, queue] of byHandle.entries()) {\r\n                for (const args of queue) {\r\n                    try {\r\n                        handle._notify(...args);\r\n                    }\r\n                    catch (e) {\r\n                        console.error('Error dispatching to particle', e);\r\n                        handle._proxy.raiseSystemException(e, 'StorageProxyScheduler::_dispatch', handle._particleId);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this._updateIdle();\r\n    }\r\n}\r\n//# sourceMappingURL=storage-proxy.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/storage/crdt-collection-model.js\":\n/*!***********************************************************!*\\\n  !*** ./runtime/ts-build/storage/crdt-collection-model.js ***!\n  \\***********************************************************/\n/*! exports provided: CrdtCollectionModel */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrdtCollectionModel\", function() { return CrdtCollectionModel; });\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../platform/assert-web.js */ \"./platform/assert-web.js\");\n// @license\r\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n\r\nclass CrdtCollectionModel {\r\n    constructor(model = undefined) {\r\n        // id => {value, Set[keys]}\r\n        this.items = new Map();\r\n        if (model) {\r\n            for (let { id, value, keys } of model) {\r\n                if (!keys) {\r\n                    keys = [];\r\n                }\r\n                this.items.set(id, { value, keys: new Set(keys) });\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Adds membership, `keys`, of `value` indexed by `id` to this collection.\r\n     * Returns whether the change is effective (`id` is new to the collection,\r\n     * or `value` is different to the value previously stored).\r\n     */\r\n    add(id, value, keys) {\r\n        // Ensure that keys is actually an array, not a single string.\r\n        // TODO(shans): remove this when all callers are implemented in typeScript.\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(keys.length > 0 && typeof keys === 'object', 'add requires a list of keys');\r\n        let item = this.items.get(id);\r\n        let effective = false;\r\n        if (!item) {\r\n            item = { value, keys: new Set(keys) };\r\n            this.items.set(id, item);\r\n            effective = true;\r\n        }\r\n        else {\r\n            let newKeys = false;\r\n            for (const key of keys) {\r\n                if (!item.keys.has(key)) {\r\n                    newKeys = true;\r\n                }\r\n                item.keys.add(key);\r\n            }\r\n            if (!this._equals(item.value, value)) {\r\n                Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_0__[\"assert\"])(newKeys, 'cannot add without new keys. incoming=' + keys.join(',') + ' existing=' + [...item.keys].join(','));\r\n                item.value = value;\r\n                effective = true;\r\n            }\r\n        }\r\n        return effective;\r\n    }\r\n    _equals(value1, value2) {\r\n        if (Boolean(value1) !== Boolean(value2)) {\r\n            return false;\r\n        }\r\n        if (!value1) {\r\n            return true;\r\n        }\r\n        const type1 = typeof (value1);\r\n        if (type1 !== typeof (value2)) {\r\n            return false;\r\n        }\r\n        if (type1 === 'object') {\r\n            const keys = Object.keys(value1);\r\n            if (keys.length !== Object.keys(value2).length) {\r\n                return false;\r\n            }\r\n            return keys.every(key => this._equals(value1[key], value2[key]));\r\n        }\r\n        return JSON.stringify(value1) === JSON.stringify(value2);\r\n    }\r\n    /**\r\n     * Removes the membership, `keys`, of the value indexed by `id` from this collection.\r\n     * Returns whether the change is effective (the value is no longer present\r\n     * in the collection because all of the keys have been removed).\r\n     */\r\n    remove(id, keys) {\r\n        const item = this.items.get(id);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        for (const key of keys) {\r\n            item.keys.delete(key);\r\n        }\r\n        const effective = item.keys.size === 0;\r\n        if (effective) {\r\n            this.items.delete(id);\r\n        }\r\n        return effective;\r\n    }\r\n    // [{id, value, keys: []}]\r\n    toLiteral() {\r\n        const result = [];\r\n        for (const [id, { value, keys }] of this.items.entries()) {\r\n            result.push({ id, value, keys: [...keys] });\r\n        }\r\n        return result;\r\n    }\r\n    toList() {\r\n        return [...this.items.values()].map(item => item.value);\r\n    }\r\n    has(id) {\r\n        return this.items.has(id);\r\n    }\r\n    getKeys(id) {\r\n        const item = this.items.get(id);\r\n        return item ? [...item.keys] : [];\r\n    }\r\n    getValue(id) {\r\n        const item = this.items.get(id);\r\n        return item ? item.value : null;\r\n    }\r\n    get size() {\r\n        return this.items.size;\r\n    }\r\n}\r\n//# sourceMappingURL=crdt-collection-model.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/symbols.js\":\n/*!*************************************!*\\\n  !*** ./runtime/ts-build/symbols.js ***!\n  \\*************************************/\n/*! exports provided: Symbols */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Symbols\", function() { return Symbols; });\n// @license\r\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n// tslint:disable-next-line: variable-name\r\nconst Symbols = { identifier: Symbol('id') };\r\n//# sourceMappingURL=symbols.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/type-variable.js\":\n/*!*******************************************!*\\\n  !*** ./runtime/ts-build/type-variable.js ***!\n  \\*******************************************/\n/*! exports provided: TypeVariable */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TypeVariable\", function() { return TypeVariable; });\n/* harmony import */ var _type_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./type.js */ \"./runtime/ts-build/type.js\");\n/* harmony import */ var _platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../platform/assert-web.js */ \"./platform/assert-web.js\");\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./schema.js */ \"./runtime/ts-build/schema.js\");\n// @license\r\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n\r\n\r\n\r\nclass TypeVariable {\r\n    constructor(name, canWriteSuperset, canReadSubset) {\r\n        this.name = name;\r\n        this._canWriteSuperset = canWriteSuperset;\r\n        this._canReadSubset = canReadSubset;\r\n        this._resolution = null;\r\n    }\r\n    /**\r\n     * Merge both the read subset (upper bound) and write superset (lower bound) constraints\r\n     * of two variables together. Use this when two separate type variables need to resolve\r\n     * to the same value.\r\n     */\r\n    maybeMergeConstraints(variable) {\r\n        if (!this.maybeMergeCanReadSubset(variable.canReadSubset)) {\r\n            return false;\r\n        }\r\n        return this.maybeMergeCanWriteSuperset(variable.canWriteSuperset);\r\n    }\r\n    /**\r\n     * Merge a type variable's read subset (upper bound) constraints into this variable.\r\n     * This is used to accumulate read constraints when resolving a handle's type.\r\n     */\r\n    maybeMergeCanReadSubset(constraint) {\r\n        if (constraint == null) {\r\n            return true;\r\n        }\r\n        if (this.canReadSubset == null) {\r\n            this.canReadSubset = constraint;\r\n            return true;\r\n        }\r\n        if (this.canReadSubset instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"SlotType\"] && constraint instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"SlotType\"]) {\r\n            // TODO: formFactor compatibility, etc.\r\n            return true;\r\n        }\r\n        const mergedSchema = _schema_js__WEBPACK_IMPORTED_MODULE_2__[\"Schema\"].intersect(this.canReadSubset.entitySchema, constraint.entitySchema);\r\n        if (!mergedSchema) {\r\n            return false;\r\n        }\r\n        this.canReadSubset = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newEntity(mergedSchema);\r\n        return true;\r\n    }\r\n    /**\r\n     * merge a type variable's write superset (lower bound) constraints into this variable.\r\n     * This is used to accumulate write constraints when resolving a handle's type.\r\n     */\r\n    maybeMergeCanWriteSuperset(constraint) {\r\n        if (constraint == null) {\r\n            return true;\r\n        }\r\n        if (this.canWriteSuperset == null) {\r\n            this.canWriteSuperset = constraint;\r\n            return true;\r\n        }\r\n        if (this.canWriteSuperset instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"SlotType\"] && constraint instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"SlotType\"]) {\r\n            // TODO: formFactor compatibility, etc.\r\n            return true;\r\n        }\r\n        const mergedSchema = _schema_js__WEBPACK_IMPORTED_MODULE_2__[\"Schema\"].union(this.canWriteSuperset.entitySchema, constraint.entitySchema);\r\n        if (!mergedSchema) {\r\n            return false;\r\n        }\r\n        this.canWriteSuperset = _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].newEntity(mergedSchema);\r\n        return true;\r\n    }\r\n    isSatisfiedBy(type) {\r\n        const constraint = this._canWriteSuperset;\r\n        if (!constraint) {\r\n            return true;\r\n        }\r\n        if (!(constraint instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"EntityType\"]) || !(type instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"EntityType\"])) {\r\n            throw new Error(`constraint checking not implemented for ${this} and ${type}`);\r\n        }\r\n        return type.getEntitySchema().isMoreSpecificThan(constraint.getEntitySchema());\r\n    }\r\n    get resolution() {\r\n        if (this._resolution) {\r\n            return this._resolution.resolvedType();\r\n        }\r\n        return null;\r\n    }\r\n    set resolution(value) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(!this._resolution);\r\n        const elementType = value.resolvedType().getContainedType();\r\n        if (elementType instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(elementType.variable !== this, 'variable cannot resolve to collection of itself');\r\n        }\r\n        let probe = value;\r\n        while (probe) {\r\n            if (!(probe instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"])) {\r\n                break;\r\n            }\r\n            if (probe.variable === this) {\r\n                return;\r\n            }\r\n            probe = probe.variable.resolution;\r\n        }\r\n        this._resolution = value;\r\n        this._canWriteSuperset = null;\r\n        this._canReadSubset = null;\r\n    }\r\n    get canWriteSuperset() {\r\n        if (this._resolution) {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(!this._canWriteSuperset);\r\n            if (this._resolution instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n                return this._resolution.variable.canWriteSuperset;\r\n            }\r\n            return null;\r\n        }\r\n        return this._canWriteSuperset;\r\n    }\r\n    set canWriteSuperset(value) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(!this._resolution);\r\n        this._canWriteSuperset = value;\r\n    }\r\n    get canReadSubset() {\r\n        if (this._resolution) {\r\n            Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(!this._canReadSubset);\r\n            if (this._resolution instanceof _type_js__WEBPACK_IMPORTED_MODULE_0__[\"VariableType\"]) {\r\n                return this._resolution.variable.canReadSubset;\r\n            }\r\n            return null;\r\n        }\r\n        return this._canReadSubset;\r\n    }\r\n    set canReadSubset(value) {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(!this._resolution);\r\n        this._canReadSubset = value;\r\n    }\r\n    get hasConstraint() {\r\n        return this._canReadSubset !== null || this._canWriteSuperset !== null;\r\n    }\r\n    canEnsureResolved() {\r\n        if (this._resolution) {\r\n            return this._resolution.canEnsureResolved();\r\n        }\r\n        if (this._canWriteSuperset || this._canReadSubset) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    maybeEnsureResolved() {\r\n        if (this._resolution) {\r\n            return this._resolution.maybeEnsureResolved();\r\n        }\r\n        if (this._canWriteSuperset) {\r\n            this.resolution = this._canWriteSuperset;\r\n            return true;\r\n        }\r\n        if (this._canReadSubset) {\r\n            this.resolution = this._canReadSubset;\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    toLiteral() {\r\n        Object(_platform_assert_web_js__WEBPACK_IMPORTED_MODULE_1__[\"assert\"])(this.resolution == null);\r\n        return this.toLiteralIgnoringResolutions();\r\n    }\r\n    toLiteralIgnoringResolutions() {\r\n        return {\r\n            name: this.name,\r\n            canWriteSuperset: this._canWriteSuperset && this._canWriteSuperset.toLiteral(),\r\n            canReadSubset: this._canReadSubset && this._canReadSubset.toLiteral()\r\n        };\r\n    }\r\n    static fromLiteral(data) {\r\n        return new TypeVariable(data.name, data.canWriteSuperset ? _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].fromLiteral(data.canWriteSuperset) : null, data.canReadSubset ? _type_js__WEBPACK_IMPORTED_MODULE_0__[\"Type\"].fromLiteral(data.canReadSubset) : null);\r\n    }\r\n    isResolved() {\r\n        return (this._resolution && this._resolution.isResolved());\r\n    }\r\n}\r\n//# sourceMappingURL=type-variable.js.map\n\n/***/ }),\n\n/***/ \"./runtime/ts-build/type.js\":\n/*!**********************************!*\\\n  !*** ./runtime/ts-build/type.js ***!\n  \\**********************************/\n/*! exports provided: Type, EntityType, VariableType, CollectionType, BigCollectionType, RelationType, InterfaceType, SlotType, ReferenceType, ArcInfoType, HandleInfoType */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Type\", function() { return Type; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EntityType\", function() { return EntityType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"VariableType\", function() { return VariableType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CollectionType\", function() { return CollectionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BigCollectionType\", function() { return BigCollectionType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"RelationType\", function() { return RelationType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"InterfaceType\", function() { return InterfaceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SlotType\", function() { return SlotType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ReferenceType\", function() { return ReferenceType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ArcInfoType\", function() { return ArcInfoType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HandleInfoType\", function() { return HandleInfoType; });\n/* harmony import */ var _schema_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./schema.js */ \"./runtime/ts-build/schema.js\");\n/* harmony import */ var _type_variable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./type-variable.js */ \"./runtime/ts-build/type-variable.js\");\n/* harmony import */ var _shape_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shape.js */ \"./runtime/ts-build/shape.js\");\n/* harmony import */ var _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./recipe/type-checker.js */ \"./runtime/ts-build/recipe/type-checker.js\");\n// @license\r\n// Copyright (c) 2017 Google Inc. All rights reserved.\r\n// This code may only be used under the BSD style license found at\r\n// http://polymer.github.io/LICENSE.txt\r\n// Code distributed by Google as part of this project is also\r\n// subject to an additional IP rights grant found at\r\n// http://polymer.github.io/PATENTS.txt\r\n\r\n\r\n\r\n\r\nclass Type {\r\n    constructor(tag, data) {\r\n        this.tag = tag;\r\n        this.data = data;\r\n    }\r\n    // TODO: remove these; callers can directly construct the classes now\r\n    static newEntity(entity) {\r\n        return new EntityType(entity);\r\n    }\r\n    static newVariable(variable) {\r\n        return new VariableType(variable);\r\n    }\r\n    static newCollection(collection) {\r\n        return new CollectionType(collection);\r\n    }\r\n    static newBigCollection(bigCollection) {\r\n        return new BigCollectionType(bigCollection);\r\n    }\r\n    static newRelation(relation) {\r\n        return new RelationType(relation);\r\n    }\r\n    static newInterface(iface) {\r\n        return new InterfaceType(iface);\r\n    }\r\n    static newSlot(slot) {\r\n        return new SlotType(slot);\r\n    }\r\n    static newReference(reference) {\r\n        return new ReferenceType(reference);\r\n    }\r\n    static newArcInfo() {\r\n        return new ArcInfoType();\r\n    }\r\n    static newHandleInfo() {\r\n        return new HandleInfoType();\r\n    }\r\n    static fromLiteral(literal) {\r\n        switch (literal.tag) {\r\n            case 'Entity':\r\n                return new EntityType(_schema_js__WEBPACK_IMPORTED_MODULE_0__[\"Schema\"].fromLiteral(literal.data));\r\n            case 'Variable':\r\n                return new VariableType(_type_variable_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeVariable\"].fromLiteral(literal.data));\r\n            case 'Collection':\r\n                return new CollectionType(Type.fromLiteral(literal.data));\r\n            case 'BigCollection':\r\n                return new BigCollectionType(Type.fromLiteral(literal.data));\r\n            case 'Relation':\r\n                return new RelationType(literal.data);\r\n            case 'Interface':\r\n                return new InterfaceType(_shape_js__WEBPACK_IMPORTED_MODULE_2__[\"Shape\"].fromLiteral(literal.data));\r\n            case 'Slot':\r\n                return new SlotType(literal.data);\r\n            case 'Reference':\r\n                return new ReferenceType(Type.fromLiteral(literal.data));\r\n            case 'ArcInfo':\r\n                return new ArcInfoType();\r\n            case 'HandleInfo':\r\n                return new HandleInfoType();\r\n            default:\r\n                throw new Error(`fromLiteral: unknown type ${literal}`);\r\n        }\r\n    }\r\n    static unwrapPair(type1, type2) {\r\n        if (type1.tag === type2.tag) {\r\n            const contained1 = type1.getContainedType();\r\n            if (contained1 !== null) {\r\n                return Type.unwrapPair(contained1, type2.getContainedType());\r\n            }\r\n        }\r\n        return [type1, type2];\r\n    }\r\n    /** Tests whether two types' constraints are compatible with each other. */\r\n    static canMergeConstraints(type1, type2) {\r\n        return Type._canMergeCanReadSubset(type1, type2) && Type._canMergeCanWriteSuperset(type1, type2);\r\n    }\r\n    static _canMergeCanReadSubset(type1, type2) {\r\n        if (type1.canReadSubset && type2.canReadSubset) {\r\n            if (type1.canReadSubset.tag !== type2.canReadSubset.tag) {\r\n                return false;\r\n            }\r\n            if (type1.canReadSubset instanceof EntityType) {\r\n                return _schema_js__WEBPACK_IMPORTED_MODULE_0__[\"Schema\"].intersect(type1.canReadSubset.entitySchema, type2.canReadSubset.entitySchema) !== null;\r\n            }\r\n            throw new Error(`_canMergeCanReadSubset not implemented for types tagged with ${type1.canReadSubset.tag}`);\r\n        }\r\n        return true;\r\n    }\r\n    static _canMergeCanWriteSuperset(type1, type2) {\r\n        if (type1.canWriteSuperset && type2.canWriteSuperset) {\r\n            if (type1.canWriteSuperset.tag !== type2.canWriteSuperset.tag) {\r\n                return false;\r\n            }\r\n            if (type1.canWriteSuperset instanceof EntityType) {\r\n                return _schema_js__WEBPACK_IMPORTED_MODULE_0__[\"Schema\"].union(type1.canWriteSuperset.entitySchema, type2.canWriteSuperset.entitySchema) !== null;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    // TODO: update call sites to use the type checker instead (since they will\r\n    // have additional information about direction etc.)\r\n    equals(type) {\r\n        return _recipe_type_checker_js__WEBPACK_IMPORTED_MODULE_3__[\"TypeChecker\"].compareTypes({ type: this }, { type });\r\n    }\r\n    isResolved() {\r\n        // TODO: one of these should not exist.\r\n        return !this.hasUnresolvedVariable;\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        return this;\r\n    }\r\n    _applyExistenceTypeTest(test) {\r\n        return test(this);\r\n    }\r\n    get hasVariable() {\r\n        return this._applyExistenceTypeTest(type => type instanceof VariableType);\r\n    }\r\n    get hasUnresolvedVariable() {\r\n        return this._applyExistenceTypeTest(type => type instanceof VariableType && !type.variable.isResolved());\r\n    }\r\n    primitiveType() {\r\n        return null;\r\n    }\r\n    getContainedType() {\r\n        return null;\r\n    }\r\n    isTypeContainer() {\r\n        return false;\r\n    }\r\n    collectionOf() {\r\n        return new CollectionType(this);\r\n    }\r\n    bigCollectionOf() {\r\n        return new BigCollectionType(this);\r\n    }\r\n    resolvedType() {\r\n        return this;\r\n    }\r\n    canEnsureResolved() {\r\n        return this.isResolved() || this._canEnsureResolved();\r\n    }\r\n    _canEnsureResolved() {\r\n        return true;\r\n    }\r\n    maybeEnsureResolved() {\r\n        return true;\r\n    }\r\n    get canWriteSuperset() {\r\n        throw new Error(`canWriteSuperset not implemented for ${this}`);\r\n    }\r\n    get canReadSubset() {\r\n        throw new Error(`canReadSubset not implemented for ${this}`);\r\n    }\r\n    isMoreSpecificThan(type) {\r\n        return this.tag === type.tag && this._isMoreSpecificThan(type);\r\n    }\r\n    _isMoreSpecificThan(type) {\r\n        throw new Error(`isMoreSpecificThan not implemented for ${this}`);\r\n    }\r\n    /**\r\n     * Clone a type object.\r\n     * When cloning multiple types, variables that were associated with the same name\r\n     * before cloning should still be associated after cloning. To maintain this\r\n     * property, create a Map() and pass it into all clone calls in the group.\r\n     */\r\n    clone(variableMap) {\r\n        // TODO: clean this up\r\n        const type = this.resolvedType();\r\n        if (type instanceof VariableType) {\r\n            if (variableMap.has(type.variable)) {\r\n                return new VariableType(variableMap.get(type.variable));\r\n            }\r\n            else {\r\n                const newTypeVariable = _type_variable_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeVariable\"].fromLiteral(type.variable.toLiteral());\r\n                variableMap.set(type.variable, newTypeVariable);\r\n                return new VariableType(newTypeVariable);\r\n            }\r\n        }\r\n        if (type.data['clone']) {\r\n            return Type.fromLiteral({ tag: type.tag, data: type.data['clone'](variableMap) });\r\n        }\r\n        return Type.fromLiteral(type.toLiteral());\r\n    }\r\n    /**\r\n     * Clone a type object, maintaining resolution information.\r\n     * This function SHOULD NOT BE USED at the type level. In order for type variable\r\n     * information to be maintained correctly, an entire context root needs to be\r\n     * cloned.\r\n     */\r\n    _cloneWithResolutions(variableMap) {\r\n        return Type.fromLiteral(this.toLiteral());\r\n    }\r\n    // tslint:disable-next-line: no-any\r\n    toLiteral() {\r\n        return this;\r\n    }\r\n    // TODO: is this the same as _applyExistenceTypeTest\r\n    hasProperty(property) {\r\n        return property(this) || this._hasProperty(property);\r\n    }\r\n    _hasProperty(property) {\r\n        return false;\r\n    }\r\n    toString(options = undefined) {\r\n        return this.tag;\r\n    }\r\n    getEntitySchema() {\r\n        return null;\r\n    }\r\n    toPrettyString() {\r\n        return null;\r\n    }\r\n}\r\nclass EntityType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get entitySchema() { return this.data; }\r\n    constructor(schema) {\r\n        super('Entity', schema);\r\n    }\r\n    // These type identifier methods are being left in place for non-runtime code.\r\n    get isEntity() {\r\n        return true;\r\n    }\r\n    get canWriteSuperset() {\r\n        return this;\r\n    }\r\n    get canReadSubset() {\r\n        return this;\r\n    }\r\n    _isMoreSpecificThan(type) {\r\n        return this.entitySchema.isMoreSpecificThan(type.entitySchema);\r\n    }\r\n    toLiteral() {\r\n        return { tag: this.tag, data: this.entitySchema.toLiteral() };\r\n    }\r\n    toString(options = undefined) {\r\n        return this.entitySchema.toInlineSchemaString(options);\r\n    }\r\n    getEntitySchema() {\r\n        return this.entitySchema;\r\n    }\r\n    toPrettyString() {\r\n        if (this.entitySchema.description.pattern) {\r\n            return this.entitySchema.description.pattern;\r\n        }\r\n        // Spit MyTypeFOO to My Type FOO\r\n        if (this.entitySchema.name) {\r\n            return this.entitySchema.name.replace(/([^A-Z])([A-Z])/g, '$1 $2')\r\n                .replace(/([A-Z][^A-Z])/g, ' $1')\r\n                .replace(/[\\s]+/g, ' ')\r\n                .trim();\r\n        }\r\n        return JSON.stringify(this.entitySchema.toLiteral());\r\n    }\r\n}\r\n// Yes, these names need fixing.\r\nclass VariableType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get variable() { return this.data; }\r\n    constructor(variable) {\r\n        super('Variable', variable);\r\n    }\r\n    get isVariable() {\r\n        return true;\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        const name = this.variable.name;\r\n        let variable = variableMap.get(name);\r\n        if (!variable) {\r\n            variable = this;\r\n            variableMap.set(name, this);\r\n        }\r\n        else if (variable instanceof VariableType) {\r\n            if (variable.variable.hasConstraint || this.variable.hasConstraint) {\r\n                const mergedConstraint = variable.variable.maybeMergeConstraints(this.variable);\r\n                if (!mergedConstraint) {\r\n                    throw new Error('could not merge type variables');\r\n                }\r\n            }\r\n        }\r\n        return variable;\r\n    }\r\n    resolvedType() {\r\n        return this.variable.resolution || this;\r\n    }\r\n    _canEnsureResolved() {\r\n        return this.variable.canEnsureResolved();\r\n    }\r\n    maybeEnsureResolved() {\r\n        return this.variable.maybeEnsureResolved();\r\n    }\r\n    get canWriteSuperset() {\r\n        return this.variable.canWriteSuperset;\r\n    }\r\n    get canReadSubset() {\r\n        return this.variable.canReadSubset;\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        if (variableMap.has(this.variable)) {\r\n            return new VariableType(variableMap.get(this.variable));\r\n        }\r\n        else {\r\n            const newTypeVariable = _type_variable_js__WEBPACK_IMPORTED_MODULE_1__[\"TypeVariable\"].fromLiteral(this.variable.toLiteralIgnoringResolutions());\r\n            if (this.variable.resolution) {\r\n                newTypeVariable.resolution = this.variable.resolution._cloneWithResolutions(variableMap);\r\n            }\r\n            if (this.variable._canReadSubset) {\r\n                newTypeVariable.canReadSubset = this.variable.canReadSubset._cloneWithResolutions(variableMap);\r\n            }\r\n            if (this.variable._canWriteSuperset) {\r\n                newTypeVariable.canWriteSuperset = this.variable.canWriteSuperset._cloneWithResolutions(variableMap);\r\n            }\r\n            variableMap.set(this.variable, newTypeVariable);\r\n            return new VariableType(newTypeVariable);\r\n        }\r\n    }\r\n    toLiteral() {\r\n        return this.variable.resolution ? this.variable.resolution.toLiteral()\r\n            : { tag: this.tag, data: this.variable.toLiteral() };\r\n    }\r\n    toString(options = undefined) {\r\n        return `~${this.variable.name}`;\r\n    }\r\n    getEntitySchema() {\r\n        return this.variable.isResolved() ? this.resolvedType().getEntitySchema() : null;\r\n    }\r\n    toPrettyString() {\r\n        return this.variable.isResolved() ? this.resolvedType().toPrettyString() : `[~${this.variable.name}]`;\r\n    }\r\n}\r\nclass CollectionType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get collectionType() { return this.data; }\r\n    constructor(collectionType) {\r\n        super('Collection', collectionType);\r\n    }\r\n    get isCollection() {\r\n        return true;\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        const primitiveType = this.collectionType;\r\n        const result = primitiveType.mergeTypeVariablesByName(variableMap);\r\n        return (result === primitiveType) ? this : result.collectionOf();\r\n    }\r\n    _applyExistenceTypeTest(test) {\r\n        return this.collectionType._applyExistenceTypeTest(test);\r\n    }\r\n    // TODO: remove this in favor of a renamed collectionType\r\n    primitiveType() {\r\n        return this.collectionType;\r\n    }\r\n    getContainedType() {\r\n        return this.collectionType;\r\n    }\r\n    isTypeContainer() {\r\n        return true;\r\n    }\r\n    resolvedType() {\r\n        const primitiveType = this.collectionType;\r\n        const resolvedPrimitiveType = primitiveType.resolvedType();\r\n        return (primitiveType !== resolvedPrimitiveType) ? resolvedPrimitiveType.collectionOf() : this;\r\n    }\r\n    _canEnsureResolved() {\r\n        return this.collectionType.canEnsureResolved();\r\n    }\r\n    maybeEnsureResolved() {\r\n        return this.collectionType.maybeEnsureResolved();\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        return new CollectionType(this.collectionType._cloneWithResolutions(variableMap));\r\n    }\r\n    toLiteral() {\r\n        return { tag: this.tag, data: this.collectionType.toLiteral() };\r\n    }\r\n    _hasProperty(property) {\r\n        return this.collectionType.hasProperty(property);\r\n    }\r\n    toString(options = undefined) {\r\n        return `[${this.collectionType.toString(options)}]`;\r\n    }\r\n    getEntitySchema() {\r\n        return this.collectionType.getEntitySchema();\r\n    }\r\n    toPrettyString() {\r\n        const entitySchema = this.getEntitySchema();\r\n        if (entitySchema && entitySchema.description.plural) {\r\n            return entitySchema.description.plural;\r\n        }\r\n        return `${this.collectionType.toPrettyString()} List`;\r\n    }\r\n}\r\nclass BigCollectionType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get bigCollectionType() { return this.data; }\r\n    constructor(bigCollectionType) {\r\n        super('BigCollection', bigCollectionType);\r\n    }\r\n    get isBigCollection() {\r\n        return true;\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        const primitiveType = this.bigCollectionType;\r\n        const result = primitiveType.mergeTypeVariablesByName(variableMap);\r\n        return (result === primitiveType) ? this : result.bigCollectionOf();\r\n    }\r\n    _applyExistenceTypeTest(test) {\r\n        return this.bigCollectionType._applyExistenceTypeTest(test);\r\n    }\r\n    getContainedType() {\r\n        return this.bigCollectionType;\r\n    }\r\n    isTypeContainer() {\r\n        return true;\r\n    }\r\n    resolvedType() {\r\n        const primitiveType = this.bigCollectionType;\r\n        const resolvedPrimitiveType = primitiveType.resolvedType();\r\n        return (primitiveType !== resolvedPrimitiveType) ? resolvedPrimitiveType.bigCollectionOf() : this;\r\n    }\r\n    _canEnsureResolved() {\r\n        return this.bigCollectionType.canEnsureResolved();\r\n    }\r\n    maybeEnsureResolved() {\r\n        return this.bigCollectionType.maybeEnsureResolved();\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        return new BigCollectionType(this.bigCollectionType._cloneWithResolutions(variableMap));\r\n    }\r\n    toLiteral() {\r\n        return { tag: this.tag, data: this.bigCollectionType.toLiteral() };\r\n    }\r\n    _hasProperty(property) {\r\n        return this.bigCollectionType.hasProperty(property);\r\n    }\r\n    toString(options = undefined) {\r\n        return `BigCollection<${this.bigCollectionType.toString(options)}>`;\r\n    }\r\n    getEntitySchema() {\r\n        return this.bigCollectionType.getEntitySchema();\r\n    }\r\n    toPrettyString() {\r\n        const entitySchema = this.getEntitySchema();\r\n        if (entitySchema && entitySchema.description.plural) {\r\n            return entitySchema.description.plural;\r\n        }\r\n        return `Collection of ${this.bigCollectionType.toPrettyString()}`;\r\n    }\r\n}\r\nclass RelationType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get relationEntities() { return this.data; }\r\n    constructor(relation) {\r\n        super('Relation', relation);\r\n    }\r\n    get isRelation() {\r\n        return true;\r\n    }\r\n    toPrettyString() {\r\n        return JSON.stringify(this.relationEntities);\r\n    }\r\n}\r\nclass InterfaceType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get interfaceShape() { return this.data; }\r\n    constructor(iface) {\r\n        super('Interface', iface);\r\n    }\r\n    get isInterface() {\r\n        return true;\r\n    }\r\n    mergeTypeVariablesByName(variableMap) {\r\n        const shape = this.interfaceShape.clone(new Map());\r\n        shape.mergeTypeVariablesByName(variableMap);\r\n        // TODO: only build a new type when a variable is modified\r\n        return new InterfaceType(shape);\r\n    }\r\n    _applyExistenceTypeTest(test) {\r\n        return this.interfaceShape._applyExistenceTypeTest(test);\r\n    }\r\n    resolvedType() {\r\n        return new InterfaceType(this.interfaceShape.resolvedType());\r\n    }\r\n    _canEnsureResolved() {\r\n        return this.interfaceShape.canEnsureResolved();\r\n    }\r\n    maybeEnsureResolved() {\r\n        return this.interfaceShape.maybeEnsureResolved();\r\n    }\r\n    get canWriteSuperset() {\r\n        return new InterfaceType(this.interfaceShape.canWriteSuperset);\r\n    }\r\n    get canReadSubset() {\r\n        return new InterfaceType(this.interfaceShape.canReadSubset);\r\n    }\r\n    _isMoreSpecificThan(type) {\r\n        return this.interfaceShape.isMoreSpecificThan(type.interfaceShape);\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        return new InterfaceType(this.interfaceShape._cloneWithResolutions(variableMap));\r\n    }\r\n    toLiteral() {\r\n        return { tag: this.tag, data: this.interfaceShape.toLiteral() };\r\n    }\r\n    toString(options = undefined) {\r\n        return this.interfaceShape.name;\r\n    }\r\n    toPrettyString() {\r\n        return this.interfaceShape.toPrettyString();\r\n    }\r\n}\r\nclass SlotType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get slot() { return this.data; }\r\n    constructor(slot) {\r\n        super('Slot', slot);\r\n    }\r\n    get isSlot() {\r\n        return true;\r\n    }\r\n    get canWriteSuperset() {\r\n        return this;\r\n    }\r\n    get canReadSubset() {\r\n        return this;\r\n    }\r\n    _isMoreSpecificThan(type) {\r\n        // TODO: formFactor checking, etc.\r\n        return true;\r\n    }\r\n    toString(options = undefined) {\r\n        const fields = [];\r\n        for (const key of Object.keys(this.slot)) {\r\n            if (this.slot[key] !== undefined) {\r\n                fields.push(`${key}:${this.slot[key]}`);\r\n            }\r\n        }\r\n        let fieldsString = '';\r\n        if (fields.length !== 0) {\r\n            fieldsString = ` {${fields.join(', ')}}`;\r\n        }\r\n        return `Slot${fieldsString}`;\r\n    }\r\n    toPrettyString() {\r\n        const fields = [];\r\n        for (const key of Object.keys(this.slot)) {\r\n            if (this.slot[key] !== undefined) {\r\n                fields.push(`${key}:${this.slot[key]}`);\r\n            }\r\n        }\r\n        let fieldsString = '';\r\n        if (fields.length !== 0) {\r\n            fieldsString = ` {${fields.join(', ')}}`;\r\n        }\r\n        return `Slot${fieldsString}`;\r\n    }\r\n}\r\nclass ReferenceType extends Type {\r\n    // TODO: replace with a member var once data has been removed\r\n    get referredType() { return this.data; }\r\n    constructor(reference) {\r\n        super('Reference', reference);\r\n    }\r\n    get isReference() {\r\n        return true;\r\n    }\r\n    getContainedType() {\r\n        return this.referredType;\r\n    }\r\n    isTypeContainer() {\r\n        return true;\r\n    }\r\n    resolvedType() {\r\n        const primitiveType = this.referredType;\r\n        const resolvedPrimitiveType = primitiveType.resolvedType();\r\n        return (primitiveType !== resolvedPrimitiveType) ? new ReferenceType(resolvedPrimitiveType) : this;\r\n    }\r\n    _canEnsureResolved() {\r\n        return this.referredType.canEnsureResolved();\r\n    }\r\n    maybeEnsureResolved() {\r\n        return this.referredType.maybeEnsureResolved();\r\n    }\r\n    get canReadSubset() {\r\n        return this.referredType.canReadSubset;\r\n    }\r\n    _cloneWithResolutions(variableMap) {\r\n        return new ReferenceType(this.referredType._cloneWithResolutions(variableMap));\r\n    }\r\n    toLiteral() {\r\n        return { tag: this.tag, data: this.referredType.toLiteral() };\r\n    }\r\n    toString(options = undefined) {\r\n        return 'Reference<' + this.referredType.toString() + '>';\r\n    }\r\n}\r\nclass ArcInfoType extends Type {\r\n    constructor() {\r\n        super('ArcInfo', null);\r\n    }\r\n    get isArcInfo() {\r\n        return true;\r\n    }\r\n}\r\nclass HandleInfoType extends Type {\r\n    constructor() {\r\n        super('HandleInfo', null);\r\n    }\r\n    get isHandleInfo() {\r\n        return true;\r\n    }\r\n}\r\n//# sourceMappingURL=type.js.map\n\n/***/ }),\n\n/***/ \"./shell/components/xen/xen-state.js\":\n/*!*******************************************!*\\\n  !*** ./shell/components/xen/xen-state.js ***!\n  \\*******************************************/\n/*! exports provided: XenStateMixin, nob, debounce */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XenStateMixin\", function() { return XenStateMixin; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"nob\", function() { return nob; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"debounce\", function() { return debounce; });\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nconst nob = () => Object.create(null);\n\nconst debounce = (key, action, delay) => {\n  if (key) {\n    clearTimeout(key);\n  }\n  if (action && delay) {\n    return setTimeout(action, delay);\n  }\n};\n\nconst XenStateMixin = Base => class extends Base {\n  constructor() {\n    super();\n    this._pendingProps = nob();\n    this._props = this._getInitialProps() || nob();\n    this._lastProps = nob();\n    this._state = this._getInitialState() || nob();\n    this._lastState = nob();\n  }\n  _getInitialProps() {\n  }\n  _getInitialState() {\n  }\n  _getProperty(name) {\n    return this._pendingProps[name] || this._props[name];\n  }\n  _setProperty(name, value) {\n    // dirty checking opportunity\n    if (this._validator || this._wouldChangeProp(name, value)) {\n      this._pendingProps[name] = value;\n      this._invalidateProps();\n    }\n  }\n  _wouldChangeValue(map, name, value) {\n    // TODO(sjmiles): fundamental dirty-checking issue here. Can be overridden to change\n    // behavior, but the default implementation will use strict reference checking.\n    // To modify structured values one must create a new Object with the new values.\n    // See `_setImmutableState`.\n    return (map[name] !== value);\n    // TODO(sjmiles): an example of dirty-checking that instead simply punts on structured data\n    //return (typeof value === 'object') || (map[name] !== value);\n  }\n  _wouldChangeProp(name, value) {\n    return this._wouldChangeValue(this._props, name, value);\n  }\n  _wouldChangeState(name, value) {\n    return this._wouldChangeValue(this._state, name, value);\n  }\n  _setProps(props) {\n    // TODO(sjmiles): should be a replace instead of a merge?\n    Object.assign(this._pendingProps, props);\n    this._invalidateProps();\n  }\n  _invalidateProps() {\n    this._propsInvalid = true;\n    this._invalidate();\n  }\n  _setImmutableState(name, value) {\n    if (typeof name === 'object') {\n      console.warn('Xen:: _setImmutableState takes name and value args for a single property, dictionaries not supported.');\n      value = Object.values(name)[0];\n      name = Object.names(name)[0];\n    }\n    if (typeof value === 'object') {\n      value = Object.assign(Object.create(null), value);\n    }\n    this._state[name] = value;\n    this._invalidate();\n  }\n  _setState(object) {\n    let dirty = false;\n    const state = this._state;\n    for (const property in object) {\n      const value = object[property];\n      if (this._wouldChangeState(property, value)) {\n        dirty = true;\n        state[property] = value;\n      }\n    }\n    if (dirty) {\n      this._invalidate();\n      return true;\n    }\n  }\n  // TODO(sjmiles): deprecated\n  _setIfDirty(object) {\n    return this._setState(object);\n  }\n  _async(fn) {\n    return Promise.resolve().then(fn.bind(this));\n    //return setTimeout(fn.bind(this), 10);\n  }\n  _invalidate() {\n    if (!this._validator) {\n      this._validator = this._async(this._validate);\n    }\n  }\n  _getStateArgs() {\n    return [this._props, this._state, this._lastProps, this._lastState];\n  }\n  _validate() {\n    const stateArgs = this._getStateArgs();\n    // try..catch to ensure we nullify `validator` before return\n    try {\n      // TODO(sjmiles): should be a replace instead of a merge\n      Object.assign(this._props, this._pendingProps);\n      if (this._propsInvalid) {\n        // TODO(sjmiles): should/can have different timing from rendering?\n        this._willReceiveProps(...stateArgs);\n        this._propsInvalid = false;\n      }\n      if (this._shouldUpdate(...stateArgs)) {\n        // TODO(sjmiles): consider throttling update to rAF\n        this._ensureMount();\n        this._doUpdate(...stateArgs);\n      }\n    } catch (x) {\n      console.error(x);\n    }\n    // nullify validator _after_ methods so state changes don't reschedule validation\n    this._validator = null;\n    // save the old props and state\n    this._lastProps = Object.assign(nob(), this._props);\n    this._lastState = Object.assign(nob(), this._state);\n  }\n  _doUpdate(...stateArgs) {\n    this._update(...stateArgs);\n    this._didUpdate(...stateArgs);\n  }\n  _ensureMount() {\n  }\n  _willReceiveProps() {\n  }\n  _shouldUpdate() {\n    return true;\n  }\n  _update() {\n  }\n  _didUpdate() {\n  }\n  _debounce(key, func, delay) {\n    key = `_debounce_${key}`;\n    this._state[key] = debounce(this._state[key], func, delay != null ? delay : 16);\n  }\n};\n\n\n\n\n/***/ }),\n\n/***/ \"./shell/source/browser-loader.js\":\n/*!****************************************!*\\\n  !*** ./shell/source/browser-loader.js ***!\n  \\****************************************/\n/*! exports provided: BrowserLoader */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BrowserLoader\", function() { return BrowserLoader; });\n/* harmony import */ var _runtime_ts_build_loader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/ts-build/loader.js */ \"./runtime/ts-build/loader.js\");\n/* harmony import */ var _runtime_ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../runtime/ts-build/particle.js */ \"./runtime/ts-build/particle.js\");\n/* harmony import */ var _runtime_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../runtime/dom-particle.js */ \"./runtime/dom-particle.js\");\n/* harmony import */ var _runtime_multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../runtime/multiplexer-dom-particle.js */ \"./runtime/multiplexer-dom-particle.js\");\n/* harmony import */ var _runtime_transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../runtime/transformation-dom-particle.js */ \"./runtime/transformation-dom-particle.js\");\n/**\n * @license\n * Copyright (c) 2017 Google Inc. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * Code distributed by Google as part of this project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n\n\n\n\n\n\nconst logFactory = (preamble, color, log='log') => console[log].bind(console, `%c${preamble} [Particle]`, `background: ${color}; color: white; padding: 1px 6px 2px 7px; border-radius: 4px;`);\nconst html = (strings, ...values) => (strings[0] + values.map((v, i) => v + strings[i + 1]).join('')).trim();\n\nconst dumbCache = {};\n\nclass BrowserLoader extends _runtime_ts_build_loader_js__WEBPACK_IMPORTED_MODULE_0__[\"Loader\"] {\n  constructor(urlMap) {\n    super();\n    this._urlMap = urlMap;\n  }\n  _loadURL(url) {\n    const resolved = this._resolve(url);\n    // use URL to normalize the path for deduping\n    const cacheKey = new URL(resolved, document.URL).href;\n    // console.log(`browser-loader::_loadURL`);\n    // console.log(`    ${url}`);\n    // console.log(`    ${resolved}`);\n    // console.log(`    ${cacheKey}`);\n    const resource = dumbCache[cacheKey];\n    return resource || (dumbCache[cacheKey] = super._loadURL(resolved));\n  }\n  loadResource(name) {\n    // subclass impl differentiates paths and URLs,\n    // for browser env we can feed both kinds into _loadURL\n    return this._loadURL(name);\n  }\n  _resolve(path) {\n    //return new URL(path, this._base).href;\n    let url = this._urlMap[path];\n    if (!url && path) {\n      // TODO(sjmiles): inefficient!\n      const macro = Object.keys(this._urlMap).sort((a, b) => b.length - a.length).find(k => path.slice(0, k.length) == k);\n      if (macro) {\n        url = this._urlMap[macro] + path.slice(macro.length);\n      }\n    }\n    url = url || path;\n    //console.log(`browser-loader: resolve(${path}) = ${url}`);\n    return url;\n  }\n  requireParticle(fileName) {\n    const path = this._resolve(fileName);\n    //console.log(`requireParticle [${path}]`);\n    // inject path to this particle into the UrlMap,\n    // allows \"foo.js\" particle to invoke `importScripts(resolver('foo/othermodule.js'))`\n    this.mapParticleUrl(path);\n    const result = [];\n    self.defineParticle = function(particleWrapper) {\n      result.push(particleWrapper);\n    };\n    importScripts(path);\n    delete self.defineParticle;\n    const logger = logFactory(fileName.split('/').pop(), '#1faa00');\n    return this.unwrapParticle(result[0], logger);\n  }\n  mapParticleUrl(path) {\n    const parts = path.split('/');\n    const suffix = parts.pop();\n    const folder = parts.join('/');\n    const name = suffix.split('.').shift();\n    this._urlMap[name] = folder;\n  }\n  unwrapParticle(particleWrapper, log) {\n    // TODO(sjmiles): regarding `resolver`:\n    //  _resolve method allows particles to request remapping of assets paths\n    //  for use in DOM\n    const resolver = this._resolve.bind(this);\n    // TODO(sjmiles): hack to plumb `fetch` into Particle space under node\n    const _fetch = BrowserLoader.fetch || fetch;\n    return particleWrapper({\n      Particle: _runtime_ts_build_particle_js__WEBPACK_IMPORTED_MODULE_1__[\"Particle\"],\n      DomParticle: _runtime_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__[\"DomParticle\"],\n      MultiplexerDomParticle: _runtime_multiplexer_dom_particle_js__WEBPACK_IMPORTED_MODULE_3__[\"MultiplexerDomParticle\"],\n      SimpleParticle: _runtime_dom_particle_js__WEBPACK_IMPORTED_MODULE_2__[\"DomParticle\"],\n      TransformationDomParticle: _runtime_transformation_dom_particle_js__WEBPACK_IMPORTED_MODULE_4__[\"TransformationDomParticle\"],\n      resolver,\n      log,\n      html,\n      _fetch\n    });\n  }\n}\n\n\n/***/ }),\n\n/***/ \"./shell/source/worker-entry.js\":\n/*!**************************************!*\\\n  !*** ./shell/source/worker-entry.js ***!\n  \\**************************************/\n/*! no exports provided */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _runtime_ts_build_particle_execution_context_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../runtime/ts-build/particle-execution-context.js */ \"./runtime/ts-build/particle-execution-context.js\");\n/* harmony import */ var _browser_loader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./browser-loader.js */ \"./shell/source/browser-loader.js\");\n// @license\n// Copyright (c) 2017 Google Inc. All rights reserved.\n// This code may only be used under the BSD style license found at\n// http://polymer.github.io/LICENSE.txt\n// Code distributed by Google as part of this project is also\n// subject to an additional IP rights grant found at\n// http://polymer.github.io/PATENTS.txt\n\n\n\n\nconst log = console.log.bind(console, `%cworker-entry`, `background: #12005e; color: white; padding: 1px 6px 2px 7px; border-radius: 6px;`);\n\nself.onmessage = function(e) {\n  self.onmessage = null;\n  const {id, base} = e.data;\n  //log('starting worker', id);\n  new _runtime_ts_build_particle_execution_context_js__WEBPACK_IMPORTED_MODULE_0__[\"ParticleExecutionContext\"](e.ports[0], id, new _browser_loader_js__WEBPACK_IMPORTED_MODULE_1__[\"BrowserLoader\"](base));\n};\n\n\n/***/ })\n\n/******/ });\n//# sourceMappingURL=worker-entry.js.map"],"sourceRoot":""}