import '../Infer.arcs'
import '../Dispose.arcs'
import '../ExpandDims.arcs'
import '../ImageToTensor.arcs'
import '../ResizeBilinear.arcs'
import '../LoadModel.arcs'
import '../Normalize.arcs'
import '../ParseLabels.arcs'
import '../Reshape.arcs'
import '../TopLabels.arcs'
import '../ImageSelector.arcs'
import '../PresentLabel.arcs'
import '../ModelSelector.arcs'

import './ClassifierStatics.arcs'

recipe ImageClassifierUINoSpec
  // since we `use`, this recipe is incomplete and coalescer is triggered
  imgUrl: use *
  predictions: use *

  ImageSelector
    image: writes imgUrl

  PresentLabel
    predictions: reads predictions

  description `image classification`

recipe ImageClassifierRoutineNoSpec
  // find a model specification
  modelSpec: map *

  // static values from ClassifierStatics.manifest
  targetSize: map 'targetImageSize'
  resizeOptions: map 'resizeOptions'
  range: map 'imagePixelRange'
  batchShape: map 'batchShape'

  // working handles
  model: create #volatile
  imageTensor: create #volatile
  normTensor: create #volatile
  resizedImages: create #volatile
  reshapedImages: create #volatile
  yHat: create #volatile
  predictions: create #volatile
  labels: create #volatile
  imgUrl: create #volatile

  LoadGraphModel
    modelSpec: reads modelSpec
    model: writes model

  ParseLabels
    url: reads modelSpec
    labels: writes labels

  ImageToTensor
    image: reads imgUrl
    imageTensor: writes imageTensor

  Normalize
    tensor: reads imageTensor
    range: reads range
    normTensor: writes normTensor

  ResizeBilinear
    images: reads normTensor
    size: reads targetSize
    options: reads resizeOptions
    resizedImages: writes resizedImages

  Reshape
    tensor: reads resizedImages
    shape: reads batchShape
    newTensor: writes reshapedImages

  Infer
    tensor: reads reshapedImages
    model: reads model
    yHat: writes yHat

  TopLabels
    yHat: reads yHat
    labels: reads labels
    predictions: writes predictions

  description `${LoadGraphModel.modelSpec}`
