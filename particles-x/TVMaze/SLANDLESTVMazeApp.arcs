import 'particles/SLANDLESTVMazeSearchBar.arcs'
import 'particles/SLANDLESTVMazeSearchShows.arcs'
import 'particles/SLANDLESTVMazeShowTile.arcs'
import 'particles/SLANDLESTVMazeShowPanel.arcs'
import 'particles/SLANDLESTVMazeShowActions.arcs'
import 'particles/SLANDLESTVMazeDeduplicate.arcs'
import 'particles/SLANDLESTVMazeAppShell.arcs'
import '../List/SLANDLESList.arcs'
import '../Layout/SLANDLESDetail.arcs'

recipe SlandleTVMazeApp
  // all shows shared with me
  boxedShows: map 'BOXED_shows-tiles'
  // filter out 'my' shows from boxedShows using user.id
  user: map 'SYSTEM_user'
  // why not just use profile instead of above?
  profileShows: map 'PROFILE_shows-tiles'
  // all shows I've looked at on my device
  allPipedShows: map 'PROFILE_all_piped-all_tv_shows'
  // most recent show(s)
  //pipedShows: map 'PROFILE_piped-tv_show'
  pipedShows: create #volatile
  // selected show (for detail)
  selected: create #volatile #selected
  // shows that this arc wants to be part of BOXED_shows-tile (if this arc is shared)
  myshows: create #shows #tiles
  // search results
  foundshows: create #volatile #found
  // friends ids
  friends: map 'PROFILE_friends'
  // all the userNames
  boxedUserNames: map 'BOXED_userName'
  // friends also watching selected show
  watchers: create #volatile #watchers
  // text about friends watching selected show
  alsoWatch: create #volatile #alsoWatch
  // internal description storage
  descriptions: create #volatile
  //
  SlandleTVMazeAppShell
    user: user
    boxedShows: boxedShows
    selected: selected
    recentShows: pipedShows
    foundShows: foundshows
    boxedUserNames: boxedUserNames
    friends: friends
    watchers: watchers
    watcherText: alsoWatch
    descriptions: descriptions
    root: `consumes root
      recommended: `provides recommended
      shows: `provides shows
      searchbar: `provides searchbar
      search: `provides search
  //
  // slot `shows` holds my primary show list
  uniqueProfileShows: create #volatile #uniqueProfile
  SlandleTVMazeDeduplicate
    shows: profileShows
    uniqueShows: uniqueProfileShows
  SlandleSelectableTiles
    root: `consumes shows
      tile: `provides tile1
      annotation: `provides action1
    list: uniqueProfileShows
    selected: selected
  SlandleTileMultiplexer
    list: uniqueProfileShows
    hostedParticle: SlandleTVMazeShowTile
    tile: `consumes tile1
  //
  // slot `recommended` holds recommendations
  // which are pulled from `allPipedShows`
  uniquePipedShows: create #volatile #uniquePiped
  SlandleTVMazeDeduplicate
    shows: allPipedShows
    uniqueShows: uniquePipedShows
  SlandleSelectableTiles
    root: `consumes recommended
      tile: `provides tile2
      annotation: `provides action2
    list: uniquePipedShows
    selected: selected
  SlandleTileMultiplexer
    tile: `consumes tile2
    list: uniquePipedShows
    hostedParticle: SlandleTVMazeShowTile
  SlandleActionMultiplexer
    action: `consumes action2
    list: uniquePipedShows
    shows: myshows
    hostedParticle: SlandleTVMazeShowActions
  //
  // slot `search` contains search ui
  query: create #volatile #query
  SlandleTVMazeSearchBar
    toproot: `consumes searchbar
    query: query
  SlandleTVMazeSearchShows
    query: query
    shows: foundshows
  SlandleSelectableTiles
    root: `consumes search
      tile: `provides tile3
      annotation: `provides action3
    list: foundshows
    selected: selected
  SlandleTileMultiplexer
    tile: `consumes tile3
    hostedParticle: SlandleTVMazeShowTile
    list: foundshows
  SlandleActionMultiplexer
    action: `consumes action3
    hostedParticle: SlandleTVMazeShowActions
    list: foundshows
    shows: myshows
  //
  // standard slot 'modal' holds detail view
  SlandleDetailSlider
    selected: selected
  SlandleTVMazeShowPanel
    show: selected
    alsoWatch: alsoWatch
  //
  description `${TVMazeAppShell}`
