language: node_js  # https://docs.travis-ci.com/user/languages/javascript-with-nodejs/
dist: xenial

# todo: remove this once travis fixes their upstream issue (travis-ci/travis-ci#8836)
sudo: required
addons:
  chrome: stable
git:
  depth: 5

before_install:
  - >
    if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
     tools/decrypt $ENCRYPT_KEY
    fi

# Thinking about adding install steps? Why not modify the tools/setup script instead?
# The list command dumps the top-level packages with their versions, in case we need that for debugging.
install:
  - ./tools/setup
  - npm list --depth=0

script:
  # Bazel build & test everything. Can't use `bazel build ...` yet, because
  # javaharness doesn't build on Travis (needs working Android SDK).
  - >
    if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      echo "Remote caching supported" && \
      bazel build \
      --remote_http_cache=https://storage.googleapis.com/arcs-bazel-build  \
      --google_credentials=tools/arcs-build-key.json \
      //particles/... //src/... //src_kt/...
    else
      echo "No Remote Caching" && \
      bazel build --noshow_progress --noshow_loading_progress //particles/... //src/... //src_kt/...
    fi
  - >
    if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      echo "Remote caching supported" && \
      bazel test --noshow_progress --noshow_loading_progress --test_output=errors \
      --remote_http_cache=https://storage.googleapis.com/arcs-bazel-build \
      --google_credentials=tools/arcs-build-key.json  \
      //particles/... //src/...  //src_kt/...
    else
      echo "No Remote Caching" && \
      bazel test --noshow_progress --noshow_loading_progress --test_output=errors \
      //particles/... //src/...  //src_kt/...
    fi
  - npm run test-no-web
  - npm run test-shells

cache: false

before_deploy:
  # build apidocs
  - cd ${TRAVIS_BUILD_DIR} && npm run build:typedoc
  # Travis pages deploys skips artifacts from .gitignore. We need some of those, so
  # remove them from .gitignore.
  - cd ${TRAVIS_BUILD_DIR} && sed -i.sedbackup -e '/^shells\/env\/build$/d' .gitignore
  - cd ${TRAVIS_BUILD_DIR} && sed -i.sedbackup -e '/^build$/d' .gitignore
  - cd ${TRAVIS_BUILD_DIR} && sed -i.sedbackup -e '/^devtools\/deps$/d' .gitignore
  - cd ${TRAVIS_BUILD_DIR} && sed -i.sedbackup -e '/^\*\*\/dist$/d' .gitignore
  - cd ${TRAVIS_BUILD_DIR} && git log -n 1 > VERSION
  # remove an inaccurate README from arcs-live
  - cd ${TRAVIS_BUILD_DIR} && rm README.md
  # Temporarily push node_modules to arcs-live,
  # with the exception of exe files as Github complains about them.
  - cd ${TRAVIS_BUILD_DIR} && sed -i.sedbackup -e 's/^\*\*\/node_modules$/\*\*\/node_modules\/\*\*\/\*\.exe/' .gitignore
  - cd ${TRAVIS_BUILD_DIR} && rm -f server/node_modules/arcs
  # Configure for live.arcs.dev domain name and default web-shells redirect
  - cd ${TRAVIS_BUILD_DIR} && echo "live.arcs.dev" > CNAME
  - cd ${TRAVIS_BUILD_DIR} && echo '<head><meta http-equiv="refresh" content="0;/shells/web-shell/"></head>' > index.html


deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GITHUB_TOKEN
  keep-history: true
  repo: PolymerLabs/arcs-live
  target_branch: master
  verbose: true
  on:
    branch: master

